<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>非鱼笔记</title>
  
  <subtitle>随手笔记 一个没技术含量的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.qzcool.com/"/>
  <updated>2021-04-14T03:10:03.022Z</updated>
  <id>https://blog.qzcool.com/</id>
  
  <author>
    <name>fredliu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx 之 proxy_pass详解</title>
    <link href="https://blog.qzcool.com/2021/04/14/nginx-%E4%B9%8B-proxy-pass%E8%AF%A6%E8%A7%A3/"/>
    <id>https://blog.qzcool.com/2021/04/14/nginx-%E4%B9%8B-proxy-pass%E8%AF%A6%E8%A7%A3/</id>
    <published>2021-04-14T03:06:40.000Z</published>
    <updated>2021-04-14T03:10:03.022Z</updated>
    
    <content type="html"><![CDATA[<p>在nginx中配置proxy_pass代理转发时，如果在proxy_pass后面的url加/，表示绝对根路径；如果没有/，表示相对路径，把匹配的路径部分也给代理走。</p><p>假设下面四种情况分别用 <a href="http://192.168.1.1/proxy/test.html" target="_blank" rel="noopener">http://192.168.1.1/proxy/test.html</a> 进行访问。</p><h2 id="第一种："><a href="#第一种：" class="headerlink" title="第一种："></a>第一种：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /proxy/ &#123;</span><br><span class="line">proxy_pass http://127.0.0.1/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代理到URL：<a href="http://127.0.0.1/test.html" target="_blank" rel="noopener">http://127.0.0.1/test.html</a></p><p>第二种（相对于第一种，最后少一个 / ）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /proxy/ &#123;</span><br><span class="line">proxy_pass http://127.0.0.1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代理到URL：<a href="http://127.0.0.1/proxy/test.html" target="_blank" rel="noopener">http://127.0.0.1/proxy/test.html</a></p><p>第三种：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /proxy/ &#123;</span><br><span class="line">proxy_pass http://127.0.0.1/aaa/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代理到URL：<a href="http://127.0.0.1/aaa/test.html" target="_blank" rel="noopener">http://127.0.0.1/aaa/test.html</a></p><p>第四种（相对于第三种，最后少一个 / ）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /proxy/ &#123;</span><br><span class="line">proxy_pass http://127.0.0.1/aaa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代理到URL：<a href="http://127.0.0.1/aaatest.html" target="_blank" rel="noopener">http://127.0.0.1/aaatest.html</a></p><p>nginx中有两个模块都有proxy_pass指令。</p><p>ngx_http_proxy_module的proxy_pass：<br>语法: proxy_pass URL;场景: location, if in location, limit_except说明: 设置后端代理服务器的协议(protocol)和地址(address),以及location中可以匹配的一个可选的URI。协议可以是”http”或”https”。地址可以是一个域名或ip地址和端口，或者一个 unix-domain socket 路径。  详见官方文档: <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_passURI的匹配，本文第四部分重点讨论。" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_passURI的匹配，本文第四部分重点讨论。</a><br>ngx_stream_proxy_module的proxy_pass：<br>语法: proxy_pass address;场景: server说明: 设置后端代理服务器的地址。这个地址(address)可以是一个域名或ip地址和端口，或者一个 unix-domain socket路径。  详见官方文档: <a href="http://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_pass" target="_blank" rel="noopener">http://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_pass</a></p><h2 id="二、两个proxy-pass的关系和区别"><a href="#二、两个proxy-pass的关系和区别" class="headerlink" title="二、两个proxy_pass的关系和区别"></a>二、两个proxy_pass的关系和区别</h2><p>在两个模块中，两个proxy_pass都是用来做后端代理的指令。<br>ngx_stream_proxy_module模块的proxy_pass指令只能在server段使用使用, 只需要提供域名或ip地址和端口。可以理解为端口转发，可以是tcp端口，也可以是udp端口。<br>ngx_http_proxy_module模块的proxy_pass指令需要在location段，location中的if段，limit_except段中使用，处理需要提供域名或ip地址和端口外，还需要提供协议，如”http”或”https”，还有一个可选的uri可以配置。</p><h2 id="三、proxy-pass的具体用法"><a href="#三、proxy-pass的具体用法" class="headerlink" title="三、proxy_pass的具体用法"></a>三、proxy_pass的具体用法</h2><p>ngx_stream_proxy_module模块的proxy_pass指令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 127.0.0.1:12345;</span><br><span class="line">    proxy_pass 127.0.0.1:8080;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server &#123;</span><br><span class="line">    listen 12345;</span><br><span class="line">    proxy_connect_timeout 1s;</span><br><span class="line">    proxy_timeout 1m;</span><br><span class="line">    proxy_pass example.com:12345;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server &#123;</span><br><span class="line">    listen 53 udp;</span><br><span class="line">    proxy_responses 1;</span><br><span class="line">    proxy_timeout 20s;</span><br><span class="line">    proxy_pass dns.example.com:53;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server &#123;</span><br><span class="line">    listen [::1]:12345;</span><br><span class="line">    proxy_pass unix:/tmp/stream.socket;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>ngx_http_proxy_module模块的proxy_pass指令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name www.test.com;</span><br><span class="line"> </span><br><span class="line">    # 正常代理，不修改后端url的</span><br><span class="line">    location /some/path/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # 修改后端url地址的代理（本例后端地址中，最后带了一个斜线)</span><br><span class="line">    location /testb &#123;</span><br><span class="line">        proxy_pass http://www.other.com:8801/;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # 使用 if in location</span><br><span class="line">    location /google &#123;</span><br><span class="line">        if ( $geoip_country_code ~ (RU|CN) ) &#123;</span><br><span class="line">            proxy_pass http://www.google.hk;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    location /yongfu/ &#123;</span><br><span class="line">        # 没有匹配 limit_except 的，代理到 unix:/tmp/backend.socket:/uri/</span><br><span class="line">        proxy_pass http://unix:/tmp/backend.socket:/uri/;;</span><br><span class="line"> </span><br><span class="line">        # 匹配到请求方法为: PUT or DELETE, 代理到9080</span><br><span class="line">        limit_except PUT DELETE &#123;</span><br><span class="line">            proxy_pass http://127.0.0.1:9080;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="四、proxy-pass后，后端服务器的url-request-uri-情况分析"><a href="#四、proxy-pass后，后端服务器的url-request-uri-情况分析" class="headerlink" title="四、proxy_pass后，后端服务器的url(request_uri)情况分析"></a>四、proxy_pass后，后端服务器的url(request_uri)情况分析</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name www.test.com;</span><br><span class="line"> </span><br><span class="line">    # 情形A</span><br><span class="line">    # 访问 http://www.test.com/testa/aaaa</span><br><span class="line">    # 后端的request_uri为: /testa/aaaa</span><br><span class="line">    location ^~ /testa/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8801;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    # 情形B</span><br><span class="line">    # 访问 http://www.test.com/testb/bbbb</span><br><span class="line">    # 后端的request_uri为: /bbbb</span><br><span class="line">    location ^~ /testb/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8801/;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # 情形C</span><br><span class="line">    # 下面这段location是正确的</span><br><span class="line">    location ~ /testc &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8801;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # 情形D</span><br><span class="line">    # 下面这段location是错误的</span><br><span class="line">    #</span><br><span class="line">    # nginx -t 时，会报如下错误: </span><br><span class="line">    #</span><br><span class="line">    # nginx: [emerg] &quot;proxy_pass&quot; cannot have URI part in location given by regular </span><br><span class="line">    # expression, or inside named location, or inside &quot;if&quot; statement, or inside </span><br><span class="line">    # &quot;limit_except&quot; block in /opt/app/nginx/conf/vhost/test.conf:17</span><br><span class="line">    # </span><br><span class="line">    # 当location为正则表达式时，proxy_pass 不能包含URI部分。本例中包含了&quot;/&quot;</span><br><span class="line">    location ~ /testd &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8801/;   # 记住，location为正则表达式时，不能这样写！！！</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # 情形E</span><br><span class="line">    # 访问 http://www.test.com/ccc/bbbb</span><br><span class="line">    # 后端的request_uri为: /aaa/ccc/bbbb</span><br><span class="line">    location /ccc/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8801/aaa$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # 情形F</span><br><span class="line">    # 访问 http://www.test.com/namea/ddd</span><br><span class="line">    # 后端的request_uri为: /yongfu?namea=ddd</span><br><span class="line">    location /namea/ &#123;</span><br><span class="line">        rewrite    /namea/([^/]+) /yongfu?namea=$1 break;</span><br><span class="line">        proxy_pass http://127.0.0.1:8801;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # 情形G</span><br><span class="line">    # 访问 http://www.test.com/nameb/eee</span><br><span class="line">    # 后端的request_uri为: /yongfu?nameb=eee</span><br><span class="line">    location /nameb/ &#123;</span><br><span class="line">        rewrite    /nameb/([^/]+) /yongfu?nameb=$1 break;</span><br><span class="line">        proxy_pass http://127.0.0.1:8801/;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    access_log /data/logs/www/www.test.com.log;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server &#123;</span><br><span class="line">    listen      8801;</span><br><span class="line">    server_name www.test.com;</span><br><span class="line">    </span><br><span class="line">    root        /data/www/test;</span><br><span class="line">    index       index.php index.html;</span><br><span class="line"> </span><br><span class="line">    rewrite ^(.*)$ /test.php?u=$1 last;</span><br><span class="line"> </span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        try_files $uri =404;</span><br><span class="line">        fastcgi_pass unix:/tmp/php-cgi.sock;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        include fastcgi.conf;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    access_log /data/logs/www/www.test.com.8801.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件: /data/www/test/test.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &apos;$_SERVER[REQUEST_URI]:&apos; . $_SERVER[&apos;REQUEST_URI&apos;];</span><br><span class="line">通过查看 $_SERVER[&apos;REQUEST_URI&apos;] 的值，我们可以看到每次请求的后端的request_uri的值，进行验证。</span><br></pre></td></tr></table></figure></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>情形A和情形B进行对比，可以知道proxy_pass后带一个URI,可以是斜杠(/)也可以是其他uri，对后端request_uri变量的影响。<br>情形D说明，当location为正则表达式时，proxy_pass不能包含URI部分。<br>情形E通过变量($request_uri, 也可以是其他变量)，对后端的request_uri进行改写。<br>情形F和情形G通过rewrite配合break标志,对url进行改写，并改写后端的request_uri。需要注意，proxy_pass地址的URI部分在情形G中无效，不管如何设置，都会被忽略。</p><p>作者：金星show<br>链接：<a href="https://www.jianshu.com/p/b010c9302cd0" target="_blank" rel="noopener">https://www.jianshu.com/p/b010c9302cd0</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在nginx中配置proxy_pass代理转发时，如果在proxy_pass后面的url加/，表示绝对根路径；如果没有/，表示相对路径，把匹配的路径部分也给代理走。&lt;/p&gt;
&lt;p&gt;假设下面四种情况分别用 &lt;a href=&quot;http://192.168.1.1/proxy/t
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派不带图形化界面系统安装桌面GUI及其管理服务</title>
    <link href="https://blog.qzcool.com/2021/04/14/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8D%E5%B8%A6%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2GUI%E5%8F%8A%E5%85%B6%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1/"/>
    <id>https://blog.qzcool.com/2021/04/14/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8D%E5%B8%A6%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2GUI%E5%8F%8A%E5%85%B6%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1/</id>
    <published>2021-04-14T01:04:13.000Z</published>
    <updated>2021-04-14T01:11:46.983Z</updated>
    
    <content type="html"><![CDATA[<p>树莓派P4桌面无法登录处理.   </p><h2 id="1、依次安装Xorg、xinit，加-y参数安装过程自动确认"><a href="#1、依次安装Xorg、xinit，加-y参数安装过程自动确认" class="headerlink" title="1、依次安装Xorg、xinit，加-y参数安装过程自动确认"></a>1、依次安装Xorg、xinit，加-y参数安装过程自动确认</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install --no-install-recommends xserver-xorg -y</span><br><span class="line">sudo apt-get install --no-install-recommends xinit -y</span><br></pre></td></tr></table></figure><h2 id="2、安装桌面GUI类型"><a href="#2、安装桌面GUI类型" class="headerlink" title="2、安装桌面GUI类型"></a>2、安装桌面GUI类型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Raspberry Pi Desktop (RPD) GUI</span><br><span class="line"></span><br><span class="line">sudo apt-get install raspberrypi-ui-mods -y</span><br></pre></td></tr></table></figure><p>LXDE GUI<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install lxde-core lxappearance  -y</span><br></pre></td></tr></table></figure></p><p>XFCE GUI<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install xfce4 xfce4-terminal -y</span><br></pre></td></tr></table></figure></p><h2 id="3、安装登陆管理器"><a href="#3、安装登陆管理器" class="headerlink" title="3、安装登陆管理器"></a>3、安装登陆管理器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install lightdm</span><br></pre></td></tr></table></figure><h2 id="4、设置自动进入桌面"><a href="#4、设置自动进入桌面" class="headerlink" title="4、设置自动进入桌面"></a>4、设置自动进入桌面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure><ol><li>System Options -&gt; S5.Boot/Auto Login -&gt; B4.Desktop AutoLogin Desktop GUI  </li></ol><p>这里建议选择B4，启动免登陆进入桌面（以pi账户登陆）<br>B3 则需要在登陆界面输入账户及密码登陆。<br>B1进入命令行界面<br>B2免登陆进入命令行界面</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;树莓派P4桌面无法登录处理.   &lt;/p&gt;
&lt;h2 id=&quot;1、依次安装Xorg、xinit，加-y参数安装过程自动确认&quot;&gt;&lt;a href=&quot;#1、依次安装Xorg、xinit，加-y参数安装过程自动确认&quot; class=&quot;headerlink&quot; title=&quot;1、依次安装X
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派docker jd脚本运行</title>
    <link href="https://blog.qzcool.com/2021/04/11/%E6%A0%91%E8%8E%93%E6%B4%BEdocker-jd%E8%84%9A%E6%9C%AC%E8%BF%90%E8%A1%8C/"/>
    <id>https://blog.qzcool.com/2021/04/11/%E6%A0%91%E8%8E%93%E6%B4%BEdocker-jd%E8%84%9A%E6%9C%AC%E8%BF%90%E8%A1%8C/</id>
    <published>2021-04-11T15:10:22.000Z</published>
    <updated>2021-04-11T15:16:57.250Z</updated>
    
    <content type="html"><![CDATA[<p>脚本本地路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/pi/jd/jd_scripts</span><br></pre></td></tr></table></figure></p><h1 id="获取cookies"><a href="#获取cookies" class="headerlink" title="获取cookies"></a>获取cookies</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> CV =<span class="string">'&#123;cookies&#125;'</span>;<span class="comment">//大括号里面放jd的cookies</span></span><br><span class="line"><span class="keyword">var</span> CookieValue = CV.match(<span class="regexp">/pt_pin=.+?;/</span>) + CV.match(<span class="regexp">/pt_key=.+?;/</span>);</span><br><span class="line">copy(CookieValue);</span><br></pre></td></tr></table></figure><h1 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker-compose</span><br></pre></td></tr></table></figure><p>jd docker地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hub.docker.com/r/lxk0301/jd_scripts</span><br></pre></td></tr></table></figure></p><p>安装jd_scirpts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull lxk0301/jd_scripts</span><br></pre></td></tr></table></figure><p>目录文件配置好之后在 jd_scripts目录执行。<br>docker-compose 命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d 启动（修改docker-compose.yml后需要使用此命令使更改生效）；</span><br><span class="line">docker-compose logs 打印日志；</span><br><span class="line">docker-compose logs -f 打印日志，-f表示跟随日志； docker logs -f jd_scripts 和上面两条相比可以显示汉字； docker-compose pull 更新镜像；</span><br><span class="line">docker-compose stop 停止容器；</span><br><span class="line">docker-compose restart 重启容器；</span><br><span class="line">docker-compose down 停止并删除容器；</span><br></pre></td></tr></table></figure></p><p>来源:<a href="https://gitee.com/lxk0301/jd_docker/blob/master/docker/Readme.md" target="_blank" rel="noopener">https://gitee.com/lxk0301/jd_docker/blob/master/docker/Readme.md</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;脚本本地路径&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派其他应用安装</title>
    <link href="https://blog.qzcool.com/2021/04/11/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%B6%E4%BB%96%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85/"/>
    <id>https://blog.qzcool.com/2021/04/11/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%B6%E4%BB%96%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85/</id>
    <published>2021-04-11T14:06:39.000Z</published>
    <updated>2021-04-12T07:22:19.660Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python卸载与安装"><a href="#python卸载与安装" class="headerlink" title="python卸载与安装"></a>python卸载与安装</h1><p>卸载：<br>1、卸载python3.4<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove python3.4</span><br></pre></td></tr></table></figure></p><p>2、卸载python3.4及其依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove --auto-remove python3.4</span><br></pre></td></tr></table></figure></p><p>3、清除python3.4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge python3.4</span><br><span class="line">or</span><br><span class="line">sudo apt-get purge --auto-remove python3.4</span><br></pre></td></tr></table></figure><p>安装：<br>下载python<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz</span><br><span class="line">wget -P /usr/lib https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz(下载文件到指定目录)</span><br></pre></td></tr></table></figure></p><p>解压、编译安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf Python-2.7.9.tgz</span><br><span class="line">cd Python-2.7.9</span><br><span class="line">./configure --prefix=/usr/local/python-2.7.9</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>系统自带了python版本，我们需要为新安装的版本添加一个软链<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python-2.7.9/bin/python /usr/bin/python2.7.9</span><br></pre></td></tr></table></figure></p><h1 id="远程桌面安装"><a href="#远程桌面安装" class="headerlink" title="远程桌面安装"></a>远程桌面安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install xrdp</span><br></pre></td></tr></table></figure><p>安装完成后可以使用windows的远程桌面访问</p><h1 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker-compose</span><br></pre></td></tr></table></figure><h1 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;python卸载与安装&quot;&gt;&lt;a href=&quot;#python卸载与安装&quot; class=&quot;headerlink&quot; title=&quot;python卸载与安装&quot;&gt;&lt;/a&gt;python卸载与安装&lt;/h1&gt;&lt;p&gt;卸载：&lt;br&gt;1、卸载python3.4&lt;br&gt;&lt;figure cl
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>MAC升级BigSur后解决brew update时error：Your CLT does not support macOS 11.</title>
    <link href="https://blog.qzcool.com/2021/03/22/MAC%E5%8D%87%E7%BA%A7BigSur%E5%90%8E%E8%A7%A3%E5%86%B3brew-update%E6%97%B6error%EF%BC%9AYour-CLT-does-not-support-macOS-11/"/>
    <id>https://blog.qzcool.com/2021/03/22/MAC%E5%8D%87%E7%BA%A7BigSur%E5%90%8E%E8%A7%A3%E5%86%B3brew-update%E6%97%B6error%EF%BC%9AYour-CLT-does-not-support-macOS-11/</id>
    <published>2021-03-22T01:57:35.000Z</published>
    <updated>2021-03-22T01:58:57.183Z</updated>
    
    <content type="html"><![CDATA[<p>最近MacOS升级了Big Sur后安装ffmpeg时遇到version too old问题，执行brew update时遇到错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your CLT does not support macOS 11.</span><br></pre></td></tr></table></figure><p>命令行输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /Library/Developer/CommandLineTools</span><br><span class="line">sudo xcode-select --install</span><br></pre></td></tr></table></figure></p><p>后问题解决。</p><p>再次brew update</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近MacOS升级了Big Sur后安装ffmpeg时遇到version too old问题，执行brew update时遇到错误：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ubutun安装go</title>
    <link href="https://blog.qzcool.com/2021/03/15/ubutun%E5%AE%89%E8%A3%85go/"/>
    <id>https://blog.qzcool.com/2021/03/15/ubutun%E5%AE%89%E8%A3%85go/</id>
    <published>2021-03-15T08:07:30.000Z</published>
    <updated>2021-04-01T01:35:05.044Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://dl.google.com/go/go1.16.2.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">rm -rf /usr/local/go &amp;&amp; tar -C /usr/local -xzf go1.16.2.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>测试是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go version</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go version go1.16.1 windows/amd64</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>turnserver安装</title>
    <link href="https://blog.qzcool.com/2021/03/12/turnserver%E5%AE%89%E8%A3%85/"/>
    <id>https://blog.qzcool.com/2021/03/12/turnserver%E5%AE%89%E8%A3%85/</id>
    <published>2021-03-12T07:07:38.000Z</published>
    <updated>2021-03-22T01:52:50.783Z</updated>
    
    <content type="html"><![CDATA[<p>配置目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/turnserver.conf</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;配置目录&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pr
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>certbot-auto错误处理</title>
    <link href="https://blog.qzcool.com/2020/08/27/certbot-auto%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"/>
    <id>https://blog.qzcool.com/2020/08/27/certbot-auto%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</id>
    <published>2020-08-27T07:15:55.000Z</published>
    <updated>2021-04-01T01:35:05.041Z</updated>
    
    <content type="html"><![CDATA[<p>使用 cerbot-auto 时提示如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UnicodeEncodeError: &apos;ascii&apos; codec can&apos;t encode character u&apos;\u4e0e&apos; in position 2870: ordinal not in range(128)</span><br></pre></td></tr></table></figure><p>查看日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/log/letsencrypt/letsencrypt.log</span><br></pre></td></tr></table></figure><p>错误原因：<br>在 python2.7 下将字符串写入到文件时会出现”UnicodeEncodeError: ‘ascii’ codec can’t encode character u’\xa0’ in position”的错误,原因是由于 python 基于 ASCII 处理字符的，当出现不属于 ASCII 的字符时，会出现错误信息。</p><p>解决办法：<br>指定文件字符集为 utf-8</p><p>在 letsencryp 头文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/eff.org/certbot/venv/bin/letsencrypt</span><br></pre></td></tr></table></figure><p>加入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(&apos;utf-8&apos;)</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 cerbot-auto 时提示如下错误：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UnicodeEncodeError: &amp;apos;ascii&amp;apos; codec can&amp;apos;t encode character u&amp;apos;\u4e0e&amp;apos; in position 2870: ordinal not in range(128)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看日志&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/var/log/letsencrypt/letsencrypt.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;错误原因：&lt;br&gt;在 python2.7 下将字符串写入到文件时会出现”UnicodeEncodeError: ‘ascii’ codec can’t encode character u’\xa0’ in position”的错误,原因是由于 python 基于 ASCII 处理字符的，当出现不属于 ASCII 的字符时，会出现错误信息。&lt;/p&gt;
&lt;p&gt;解决办法：&lt;br&gt;指定文件字符集为 utf-8&lt;/p&gt;
&lt;p&gt;在 letsencryp 头文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /opt/eff.org/certbot/venv/bin/letsencrypt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;加入以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reload(sys)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys.setdefaultencoding(&amp;apos;utf-8&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派chromium设置sock5代理访问</title>
    <link href="https://blog.qzcool.com/2020/08/21/%E6%A0%91%E8%8E%93%E6%B4%BEchromium%E8%AE%BE%E7%BD%AEsock5%E4%BB%A3%E7%90%86%E8%AE%BF%E9%97%AE/"/>
    <id>https://blog.qzcool.com/2020/08/21/%E6%A0%91%E8%8E%93%E6%B4%BEchromium%E8%AE%BE%E7%BD%AEsock5%E4%BB%A3%E7%90%86%E8%AE%BF%E9%97%AE/</id>
    <published>2020-08-21T09:20:43.000Z</published>
    <updated>2021-04-01T01:35:05.048Z</updated>
    
    <content type="html"><![CDATA[<p>由于在特定网络环境下 chromium 需要通过代理访问,可以用如下方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chromium-browser --proxy-server=&quot;socks5://192.168.31.5:1080&quot;</span><br></pre></td></tr></table></figure><p>经过测试使用 127.0.0.1 无法代理，必须使用设备 ip。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于在特定网络环境下 chromium 需要通过代理访问,可以用如下方法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chromium-browser --proxy-server=&amp;quot;socks5://192.168.31.5:1080&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;经过测试使用 127.0.0.1 无法代理，必须使用设备 ip。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派连接隐藏wifi网络</title>
    <link href="https://blog.qzcool.com/2020/08/21/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9E%E6%8E%A5%E9%9A%90%E8%97%8Fwifi%E7%BD%91%E7%BB%9C/"/>
    <id>https://blog.qzcool.com/2020/08/21/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9E%E6%8E%A5%E9%9A%90%E8%97%8Fwifi%E7%BD%91%E7%BB%9C/</id>
    <published>2020-08-21T07:20:20.000Z</published>
    <updated>2021-04-01T01:35:05.050Z</updated>
    
    <content type="html"><![CDATA[<p>使用 nano 编辑器打开 wpa-supplicant 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/wpa_supplicant/wpa_supplicant.conf</span><br></pre></td></tr></table></figure><p>在文件底部添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">network=&#123;</span><br><span class="line">ssid=”wifi_name”</span><br><span class="line">scan_ssid=1</span><br><span class="line">psk=”wifi_password”</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关键是 ssid_scan=1 这一句，加上后才能扫描到隐藏的 wifi 网络。之后保存退出（ctrl+o 保存，ctrl+x 退出）nano 编辑器，reboot 重启即可。</p><p>相关 network 的配置信息：<br>network：是一个连接一个 WiFi 网络的配置，可以有多个，wpa_supplicant 会按照 priority 指定的优先级（数字越大越先连接）来连接，当然，在这个列表里面隐藏 WiFi 不受 priority 的影响，隐藏 WiFi 总是在可见 WiFi 不能连接时才开始连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssid:网络的ssid</span><br><span class="line">psk:密码</span><br><span class="line">priority:连接优先级，越大越优先</span><br><span class="line">scan_ssid:连接隐藏WiFi时需要指定该值为1</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 nano 编辑器打开 wpa-supplicant 配置文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo nano /etc/wpa_supplicant/wpa_supplicant.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在文件底部添加：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;network=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssid=”wifi_name”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scan_ssid=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;psk=”wifi_password”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;关键是 ssid_scan=1 这一句，加上后才能扫描到隐藏的 wifi 网络。之后保存退出（ctrl+o 保存，ctrl+x 退出）nano 编辑器，reboot 重启即可。&lt;/p&gt;
&lt;p&gt;相关 network 的配置信息：&lt;br&gt;network：是一个连接一个 WiFi 网络的配置，可以有多个，wpa_supplicant 会按照 priority 指定的优先级（数字越大越先连接）来连接，当然，在这个列表里面隐藏 WiFi 不受 priority 的影响，隐藏 WiFi 总是在可见 WiFi 不能连接时才开始连接。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssid:网络的ssid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;psk:密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;priority:连接优先级，越大越优先&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scan_ssid:连接隐藏WiFi时需要指定该值为1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="树莓派" scheme="https://blog.qzcool.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>iMac终端走Socks5代理方法</title>
    <link href="https://blog.qzcool.com/2020/08/19/iMac%E7%BB%88%E7%AB%AF%E8%B5%B0Socks5%E4%BB%A3%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.qzcool.com/2020/08/19/iMac%E7%BB%88%E7%AB%AF%E8%B5%B0Socks5%E4%BB%A3%E7%90%86%E6%96%B9%E6%B3%95/</id>
    <published>2020-08-19T09:44:16.000Z</published>
    <updated>2021-04-01T01:35:05.042Z</updated>
    
    <content type="html"><![CDATA[<p>1.找到代理地址和端口<br>本人的 Socks5 的监听地址是 127.0.0.1，端口 1086</p><ol start="2"><li>打开终端添加配置</li></ol><p>（我的终端是 zsh）打开终端，输入以下代码打开 vim</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure><p>按下键盘上的字母「i」，进入编辑模式，输入以下代码，第二行末尾改成自己的代理地址和端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># proxy list</span><br><span class="line">alias proxy=&apos;export all_proxy=socks5://127.0.0.1:1086&apos;</span><br><span class="line">alias unproxy=&apos;unset all_proxy&apos;</span><br></pre></td></tr></table></figure><p>按下键盘上的「esc」，退出编辑模式。输入以下代码保存修改并退出 vim</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><p>初始化配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><ol start="3"><li>执行</li></ol><p>开启代理模式，查看 ip，看看 brew update 命令顺畅与否</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy</span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><p>如果不想走代理了则使用 unproxy 命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unproxy</span><br></pre></td></tr></table></figure><p>开启代理模式前后可以查看 ip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl cip.cc</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.找到代理地址和端口&lt;br&gt;本人的 Socks5 的监听地址是 127.0.0.1，端口 1086&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;打开终端添加配置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（我的终端是 zsh）打开终端，输入以下代码打开 vim&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim ~/.zshrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按下键盘上的字母「i」，进入编辑模式，输入以下代码，第二行末尾改成自己的代理地址和端口&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# proxy list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alias proxy=&amp;apos;export all_proxy=socks5://127.0.0.1:1086&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alias unproxy=&amp;apos;unset all_proxy&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按下键盘上的「esc」，退出编辑模式。输入以下代码保存修改并退出 vim&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;:wq&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;初始化配置&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;source ~/.zshrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;执行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;开启代理模式，查看 ip，看看 brew update 命令顺畅与否&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果不想走代理了则使用 unproxy 命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;unproxy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;开启代理模式前后可以查看 ip&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl cip.cc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="iMac" scheme="https://blog.qzcool.com/tags/iMac/"/>
    
  </entry>
  
  <entry>
    <title>树莓派通过Nginx发布共享音频文件</title>
    <link href="https://blog.qzcool.com/2020/08/18/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%80%9A%E8%BF%87Nginx%E5%8F%91%E5%B8%83%E5%85%B1%E4%BA%AB%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6/"/>
    <id>https://blog.qzcool.com/2020/08/18/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%80%9A%E8%BF%87Nginx%E5%8F%91%E5%B8%83%E5%85%B1%E4%BA%AB%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6/</id>
    <published>2020-08-18T07:41:34.000Z</published>
    <updated>2021-04-01T01:35:05.051Z</updated>
    
    <content type="html"><![CDATA[<p>我们想通过局域网共享一下存放在树莓派里面的音频文件，树莓派安装了树莓派自带的系统。</p><p>1、安装 Nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><p>2.测试是否安装成功（nginx 默认是 80 端口）</p><p>浏览 127.0.0.1 看网页是否正确显示</p><p>3.设置配置文件</p><p>获取 nginx 配置文件路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br></pre></td></tr></table></figure><a id="more"></a><p>我们知道了默认路径 /etc/nginx</p><p>进入 /etc/nginx/sites-available</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/sites-available</span><br></pre></td></tr></table></figure><p>编辑 default 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano default</span><br></pre></td></tr></table></figure><p>在空白处粘贴以下内容，可以改成自己需要：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       8080;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        root /home/iflyos/iflyos_sound;</span><br><span class="line">        location / &#123;</span><br><span class="line">            autoindex on;</span><br><span class="line">            autoindex_exact_size off;</span><br><span class="line">            autoindex_localtime on;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>按 CTRL+O 保存退出</p><p>4.重新加载 nginx 配置</p><p>先测试配置文件是否有误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>没有提示错误的话进行下一步操作，如果有提示错误，根据错误进行修改</p><p>从新加载配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s reload</span><br></pre></td></tr></table></figure><p>没有提示错误的话就可以通过浏览器进行访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8080/xx/xxx.mp3</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们想通过局域网共享一下存放在树莓派里面的音频文件，树莓派安装了树莓派自带的系统。&lt;/p&gt;
&lt;p&gt;1、安装 Nginx&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.测试是否安装成功（nginx 默认是 80 端口）&lt;/p&gt;
&lt;p&gt;浏览 127.0.0.1 看网页是否正确显示&lt;/p&gt;
&lt;p&gt;3.设置配置文件&lt;/p&gt;
&lt;p&gt;获取 nginx 配置文件路径&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo nginx -t&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nginx: the configuration file /etc/nginx/nginx.conf syntax is ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx: configuration file /etc/nginx/nginx.conf test is successful&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="树莓派" scheme="https://blog.qzcool.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>MacbookPro2015升级SSD固态硬盘</title>
    <link href="https://blog.qzcool.com/2020/06/15/MacbookPro2015%E5%8D%87%E7%BA%A7SSD%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/"/>
    <id>https://blog.qzcool.com/2020/06/15/MacbookPro2015%E5%8D%87%E7%BA%A7SSD%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/</id>
    <published>2020-06-15T08:33:12.000Z</published>
    <updated>2021-04-01T01:35:05.040Z</updated>
    
    <content type="html"><![CDATA[<p>为了给 MacBook pro2015 升级硬盘，网上看了很多文章，基本上是要求买个硬盘盒进行格式化硬盘，用 U 盘做引导，其实是不用的，如果你想要升级硬盘可以参考我的做法，关于拆机部分可以参考网上的其他文章。<br>我升级过程过程中出现了一个小意外，进系统实用工具之后是找不到 SSD,还在考虑是不是要买个硬盘盒的时候搜索了一下文章，发现是开机时按键盘的方式不对，重启后可以识别出来了。</p><p>618 区间一只关注固态硬盘的价格，看到 HP EX900 500G 降到 380 块的时候，用卷和京豆最后 350 块价格买下了，然后淘宝上淘一个转接卡回来，开搞。</p><p>1.找一块硬盘做 TimeMachine</p><p>2.关机</p><p>3.拆机</p><p>4.拔电源</p><p>5.拆硬盘</p><p>6.换硬盘</p><p>7.插电</p><p>然后可以开机了，记得要同时按“电源+cmd+r+option”四个按键，等小地球出来松手，少按一个都不行，我第一次只按了 command+R+电源键，结果进系统实用工具之后是找不到 SSD 的。</p><p>8.格式化 ssd<br>记得要选择 APFS 格式，分区选择 GUID<br>SSD 格式化之后关闭磁盘工具，回到系统首页，直接选择第一个从时间机器备份进行恢复<br>然后就是一路下一步下一步，选择备份磁盘，选择目标磁盘 EX 900<br>恢复完成之后系统会自己重启，这时候登陆 Apple ID，进入系统，至此全部完成，记得关机，把后盖螺丝都拧上</p><p>可以参考这篇文章：<br><a href="https://new.qq.com/omn/20191210/20191210A0DVDF00.html" target="_blank" rel="noopener">https://new.qq.com/omn/20191210/20191210A0DVDF00.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;为了给 MacBook pro2015 升级硬盘，网上看了很多文章，基本上是要求买个硬盘盒进行格式化硬盘，用 U 盘做引导，其实是不用的，如果你想要升级硬盘可以参考我的做法，关于拆机部分可以参考网上的其他文章。&lt;br&gt;我升级过程过程中出现了一个小意外，进系统实用工具之后是找
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派搭建Nas</title>
    <link href="https://blog.qzcool.com/2020/05/27/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BANas/"/>
    <id>https://blog.qzcool.com/2020/05/27/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BANas/</id>
    <published>2020-05-27T07:39:12.000Z</published>
    <updated>2021-04-01T01:35:05.049Z</updated>
    
    <content type="html"><![CDATA[<p>Step 1: 更新系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>Step 2: 安装 Samba</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba samba-common-bin</span><br></pre></td></tr></table></figure><p>Step 3: 挂载移动硬盘</p><p>Step 4: 使用 Samba 共享文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p>在文件的身份验证下面添加上这一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">security = user</span><br></pre></td></tr></table></figure><p>Step 5: 设置共享文件夹</p><p>还是在刚刚那个配置文件上，在结尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[MyNas]</span><br><span class="line">path = /home/pi/shared</span><br><span class="line">writeable=Yes</span><br><span class="line">create mask=0777</span><br><span class="line">directory mask=0777</span><br><span class="line">public=no</span><br></pre></td></tr></table></figure><p>MyNas: 这定义了与共享文件夹有关的地址和其他配置。例如，共享文件夹将是以下地址：\ raspberrypi \ MyNas。<br>path：共享文件夹目录；<br>valid users：有效用户；<br>read only：是否只读；<br>create mask：创建文件的权限；<br>directory mask：创建文件夹的权限；<br>guest ok：是否允许访客访问；<br>browseable：是否可见。</p><p>添加完成后保存就行了，CTRL + X 然后按 Y and 最后敲个回车</p><p>Step 6: 添加用户到 Samba</p><p>sudo smbpasswd -a pi<br>这一步会让你输入密码，这个密码是等会用来登陆 nas 用的，不是系统的那个密码。</p><p>pi 是树莓派默认的用户，如果你想改个名也可以，新建用户就完事了。<br>sudo adduser username<br>sudo smbpasswd -a username</p><p>这一步可能要重启 Samba 才能生效—————–注：samba 默认开机自启，无需为重启担心。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo samba restart</span><br></pre></td></tr></table></figure><p>挂载 ntfs 格式硬盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ntfs-3g</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount /dev/sda2</span><br></pre></td></tr></table></figure><p>格式化 NTFS</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkfs.ntfs -f /dev/sda2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t ntfs-3g -o permissions /dev/sda2 /home/ubuntu/share</span><br></pre></td></tr></table></figure><p>自动挂载设备</p><p>查看要指定加载储存设备的 UUID</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo blkid</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/dev/mmcblk0p1: LABEL=”boot” UUID=”CDD4-B453” TYPE=”vfat” PARTUUID=”daf17199-01”</span><br><span class="line">/dev/mmcblk0p2: LABEL=”rootfs” UUID=”72bfc10d-73ec-4d9e-a54a-1cc507ee7ed2” TYPE=”ext4” PARTUUID=”daf17199-02”</span><br><span class="line">/dev/mmcblk0: PTUUID=”daf17199” PTTYPE=”dos”</span><br><span class="line">/dev/sda1: LABEL=”piusb” UUID=”3EFBF3DF518ACC17” TYPE=”ntfs” PARTLABEL=”Basic data partition” PARTUUID=”5cb848ac-2940-462f-8600-e881ce428606”</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 编辑设备管理</span><br><span class="line">sudo vim /etc/fstab</span><br><span class="line">// 在最后一行添加你要挂载的设备</span><br><span class="line">// 针对非 ntfs 格式的移动硬盘</span><br><span class="line">UUID=3EFBF3DF518ACC17 /media/piusb auto defaults,noexec,umask=0000 0 0</span><br><span class="line"></span><br><span class="line">// 针对 ntfs 格式的移动硬盘</span><br><span class="line">UUID=7AE83E6917B75C04 /home/ubuntu/share ntfs-3g defaults,noexec,umask=0000 0 0</span><br></pre></td></tr></table></figure><p>作者：HarryZhang6<br>链接：<a href="https://juejin.im/post/5e5c02dc6fb9a07ccb7e9b58" target="_blank" rel="noopener">https://juejin.im/post/5e5c02dc6fb9a07ccb7e9b58</a><br>来源：掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Step 1: 更新系统&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get upgrade&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Step 2: 安装 Samba&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install samba samba-common-bin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Step 3: 挂载移动硬盘&lt;/p&gt;
&lt;p&gt;Step 4: 使用 Samba 共享文件夹&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo nano /etc/samba/smb.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在文件的身份验证下面添加上这一行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;security = user&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Step 5: 设置共享文件夹&lt;/p&gt;
&lt;p&gt;还是在刚刚那个配置文件上，在结尾添加：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[MyNas]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;path = /home/pi/shared&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;writeable=Yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create mask=0777&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;directory mask=0777&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public=no&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;MyNas: 这定义了与共享文件夹有关的地址和其他配置。例如，共享文件夹将是以下地址：\ raspberrypi \ MyNas。&lt;br&gt;path：共享文件夹目录；&lt;br&gt;valid users：有效用户；&lt;br&gt;read only：是否只读；&lt;br&gt;create mask：创建文件的权限；&lt;br&gt;directory mask：创建文件夹的权限；&lt;br&gt;guest ok：是否允许访客访问；&lt;br&gt;browseable：是否可见。&lt;/p&gt;
&lt;p&gt;添加完成后保存就行了，CTRL + X 然后按 Y and 最后敲个回车&lt;/p&gt;
&lt;p&gt;Step 6: 添加用户到 Samba&lt;/p&gt;
&lt;p&gt;sudo smbpasswd -a pi&lt;br&gt;这一步会让你输入密码，这个密码是等会用来登陆 nas 用的，不是系统的那个密码。&lt;/p&gt;
&lt;p&gt;pi 是树莓派默认的用户，如果你想改个名也可以，新建用户就完事了。&lt;br&gt;sudo adduser username&lt;br&gt;sudo smbpasswd -a username&lt;/p&gt;
&lt;p&gt;这一步可能要重启 Samba 才能生效—————–注：samba 默认开机自启，无需为重启担心。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo samba restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;挂载 ntfs 格式硬盘&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ntfs-3g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo umount /dev/sda2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;格式化 NTFS&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mkfs.ntfs -f /dev/sda2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mount -t ntfs-3g -o permissions /dev/sda2 /home/ubuntu/share&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自动挂载设备&lt;/p&gt;
&lt;p&gt;查看要指定加载储存设备的 UUID&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo blkid&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/dev/mmcblk0p1: LABEL=”boot” UUID=”CDD4-B453” TYPE=”vfat” PARTUUID=”daf17199-01”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/dev/mmcblk0p2: LABEL=”rootfs” UUID=”72bfc10d-73ec-4d9e-a54a-1cc507ee7ed2” TYPE=”ext4” PARTUUID=”daf17199-02”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/dev/mmcblk0: PTUUID=”daf17199” PTTYPE=”dos”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/dev/sda1: LABEL=”piusb” UUID=”3EFBF3DF518ACC17” TYPE=”ntfs” PARTLABEL=”Basic data partition” PARTUUID=”5cb848ac-2940-462f-8600-e881ce428606”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 编辑设备管理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo vim /etc/fstab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 在最后一行添加你要挂载的设备&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 针对非 ntfs 格式的移动硬盘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UUID=3EFBF3DF518ACC17 /media/piusb auto defaults,noexec,umask=0000 0 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 针对 ntfs 格式的移动硬盘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UUID=7AE83E6917B75C04 /home/ubuntu/share ntfs-3g defaults,noexec,umask=0000 0 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;作者：HarryZhang6&lt;br&gt;链接：&lt;a href=&quot;https://juejin.im/post/5e5c02dc6fb9a07ccb7e9b58&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://juejin.im/post/5e5c02dc6fb9a07ccb7e9b58&lt;/a&gt;&lt;br&gt;来源：掘金&lt;br&gt;著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>显示来自远程JSON文件的SwiftUI列表</title>
    <link href="https://blog.qzcool.com/2020/05/07/%E6%98%BE%E7%A4%BA%E6%9D%A5%E8%87%AA%E8%BF%9C%E7%A8%8BJSON%E6%96%87%E4%BB%B6%E7%9A%84SwiftUI%E5%88%97%E8%A1%A8/"/>
    <id>https://blog.qzcool.com/2020/05/07/%E6%98%BE%E7%A4%BA%E6%9D%A5%E8%87%AA%E8%BF%9C%E7%A8%8BJSON%E6%96%87%E4%BB%B6%E7%9A%84SwiftUI%E5%88%97%E8%A1%A8/</id>
    <published>2020-05-07T02:01:40.000Z</published>
    <updated>2021-04-01T01:35:05.044Z</updated>
    
    <content type="html"><![CDATA[<p>Displaying a List with SwiftUI from a remote JSON file</p><p>显示来自远程 JSON 文件的 SwiftUI 列表</p><p>The purpose of this tutorial is to show a simple way to fetch data from a remote JSON file and display it on a List in SwiftUI. Apple has a tutorial with a local file, also this one teaches you how to do this, however I want to show a simpler way using a newer version of Xcode 11.0 (11A420a).</p><p>本教程的目的是展示一种从远程 JSON 文件中获取数据并将其显示在 SwiftUI 的 List 中的简单方法。 苹果有一个本地文件的教程，也教你如何做到这一点，但我想显示一个更简单的方式使用新版本的 Xcode 11.0(11A420a)。</p><p>Apple beta libraries are getting constantly changed before releasing the final versions, so older tutorials might not work on the latest versions of XCode</p><p>在发布最终版本之前，苹果的测试版本库会不断更新，所以以前的教程可能无法在最新版本的 XCode 上工作</p><p>Supposing we have this JSON file, that show an array of movie titles.</p><p>假设我们有这个 JSON 文件，它显示一组电影标题。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"Joker"</span>,</span><br><span class="line">    <span class="attr">"year"</span>: <span class="string">"2019"</span>,</span><br><span class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T17:55:21.374Z"</span>,</span><br><span class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T17:55:21.374Z"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"Pulp Fiction"</span>,</span><br><span class="line">    <span class="attr">"year"</span>: <span class="string">"1994"</span>,</span><br><span class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T15:26:36.675Z"</span>,</span><br><span class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:05:31.649Z"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">" The Godfather "</span>,</span><br><span class="line">    <span class="attr">"year"</span>: <span class="string">"1972"</span>,</span><br><span class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T15:27:38.123Z"</span>,</span><br><span class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:05:50.242Z"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"The Dark Knight "</span>,</span><br><span class="line">    <span class="attr">"year"</span>: <span class="string">"2008"</span>,</span><br><span class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T18:06:12.933Z"</span>,</span><br><span class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:06:12.933Z"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"Fight Club"</span>,</span><br><span class="line">    <span class="attr">"year"</span>: <span class="string">"1999"</span>,</span><br><span class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T18:06:33.096Z"</span>,</span><br><span class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:06:33.096Z"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">8</span>,</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">" Inception"</span>,</span><br><span class="line">    <span class="attr">"year"</span>: <span class="string">"2010"</span>,</span><br><span class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T18:06:52.034Z"</span>,</span><br><span class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:06:52.034Z"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"The Matrix "</span>,</span><br><span class="line">    <span class="attr">"year"</span>: <span class="string">"1999"</span>,</span><br><span class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T15:26:48.042Z"</span>,</span><br><span class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:08:00.902Z"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"The Shawshank Redemption "</span>,</span><br><span class="line">    <span class="attr">"year"</span>: <span class="string">"1984"</span>,</span><br><span class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T15:26:59.572Z"</span>,</span><br><span class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:08:47.637Z"</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>And we want to display them on a SwiftUI List like this.</p><p>我们希望像这样在 SwiftUI 列表中显示它们。</p><img src="/2020/05/07/显示来自远程JSON文件的SwiftUI列表/swift_list.png" title="This is an image"><p>First we need to define the model for Movie in this case a struct with Decodable and Identifiable protocols. Decodable to be able to decode it from the JSON file and Identifiable to be able to be listed with List. List allows you to display a list of data from an Identifiable Collection just like a UITableViewController.</p><p>首先，在这种情况下，我们需要为 Movie 定义一个具有可解码和可识别协议的结构。 可解码能够从 JSON 文件解码，可识别能够与列表一起列出。 List 允许您像 UITableViewController 一样显示可识别集合中的数据列表。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Movie</span>: <span class="title">Decodable</span>, <span class="title">Identifiable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> id: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> name: <span class="type">String</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> released: <span class="type">String</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">CodingKeys</span>: <span class="title">String</span>, <span class="title">CodingKey</span> </span>&#123;</span><br><span class="line">           <span class="keyword">case</span> id = <span class="string">"id"</span></span><br><span class="line">           <span class="keyword">case</span> name = <span class="string">"title"</span></span><br><span class="line">           <span class="keyword">case</span> released = <span class="string">"year"</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>CodingKeys basically maps the JSON key names with the variable name of the Model you created. In this case instead of year I named it released just for the purpose of showing that you can use your own names in the model as long as you define it in Coding Keys.<br>Codingkeys</p><p>基本上将 JSON 键名与您创建的 Model 的变量名映射在一起。 在本例中，我将其命名为 released，而不是年份，只是为了显示您可以在模型中使用自己的名称，只要您在 Coding Keys 中定义它。</p><p>Next we create the fetcher class that will load the JSON file and decode it.</p><p>接下来，我们创建 fetcher 类，它将加载 JSON 文件并对其进行解码。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MovieFetcher</span>: <span class="title">ObservableObject</span> </span>&#123;</span><br><span class="line">    @<span class="type">Published</span> <span class="keyword">var</span> movies = [<span class="type">Movie</span>]()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>()&#123;</span><br><span class="line">        load()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">load</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="type">URL</span>(string: <span class="string">"https://gist.githubusercontent.com/rbreve/60eb5f6fe49d5f019d0c39d71cb8388d/raw/f6bc27e3e637257e2f75c278520709dd20b1e089/movies.json"</span>)!</span><br><span class="line"></span><br><span class="line">        <span class="type">URLSession</span>.shared.dataTask(with: url) &#123;(data,response,error) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> d = data &#123;</span><br><span class="line">                    <span class="keyword">let</span> decodedLists = <span class="keyword">try</span> <span class="type">JSONDecoder</span>().decode([<span class="type">Movie</span>].<span class="keyword">self</span>, from: d)</span><br><span class="line">                    <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">                        <span class="keyword">self</span>.movies = decodedLists</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">"No Data"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">                <span class="built_in">print</span> (<span class="string">"Error"</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;.resume()</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Before understanding what is happening, we need to understand the new Combine framework.</p><p>在理解正在发生的事情之前，我们需要理解新的组合框架。</p><p>The Combine framework provides a declarative Swift API for processing values over time. These values can represent many kinds of asynchronous events. Combine declares publishers to expose values that can change over time, and subscribers to receive those values from the publishers.</p><p>组合框架提供了一个声明性的 Swift API，用于随着时间的推移处理值。 这些值可以表示多种异步事件。 组合声明发布者以公开可能随时间变化的值，订阅者从发布者处接收这些值。</p><p>ObervableObject: A type of object with a publisher that emits before the object has changed. By default an ObservableObject synthesizes an objectWillChange publisher that emits the changed value before any of its @Published properties changes.<br>Obervableobject:</p><p>具有发行者的对象类型，在对象更改之前发出该对象。 默认情况下，ObservableObject 合成一个 objectWillChange 发布者，该发布者在其@published 属性更改之前发出更改的值。</p><p>@Published wraps the movies array and will generate events whenever it is changed.</p><p>@ published 对 movies 数组进行封装，并在更改时生成事件。</p><p>The load() method fetches the JSON data from the network asynchronously, once the data has been loaded we assign it to movies. When movies changes it will send an event a subscriber.</p><p>Load ()方法从网络中异步获取 JSON 数据，一旦数据被加载，我们就将其分配给电影。 当电影发生变化时，它会向订阅者发送一个事件。</p><p>This is the SwiftUI view, a List with the ObservedObject fetcher as parameter. Whenever movies is updated, the list will update autmatically.</p><p>这是 SwiftUI 视图，一个带有 ObservedObject 提取程序作为参数的 List。 每当电影更新时，列表将自动更新。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">ObservedObject</span> <span class="keyword">var</span> fetcher = <span class="type">MovieFetcher</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">VStack</span> &#123;</span><br><span class="line">            <span class="type">List</span>(fetcher.movies) &#123; movie <span class="keyword">in</span></span><br><span class="line">                <span class="type">VStack</span> (alignment: .leading) &#123;</span><br><span class="line">                    <span class="type">Text</span>(movie.name)</span><br><span class="line">                    <span class="type">Text</span>(movie.released)</span><br><span class="line">                        .font(.system(size: <span class="number">11</span>))</span><br><span class="line">                        .foregroundColor(<span class="type">Color</span>.gray)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The whole code is here.</p><p>整个代码都在这里。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FetchView.swift</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by Roberto Breve  on 4.10.2019.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 Roberto Breve . All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"><span class="keyword">import</span> Combine</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">FetchView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">ObservedObject</span> <span class="keyword">var</span> fetcher = <span class="type">MovieFetcher</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">VStack</span> &#123;</span><br><span class="line">            <span class="type">List</span>(fetcher.movies) &#123; movie <span class="keyword">in</span></span><br><span class="line">                <span class="type">VStack</span> (alignment: .leading) &#123;</span><br><span class="line">                    <span class="type">Text</span>(movie.name)</span><br><span class="line">                    <span class="type">Text</span>(movie.released)</span><br><span class="line">                        .font(.system(size: <span class="number">11</span>))</span><br><span class="line">                        .foregroundColor(<span class="type">Color</span>.gray)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MovieFetcher</span>: <span class="title">ObservableObject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    @<span class="type">Published</span> <span class="keyword">var</span> movies = [<span class="type">Movie</span>]()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>()&#123;</span><br><span class="line">        load()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">load</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="type">URL</span>(string: <span class="string">"https://gist.githubusercontent.com/rbreve/60eb5f6fe49d5f019d0c39d71cb8388d/raw/f6bc27e3e637257e2f75c278520709dd20b1e089/movies.json"</span>)!</span><br><span class="line"></span><br><span class="line">        <span class="type">URLSession</span>.shared.dataTask(with: url) &#123;(data,response,error) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> d = data &#123;</span><br><span class="line">                    <span class="keyword">let</span> decodedLists = <span class="keyword">try</span> <span class="type">JSONDecoder</span>().decode([<span class="type">Movie</span>].<span class="keyword">self</span>, from: d)</span><br><span class="line">                    <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">                        <span class="keyword">self</span>.movies = decodedLists</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">"No Data"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">                <span class="built_in">print</span> (<span class="string">"Error"</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;.resume()</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Movie</span>: <span class="title">Codable</span>, <span class="title">Identifiable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> id: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> name: <span class="type">String</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> released: <span class="type">String</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">CodingKeys</span>: <span class="title">String</span>, <span class="title">CodingKey</span> </span>&#123;</span><br><span class="line">           <span class="keyword">case</span> id = <span class="string">"id"</span></span><br><span class="line">           <span class="keyword">case</span> name = <span class="string">"title"</span></span><br><span class="line">           <span class="keyword">case</span> released = <span class="string">"year"</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文章来自：<a href="https://medium.com/@rbreve/displaying-a-list-with-swiftui-from-a-remote-json-file-6b4e4280a076" target="_blank" rel="noopener">https://medium.com/@rbreve/displaying-a-list-with-swiftui-from-a-remote-json-file-6b4e4280a076</a><br>WRITTEN BY 原文作者:<br>Roberto Breve 罗伯托 · 布雷夫</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Displaying a List with SwiftUI from a remote JSON file&lt;/p&gt;
&lt;p&gt;显示来自远程 JSON 文件的 SwiftUI 列表&lt;/p&gt;
&lt;p&gt;The purpose of this tutorial is to show a simple way to fetch data from a remote JSON file and display it on a List in SwiftUI. Apple has a tutorial with a local file, also this one teaches you how to do this, however I want to show a simpler way using a newer version of Xcode 11.0 (11A420a).&lt;/p&gt;
&lt;p&gt;本教程的目的是展示一种从远程 JSON 文件中获取数据并将其显示在 SwiftUI 的 List 中的简单方法。 苹果有一个本地文件的教程，也教你如何做到这一点，但我想显示一个更简单的方式使用新版本的 Xcode 11.0(11A420a)。&lt;/p&gt;
&lt;p&gt;Apple beta libraries are getting constantly changed before releasing the final versions, so older tutorials might not work on the latest versions of XCode&lt;/p&gt;
&lt;p&gt;在发布最终版本之前，苹果的测试版本库会不断更新，所以以前的教程可能无法在最新版本的 XCode 上工作&lt;/p&gt;
&lt;p&gt;Supposing we have this JSON file, that show an array of movie titles.&lt;/p&gt;
&lt;p&gt;假设我们有这个 JSON 文件，它显示一组电影标题。&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Joker&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T17:55:21.374Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T17:55:21.374Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Pulp Fiction&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1994&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T15:26:36.675Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:05:31.649Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot; The Godfather &quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1972&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T15:27:38.123Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:05:50.242Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;The Dark Knight &quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2008&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:12.933Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:12.933Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Fight Club&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1999&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:33.096Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:33.096Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot; Inception&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2010&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:52.034Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:52.034Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;The Matrix &quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1999&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T15:26:48.042Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:08:00.902Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;The Shawshank Redemption &quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1984&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T15:26:59.572Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:08:47.637Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And we want to display them on a SwiftUI List like this.&lt;/p&gt;
&lt;p&gt;我们希望像这样在 SwiftUI 列表中显示它们。&lt;/p&gt;
&lt;img src=&quot;/2020/05/07/显示来自远程JSON文件的SwiftUI列表/swift_list.png&quot; title=&quot;This is an image&quot;&gt;
&lt;p&gt;First we need to define the model for Movie in this case a struct with Decodable and Identifiable protocols. Decodable to be able to decode it from the JSON file and Identifiable to be able to be listed with List. List allows you to display a list of data from an Identifiable Collection just like a UITableViewController.&lt;/p&gt;
&lt;p&gt;首先，在这种情况下，我们需要为 Movie 定义一个具有可解码和可识别协议的结构。 可解码能够从 JSON 文件解码，可识别能够与列表一起列出。 List 允许您像 UITableViewController 一样显示可识别集合中的数据列表。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Movie&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;Decodable&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Identifiable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; id: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; released: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CodingKeys&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;CodingKey&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; id = &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; released = &lt;span class=&quot;string&quot;&gt;&quot;year&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Mac软件推荐</title>
    <link href="https://blog.qzcool.com/2020/04/29/Mac%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    <id>https://blog.qzcool.com/2020/04/29/Mac%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/</id>
    <published>2020-04-29T04:21:30.000Z</published>
    <updated>2021-04-01T01:35:05.040Z</updated>
    
    <content type="html"><![CDATA[<p>1.iRightMouse</p><p>iRightMouse 是一款很赞的 Mac 右键菜单扩展应用。包括：右键新建文件、右键移动文件/文件夹到指定文件夹、右键复制文件/文件夹到指定文件夹、右键当前位置打开终端、右键剪切/粘贴、右键显示隐藏文件、右键拷贝文件路径，选中文本右键通过服务快速进行百度翻译/谷歌翻译、右键自定义文件夹图标等功能。</p><a id="more"></a><p>2.Mounty for NTFS</p><p>一个小工具，用于以在macOS下读写NTFS格式的硬盘。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.iRightMouse&lt;/p&gt;
&lt;p&gt;iRightMouse 是一款很赞的 Mac 右键菜单扩展应用。包括：右键新建文件、右键移动文件/文件夹到指定文件夹、右键复制文件/文件夹到指定文件夹、右键当前位置打开终端、右键剪切/粘贴、右键显示隐藏文件、右键拷贝文件路径，选中文本右键通过服务快速进行百度翻译/谷歌翻译、右键自定义文件夹图标等功能。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>openwrt软路由间歇性断流掉线无法连接的解决办法</title>
    <link href="https://blog.qzcool.com/2020/04/24/openwrt%E8%BD%AF%E8%B7%AF%E7%94%B1%E9%97%B4%E6%AD%87%E6%80%A7%E6%96%AD%E6%B5%81%E6%8E%89%E7%BA%BF%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://blog.qzcool.com/2020/04/24/openwrt%E8%BD%AF%E8%B7%AF%E7%94%B1%E9%97%B4%E6%AD%87%E6%80%A7%E6%96%AD%E6%B5%81%E6%8E%89%E7%BA%BF%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2020-04-24T08:30:07.000Z</published>
    <updated>2021-04-01T01:35:05.043Z</updated>
    
    <content type="html"><![CDATA[<p>问题<br>树莓派 openwrt 作为软旁路由（网关）提供设备“出国访问”。但是经常性会发生断流，掉线的情况。</p><p>解决办法<br>openwrt 网络–》接口–》编辑 eth0 网口–》高级设置物理接口–》取消掉桥接<br>openwrt 网络–》防火墙–》自定义规则，添加如下规则，iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE，然后重启即可。</p><p>通过设置好像有改善了。</p><p>参考：<a href="http://blog.sinovale.com/2576.html" target="_blank" rel="noopener">http://blog.sinovale.com/2576.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;问题&lt;br&gt;树莓派 openwrt 作为软旁路由（网关）提供设备“出国访问”。但是经常性会发生断流，掉线的情况。&lt;/p&gt;
&lt;p&gt;解决办法&lt;br&gt;openwrt 网络–》接口–》编辑 eth0 网口–》高级设置物理接口–》取消掉桥接&lt;br&gt;openwrt 网络–》防火墙–》自
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派Docker中使用openwrt做旁路网关</title>
    <link href="https://blog.qzcool.com/2020/04/24/%E6%A0%91%E8%8E%93%E6%B4%BEDocker%E4%B8%AD%E4%BD%BF%E7%94%A8openwrt%E5%81%9A%E6%97%81%E8%B7%AF%E7%BD%91%E5%85%B3/"/>
    <id>https://blog.qzcool.com/2020/04/24/%E6%A0%91%E8%8E%93%E6%B4%BEDocker%E4%B8%AD%E4%BD%BF%E7%94%A8openwrt%E5%81%9A%E6%97%81%E8%B7%AF%E7%BD%91%E5%85%B3/</id>
    <published>2020-04-24T07:57:19.000Z</published>
    <updated>2021-04-01T01:35:05.046Z</updated>
    
    <content type="html"><![CDATA[<p>首先我们说一下 openwrt,说白了你可以你理解为路由器系统的一种。<br>OpenWrt 是面向嵌入型设备的 Linux 发行版，所以 OpenWrt 系统运行时的资源占用率会很低。而树莓派的硬件性能要比普通路由器要高很多。虽然树莓派在硬件配置上的绝对优势能让 OpenWrt 有更大的施展空间，但相应的，硬件上的优势也带来了资源的浪费（OpenWrt 在树莓派上正常运行时，资源占用率只有不到 1/10）。再加上 OpenWrt 的可扩展性不是很强，所以很多能在 Raspbian/Debian 上能做的事情在 OpenWrt 上往往无法实现。<br>总不可能直接用树莓派只刷个 openwrt 就没了吧，那怕是有点奢侈了。那有什么方式呢？<br>没错就是 Docker,这样就可以让 linux 和 openwrt 共存了。树莓派就不这么吃灰了。<br>旁路网关<br>那么什么又是旁路网关呢？其实他跟 spring cloud 有那么几分相似之处。<br>普通路由器就像一开始的单机模式，什么都是它一台机器负责，比如信号转发、DNS、网关等，其中的“网关”角色负责路由器内部数据的处理。但因为一般家用的路由器硬件性能很有限，在运行一些比较吃资源的应用（如酸酸乳、去广告等）时，几乎会占满所有硬件资源，导致路由器网络/系统不稳定等诸多问题。这个时候我们把网关的这个角色划分出去单独的在树莓派上跑，是不是分担了主路由的压力，是不是有点微服务那个味道。这样子每个角色各司其职，树莓派也结束了它吃灰的命运了，更好的验证了那句 买前生产力，买后旁路由。</p><p>注意：</p><p>本文 docker 镜像只适用于树莓派 2B/3B/3B+/4B，在其他设备上理论上不能正常使用<br>在 Docker 中运行 OpenWrt ，树莓派将工作在旁路网关模式下，在这种工作模式下，树莓派的板载无线网卡不会工作（同时在 OpenWrt 的控制面板中也找不到有关 WIFI 的设置）。所以，需要将树莓派与路由器通过网线连接来使用。</p><p>具体步骤</p><p>Step 1: 打开网卡混杂模式</p><p>sudo ip link set eth0 promisc on<br>复制代码<br>Step 2 :创建 docker 网络**</p><p>注意了，这里需要结合自己的网络修改，不能照搬！！ sudo ifconfig 可以查看树莓派 IP 地址，不过刚刚不是都知道了嘛 [汗]，多一种方式嘛<br>刚刚登陆 ssh 的 ip 地址 192.168.31.7 那么说明树莓派处在 192.168.31.x 网段，那么下面的命令中的<br>–subnet=192.168.x.0/24 和–gateway=192.168.x.1 将要替换成对应网段的地址。(此处的 x 请根据自己的网络进行修改)<br>替换后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create -d macvlan --subnet=192.168.31.0/24 --gateway=192.168.31.1 -o parent=eth0 macnet</span><br></pre></td></tr></table></figure><p>这是我们 docker network ls 就可以查看到刚刚创建的网络</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pi@raspbian:~$ docker network ls</span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">e5988f578007        bridge              bridge              local</span><br><span class="line">107c16227dd4        docker_gwbridge     bridge              local</span><br><span class="line">3ceb60d85b9c        host                host                local</span><br><span class="line">b1929166e45c        macnet              macvlan             local</span><br><span class="line">93ad7ae8da72        none                null                local</span><br></pre></td></tr></table></figure><p>这里我还特意去查了一下 macvlan<br>macvlan 是一种虚拟网卡的解决方案：</p><p>macvlan 并不创建网络，只创建虚拟网卡。<br>macvlan 会共享物理网卡所链接的外部网络，实现的效果跟桥接模式是一样的。</p><p>想要了解更多等会文末会附上个参考链接。</p><p>Step 3 :拉取镜像。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull harryzhang6/openwrt:latest</span><br></pre></td></tr></table></figure><p>复制代码我们可以通过 docker images 查看本地的镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pi@raspbian:~$ docker images</span><br><span class="line">REPOSITORY            TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">harryzhang6/openwrt   latest              5c354d2e6f6f        3 hours ago         235MB</span><br></pre></td></tr></table></figure><p>这里也就说明镜像拉取成功了。</p><p>Step 4 :创建并启动容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart always --name openwrt -d --network macnet --privileged harryzhang6/openwrt:latest /sbin/init</span><br></pre></td></tr></table></figure><p>复制代码<br>–restart always 参数表示容器退出时始终重启，使服务尽量保持始终可用；<br>–name openwrt 参数定义了容器的名称；<br>-d 参数定义使容器运行在 Daemon 模式；<br>–network macnet 参数定义将容器加入 maxnet 网络；<br>–privileged 参数定义容器运行在特权模式下；</p><p>我们 docker ps 确认一下容器是否启动成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pi@raspbian:~$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE                        COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">755d018206fd        harryzhang6/openwrt:latest   &quot;/sbin/init&quot;        2 minutes ago</span><br></pre></td></tr></table></figure><p>确认启动成功，下一步就是进入容器配置了</p><p>Step 5 :进入容器并修改相关参数</p><p>注意：这一步的某些配置也跟上面一样，不能照搬<br>docker exec -it openwrt bash<br>复制代码执行此命令后我们便进入 OpenWrt 的命令行界面，首先，我们需要编辑 OpenWrt 的网络配置文件：<br>vim /etc/config/network<br>复制代码我们需要更改 Lan 口设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">config interface &apos;lan&apos;</span><br><span class="line">        option type &apos;bridge&apos;</span><br><span class="line">        option ifname &apos;eth0&apos;</span><br><span class="line">        option proto &apos;static&apos;</span><br><span class="line">        option ipaddr &apos;192.168.31.100&apos; //需要更改处</span><br><span class="line">        option netmask &apos;255.255.255.0&apos;</span><br><span class="line">        option ip6assign &apos;60&apos;</span><br><span class="line">        option gateway &apos;192.168.31.1&apos; //需要更改处</span><br><span class="line">        option broadcast &apos;192.168.123.255&apos;</span><br><span class="line">        option dns &apos;192.168.31.1&apos; //需要更改处</span><br></pre></td></tr></table></figure><p>这里是我配置好的，需要自行更改。option gateway 和 option dns 填写路由器的 IP，若树莓派获得的 IP 为 192.168.31.154，路由器 IP 为 192.168.31.1.<br>option ipaddr 项目定义了 OpenWrt 的 IP 地址，在完成网段设置后，IP 最后一段可根据自己的爱好修改（前提是符合规则且不和现有已分配 IP 冲突）。</p><p>Step 6 :重启网络</p><p>/etc/init.d/network restart<br>复制代码<br>Step 7 : 进入 openwrt 管理页面</p><p>在浏览器输入刚刚 Step 5 中定义的 option ipaddr,我这里是 192.168.31.1,就可以看到后台的管理界面</p><p>用户名：root</p><p>密码：password</p><p>Step 8 :关闭 DHCP 服务</p><p>在 “网络 - 接口 - Lan - 修改” 界面中，勾选下方的 “忽略此接口（不在此接口提供 DHCP 服务）”，并“保存&amp;应用”<br>Step 9: 主路由 DHCP 设置</p><p>这里不非必要的，<br>进入路由器后台中，将主路由的 DHCP 的默认网关和 DNS 服务器设置为第 5 步中 option ipaddr 项目中的 IP。<br>由于不想每台设备都通过这个 opwrt，只有自己设置的设备才走 openwrt 这个网关。<br>如果你修改了主路由 DHCP 请重启路由器。<br>到这里也差不多了教程，下面附上手动指定网关的教程<br>手动指定网关<br>如果路由器固件不支持自定义 DHCP 服务的网关及 DNS 地址（常见于路由器官方固件），或者只希望局域网下的个别设备接入旁路网关时，须在接入设备上做以下配置：</p><p>作者：HarryZhang6<br>链接：<a href="https://juejin.im/post/5e62711fe51d4526e91f5a1b" target="_blank" rel="noopener">https://juejin.im/post/5e62711fe51d4526e91f5a1b</a><br>来源：掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先我们说一下 openwrt,说白了你可以你理解为路由器系统的一种。&lt;br&gt;OpenWrt 是面向嵌入型设备的 Linux 发行版，所以 OpenWrt 系统运行时的资源占用率会很低。而树莓派的硬件性能要比普通路由器要高很多。虽然树莓派在硬件配置上的绝对优势能让 Open
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派Docker设置代理</title>
    <link href="https://blog.qzcool.com/2020/04/24/%E6%A0%91%E8%8E%93%E6%B4%BEDocker%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/"/>
    <id>https://blog.qzcool.com/2020/04/24/%E6%A0%91%E8%8E%93%E6%B4%BEDocker%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</id>
    <published>2020-04-24T06:31:44.000Z</published>
    <updated>2021-04-01T01:35:05.047Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 无法访问到仓库，网上找的方法都无效，发现 Docker 是通过 snap 安装的，通过下面的方法实现了代理访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/snap.docker.dockerd.service</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">...</span><br><span class="line">Environment=&quot;HTTPS_PROXY=socks5://127.0.0.1:1080&quot;</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo snap restart docker</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login</span><br></pre></td></tr></table></figure><p>可以正常访问到仓库了。</p><p>其他（上面的设置突然无效了,使用下面有效）</p><p>写入代理设置</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /lib/systemd/system/docker.service.d</span><br><span class="line">cat &gt; /lib/systemd/system/docker.service.d/socks5-proxy.conf &lt;&lt;EOF</span><br><span class="line">[Service]</span><br><span class="line">Environment="ALL_PROXY=socks5://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">1080</span>"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>重新加载配置</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker 无法访问到仓库，网上找的方法都无效，发现 Docker 是通过 snap 安装的，通过下面的方法实现了代理访问&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo vim /etc/systemd/system/snap.docker.dockerd.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Service]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Environment=&amp;quot;HTTPS_PROXY=socks5://127.0.0.1:1080&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo systemctl daemon-reload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo snap restart docker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以正常访问到仓库了。&lt;/p&gt;
&lt;p&gt;其他（上面的设置突然无效了,使用下面有效）&lt;/p&gt;
&lt;p&gt;写入代理设置&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo &lt;span class=&quot;built_in&quot;&gt;mkdir&lt;/span&gt; /lib/systemd/system/docker.service.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;gt; /lib/systemd/system/docker.service.d/socks5-proxy.conf &amp;lt;&amp;lt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Service]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Environment=&quot;ALL_PROXY=socks5://&lt;span class=&quot;number&quot;&gt;127&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1080&lt;/span&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新加载配置&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl daemon-reload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl restart docker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Mac设置Anaconda环境变量</title>
    <link href="https://blog.qzcool.com/2020/04/23/Mac%E8%AE%BE%E7%BD%AEAnaconda%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>https://blog.qzcool.com/2020/04/23/Mac%E8%AE%BE%E7%BD%AEAnaconda%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</id>
    <published>2020-04-23T03:42:04.000Z</published>
    <updated>2020-04-23T03:48:57.861Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p>打开mac终端，输入 conda –version</p><p>返回是 conda command not found….命令不存在哇。</p><p>是需要把anaconda的路径配置到系统环境变量中。</p><p>然后是，在mac终端用命令行的形式，添加并激活anaconda的环境变量：</p><p>添加命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;export PATH=&quot;/Users/software/anaconda3/bin:$PATH&quot;&apos; &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><p>解释说明：echo是返回字符串的命令，~/目录是家目录，即/Users/&lt;个人用户名&gt;。两个&gt;(英文半角下的大于号)表示不改变后面文件中的原有内容，添加引号中的内容，有这个文件会自动新建。为什么是.zshrc文件呢，因为我的终端打开用的是-zsh工具。</p><p>总之就是，将单引号中的内容写到~/目录下的.ashrc文件中。</p><p>激活命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure></p><p>目录下查看文件，结果如下图所示。（怎么显示隐藏文件：在终端中输命令<br>“<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles -boolean true;killall Finder</span><br></pre></td></tr></table></figure></p><p>”即可）</p><h2 id="新建虚拟环境"><a href="#新建虚拟环境" class="headerlink" title="新建虚拟环境"></a>新建虚拟环境</h2><p>还想新建一个独立于默认base的编程环境，安装python3.6，和tf1.15.0</p><p>首先，创建命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n py36tf1 numpy pandas python=3.6</span><br></pre></td></tr></table></figure><p>py36tf1是我给新建环境的命名，可改成自己的。numpy pandas是可以同时下载的包。指定python3.6版本。</p><p>然后，激活新环境命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source activate py36tf1</span><br></pre></td></tr></table></figure><p>再，可以使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure><p>看看现在有哪些编程环境了。 </p><p>退出当前环境，使用命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate(同时也切换到另一环境)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;设置环境变量&quot;&gt;&lt;a href=&quot;#设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;设置环境变量&quot;&gt;&lt;/a&gt;设置环境变量&lt;/h2&gt;&lt;p&gt;打开mac终端，输入 conda –version&lt;/p&gt;
&lt;p&gt;返回是 conda command not
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
