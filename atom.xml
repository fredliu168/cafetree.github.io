<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>非鱼记</title>
  
  <subtitle>随手笔记 一个没技术含量的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.qzcool.com/"/>
  <updated>2020-01-14T03:33:14.282Z</updated>
  <id>https://blog.qzcool.com/</id>
  
  <author>
    <name>fredliu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iMac如何通过快捷键连接AirPods耳机</title>
    <link href="https://blog.qzcool.com/2020/01/14/iMac%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%BF%9E%E6%8E%A5AirPods%E8%80%B3%E6%9C%BA/"/>
    <id>https://blog.qzcool.com/2020/01/14/iMac如何通过快捷键连接AirPods耳机/</id>
    <published>2020-01-14T03:32:49.000Z</published>
    <updated>2020-01-14T03:33:14.282Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>每次从手机切换耳机到电脑都要手动去点击一下,很麻烦,找到了通过快捷键切换的方法,<br>该方法适用于其他蓝牙耳机</p></blockquote><h2 id="1-安装BluetoothConnector"><a href="#1-安装BluetoothConnector" class="headerlink" title="1 .安装BluetoothConnector:"></a>1 .安装BluetoothConnector:</h2><p><a href="https://github.com/lapfelix/BluetoothConnector" target="_blank" rel="external">BluetoothConnector</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install bluetoothconnector</div></pre></td></tr></table></figure><p>安装成功后打开Terminals输入以下命令,查看蓝牙耳机mac地址:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bluetoothconnector</div></pre></td></tr></table></figure><p>返回本机连接的蓝牙设备列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Get the MAC address from the list below (if your device is missing, pair it with your computer first):</div><div class="line">f8-70-c0-7a-eb-bf - alp的AirPods</div><div class="line">......</div></pre></td></tr></table></figure><p>输入下列命令进行测试:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">BluetoothConnector f8-70-c0-7a-eb-bf  --notify</div></pre></td></tr></table></figure><p>执行成功就会弹出通知,如果已经连接则会断开,记得把mac地址改为你自己的蓝牙设备</p><h3 id="2-设置键盘快捷键"><a href="#2-设置键盘快捷键" class="headerlink" title="2.设置键盘快捷键"></a>2.设置键盘快捷键</h3><p>1.打开“启动台”-》“other”-》“自动操作”<br>新建-》快速操作<br>把运行AppleScript拖动到工作路程,输入以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">on run &#123;input, parameters&#125;v</div><div class="line">do shell script &quot;/usr/local/bin/BluetoothConnector f8-70-c0-7a-eb-bf --notify&quot;</div><div class="line">return input</div><div class="line">end run</div></pre></td></tr></table></figure></p><p>测试运行成功,保存,名称可以自己命名</p><p>2.设置键盘快捷键<br>打开“系统偏好”-》“键盘”-》“快捷键”-》“服务”-》找到刚才保存的服务,设置你想要的快捷键.自此大功告成</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;每次从手机切换耳机到电脑都要手动去点击一下,很麻烦,找到了通过快捷键切换的方法,&lt;br&gt;该方法适用于其他蓝牙耳机&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-安装BluetoothConnector&quot;&gt;&lt;a href=&quot;#1-安装Blu
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AirPods2使用体验</title>
    <link href="https://blog.qzcool.com/2019/12/24/AirPods2%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    <id>https://blog.qzcool.com/2019/12/24/AirPods2使用体验/</id>
    <published>2019-12-24T01:55:07.000Z</published>
    <updated>2019-12-24T02:49:16.551Z</updated>
    
    <content type="html"><![CDATA[<p>为情怀买单,双11某东做活动,AirPods2降了300快,就入手了一个,当时AirPods出来的时候就很想买一个,但是价格有点贵而且是刚出来的产品想想等第二代有机会再入手一个,等到今年AirPods终于出二代了,出二代的时候网上流传要出一个Pro版本,等到10月份果然出了一个Pro版的,但是是入耳式的,怕佩戴不舒服就放弃而且价格是AirPods的两倍就决定买AirPods了.<br><img src="/2019/12/24/AirPods2使用体验/Airpods.jpg" alt="This is an image" title="This is an image"></p><a id="more"></a><p>如果你是使用苹果全家桶,使用起来还是很方便的,比起以前使用有线耳机方便太多了.可以方便却换到Mac电脑,AppleTv.因为没有降噪,在嘈杂的环境中还是不要使用耳机了,基本上没法安静的听音乐.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为情怀买单,双11某东做活动,AirPods2降了300快,就入手了一个,当时AirPods出来的时候就很想买一个,但是价格有点贵而且是刚出来的产品想想等第二代有机会再入手一个,等到今年AirPods终于出二代了,出二代的时候网上流传要出一个Pro版本,等到10月份果然出了一个Pro版的,但是是入耳式的,怕佩戴不舒服就放弃而且价格是AirPods的两倍就决定买AirPods了.&lt;br&gt;&lt;img src=&quot;/2019/12/24/AirPods2使用体验/Airpods.jpg&quot; alt=&quot;This is an image&quot; title=&quot;This is an image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PyCharm激活方法</title>
    <link href="https://blog.qzcool.com/2019/12/24/PyCharm%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.qzcool.com/2019/12/24/PyCharm激活方法/</id>
    <published>2019-12-24T01:25:36.000Z</published>
    <updated>2019-12-24T01:49:10.086Z</updated>
    
    <content type="html"><![CDATA[<p>修改host<br>MacOS 修改 /etc/hosts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">10.0.0.0 account.jetbrains.com</div><div class="line">10.0.0.0 www.jetbrains.com</div></pre></td></tr></table></figure><p>注意一定要写一个访问不了的地址,如果写成 0.0.0.0 会提示激活码无法验证</p><p>激活码,到2020年7月<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Y9MXSIF79G-eyJsaWNlbnNlSWQiOiJZOU1YU0lGNzlHIiwibGljZW5zZWVOYW1lIjoiSkJGYW1pbHkgQ2hpbmEiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjYiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjUifSx7ImNvZGUiOiJBQyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjYiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjUifSx7ImNvZGUiOiJEUE4iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTI2IiwicGFpZFVwVG8iOiIyMDIwLTA3LTI1In0seyJjb2RlIjoiUFMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTI2IiwicGFpZFVwVG8iOiIyMDIwLTA3LTI1In0seyJjb2RlIjoiR08iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTI2IiwicGFpZFVwVG8iOiIyMDIwLTA3LTI1In0seyJjb2RlIjoiRE0iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTI2IiwicGFpZFVwVG8iOiIyMDIwLTA3LTI1In0seyJjb2RlIjoiQ0wiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTI2IiwicGFpZFVwVG8iOiIyMDIwLTA3LTI1In0seyJjb2RlIjoiUlMwIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IlJDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IlJEIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IlBDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IlJNIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IldTIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IkRCIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IkRDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IlJTVSIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjYiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjUifV0sImhhc2giOiIxMzgzODYyOS8wIiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-rI4et6OSKLA4gvOzxtyp48SCWtjwsOSQBJittaw6BOVJOwVBz0p31wBWDFSdIogdRPKquk2BAou7N694entEn4/Db3Ol5uotDtUd2MHuo+BBu9QcwIoX3RTrnYLwJfTlEJfRH/3TF3WtkPGQZQQcw/23hsZzdC/WJY6tmvyTijIBScUsvIOxZ+8REbWbkTQx1KliliFyrMua7hit8LThzfffZloHciaHwUP9BjxEjU0qQi+yFacSXjxEZERJT25hZrMN+bqBxcn59/4UJBrITt8YpLIlydt0+6vMSWAMawMzKpeDEDInKy0XomauTIUfxS4sbw/dSyVdSrh+IuOc7g==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MTW881U3Z5-eyJsaWNlbnNlSWQiOiJNVFc4ODFVM1o1IiwibGljZW5zZWVOYW1lIjoiTnNzIEltIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxOS0xMS0wNiJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxOS0xMS0wNiJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE5LTExLTA2In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOS0xMS0wNiJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDE5LTExLTA2In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE5LTExLTA2In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAxOS0xMS0wNiJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE5LTExLTA2In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOS0xMS0wNiJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE5LTExLTA2In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMTktMTEtMDYifV0sImhhc2giOiIxMDgyODE0Ni8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-aKyalfjUfiV5UXfhaMGgOqrMzTYy2rnsmobL47k8tTpR/jvG6HeL3FxxleetI+W+Anw3ZSe8QAMsSxqVS4podwlQgIe7f+3w7zyAT1j8HMVlfl2h96KzygdGpDSbwTbwOkJ6/5TQOPgAP86mkaSiM97KgvkZV/2nXQHRz1yhm+MT+OsioTwxDhd/22sSGq6KuIztZ03UvSciEmyrPdl2ueJw1WuT9YmFjdtTm9G7LuXvCM6eav+BgCRm+wwtUeDfoQqigbp0t6FQgkdQrcjoWvLSB0IUgp/f4qGf254fA7lXskT2VCFdDvi0jgxLyMVct1cKnPdM6fkHnbdSXKYDWw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;修改host&lt;br&gt;MacOS 修改 /etc/hosts&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu 和 windows10 配置双网卡路由</title>
    <link href="https://blog.qzcool.com/2019/11/15/ubuntu-%E9%85%8D%E7%BD%AE%E5%8F%8C%E7%BD%91%E5%8D%A1%E8%B7%AF%E7%94%B1/"/>
    <id>https://blog.qzcool.com/2019/11/15/ubuntu-配置双网卡路由/</id>
    <published>2019-11-15T07:09:58.000Z</published>
    <updated>2019-12-24T01:33:47.865Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ubuntu配置双网卡路由"><a href="#ubuntu配置双网卡路由" class="headerlink" title="ubuntu配置双网卡路由"></a>ubuntu配置双网卡路由</h2><p>1.显示当前默认路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">route</div><div class="line"></div><div class="line">default         XiaoQiang       0.0.0.0         UG    600    0        0 wlxf48ceb4c4436</div><div class="line">default         _gateway        0.0.0.0         UG    20100  0        0 eno1</div></pre></td></tr></table></figure><p>删除当前默认路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo route delete default</div></pre></td></tr></table></figure><p>2.添加内网ip路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo route add -net 10.49.28.0 netmask 255.255.255.0 gw 10.49.76.129 eno1</div><div class="line">sudo route add -net 192.168.14.0 netmask 255.255.255.0 gw 10.49.76.129 eno1</div><div class="line">sudo route add -net 192.168.8.0 netmask 255.255.255.0 gw 10.49.76.129 eno1</div></pre></td></tr></table></figure><p>3.添加外网路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo route add -net 0.0.0.0 netmask 0.0.0.0 gw 192.168.31.1 wlxf48ceb4c4436</div></pre></td></tr></table></figure><p>删除配置的路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo route del -net 192.168.8.0 netmask 255.255.255.0</div><div class="line">sudo route del -net  0.0.0.0 netmask 255.255.255.0</div></pre></td></tr></table></figure><h2 id="windows-配置双网卡路由"><a href="#windows-配置双网卡路由" class="headerlink" title="windows 配置双网卡路由"></a>windows 配置双网卡路由</h2><p>查看网卡信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ipconfig</div><div class="line"></div><div class="line">13 有线网口</div><div class="line"></div><div class="line">25 无线网口</div></pre></td></tr></table></figure><p>1.删除默认路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">route delete 0.0.0.0</div></pre></td></tr></table></figure><p>2.添加内网路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">route  -p add   192.168.14.0 mask 255.255.255.0   10.49.76.129  if 13</div><div class="line">route  -p add   10.49.28.0 mask 255.255.255.0   10.49.76.129  if 13</div></pre></td></tr></table></figure><p>3.添加外网路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">route -p add 0.0.0.0 mask 0.0.0.0 192.168.31.1 if 25</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ubuntu配置双网卡路由&quot;&gt;&lt;a href=&quot;#ubuntu配置双网卡路由&quot; class=&quot;headerlink&quot; title=&quot;ubuntu配置双网卡路由&quot;&gt;&lt;/a&gt;ubuntu配置双网卡路由&lt;/h2&gt;&lt;p&gt;1.显示当前默认路由&lt;/p&gt;
&lt;figure cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu 18.04 - dlink dwa171 (revC)安装驱动</title>
    <link href="https://blog.qzcool.com/2019/11/15/ubuntu-18-04-dlink-dwa171-revC-%E5%AE%89%E8%A3%85%E9%A9%B1%E5%8A%A8/"/>
    <id>https://blog.qzcool.com/2019/11/15/ubuntu-18-04-dlink-dwa171-revC-安装驱动/</id>
    <published>2019-11-15T02:30:01.000Z</published>
    <updated>2019-11-15T07:42:14.941Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">sudo apt update</div><div class="line">sudo apt install build-essential git dkms</div><div class="line">git clone https://github.com/brektrou/rtl8821CU.git</div><div class="line">cd rtl8821CU</div><div class="line">chmod +x dkms-install.sh</div><div class="line">sudo ./dkms-install.sh</div><div class="line"></div><div class="line">sudo modprobe 8821cu</div></pre></td></tr></table></figure><p>Problem of not being able to use D-Link AC600 (DWA 171 Revision C) as WiFi USB as it is recognised as USB Flush Memory (storing Windows driver files). Note that this is NOT about DWA 171 revision A.</p><h2 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h2><p>As per Problem with Wi-Fi USB Adapter D-Link DWA-171:</p><p>A DWA-171 Revision C became available in 2018, and is marked as such on the dongle label. The revA is a straightforward wifi dongle – with the correct Linux driver installed, plug in the dongle and you’re off to the races. But the revC first enumerates as USB Storage, and as such contains a Setup.exe to install Windows drivers.</p><p>lsusb shows the DWA 171 Revision C as Realtek flash drive.</p><p>Bus 003 Device 005: ID 0bda:1a2b Realtek Semiconductor Corp.    &lt;—– USB Flash memory mode of DWA 171</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>As per Automatically use usb_modeswitch for Wifi USB, run usb_modeswitch as below (after , and confirm with lsusb and ip commands.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ lsusb</div><div class="line">...</div><div class="line">Bus 003 Device 005: ID 0bda:1a2b Realtek Semiconductor Corp.</div><div class="line"></div><div class="line">$ /usr/sbin/usb_modeswitch -K -v 0bda -p 1a2b</div><div class="line">$ lsusb</div><div class="line">...</div><div class="line">Bus 003 Device 006: ID 2001:331d D-Link Corp.  &lt;--- Changed from Realtek</div><div class="line"></div><div class="line">$ ip link show</div><div class="line">...</div></pre></td></tr></table></figure><p>3: wlx58d56e015102: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state </p><p>UP mode DORMANT group default qlen 1000<br>    link/ether 58:d5:6e:01:51:02 brd ff:ff:ff:ff:ff:ff<br>Explanation<br>The REFERENCE document included in the usb-modeswitch-data package says -K means ejecting the device.</p><p>StandardEject &lt;0/1&gt; -K<br>Sends a specific bulk message sequence representing the SCSI commands “ALLOW MEDIUM REMOVAL” and “START STOP UNIT”, basically an eject action. Many modems are using this for mode switching. Can be combined with one additional ‘MessageContent’</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>To use the D-Link AC 600 (DWA 171 Revision C) as USB WiFi.</p><p>Compile, install, and load the 8821cu module (NOT 8821au).<br>Verify the module is loaded with lsmod.<br>Eject the USB flash drive with usb_modeswitch -K.<br>Verify the USB WiFi D-Link is displayed with lsusb.</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="http://www.draisberghof.de/usb_modeswitch/" target="_blank" rel="external">USB_ModeSwitch - Handling Mode-Switching USB Devices on Linux</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>charles系列破解激活办法（最高charles4.2都可以激活）</title>
    <link href="https://blog.qzcool.com/2019/11/12/charles%E7%B3%BB%E5%88%97%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB%E5%8A%9E%E6%B3%95(%E6%9C%80%E9%AB%98charles4-2%E9%83%BD%E5%8F%AF%E4%BB%A5%E6%BF%80%E6%B4%BB)/"/>
    <id>https://blog.qzcool.com/2019/11/12/charles系列破解激活办法(最高charles4-2都可以激活)/</id>
    <published>2019-11-12T13:52:40.000Z</published>
    <updated>2019-11-15T08:20:50.442Z</updated>
    
    <content type="html"><![CDATA[<p>// Charles Proxy License<br>// 适用于Charles任意版本的注册码，谁还会想要使用破解版呢。<br>// Charles 4.2目前是最新版，可用。<br>Registered Name: <a href="https://zhile.io" target="_blank" rel="external">https://zhile.io</a><br>License Key: 48891cf209c6d32bf4</p><p>本方法通杀charlse系列激活问题。</p><p>————————————————<br>版权声明：本文为CSDN博主「花2不谢」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_25821067/article/details/79848589" target="_blank" rel="external">https://blog.csdn.net/qq_25821067/article/details/79848589</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;// Charles Proxy License&lt;br&gt;// 适用于Charles任意版本的注册码，谁还会想要使用破解版呢。&lt;br&gt;// Charles 4.2目前是最新版，可用。&lt;br&gt;Registered Name: &lt;a href=&quot;https://zhile.io&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建之在文章中插入图片 </title>
    <link href="https://blog.qzcool.com/2019/10/31/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E5%9C%A8%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>https://blog.qzcool.com/2019/10/31/Hexo博客搭建之在文章中插入图片/</id>
    <published>2019-10-31T08:24:49.000Z</published>
    <updated>2019-10-31T08:27:29.007Z</updated>
    
    <content type="html"><![CDATA[<p>在写文章时，常常有配图说明的需求。Hexo有多种图片插入方式，可以将图片存放在本地引用或者将图片放在CDN上引用。</p><p>本地引用<br>绝对路径<br>当Hexo项目中只用到少量图片时，可以将图片统一放在source/images文件夹中，通过markdown语法访问它们。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">source/images/image.jpg</div><div class="line"></div><div class="line">![](/images/image.jpg)</div></pre></td></tr></table></figure></p><p>图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p><p>相对路径<br>图片除了可以放在统一的images文件夹中，还可以放在文章自己的目录中。文章的目录可以通过配置_config.yml来生成。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">_config.yml</div><div class="line"></div><div class="line">post_asset_folder: true</div></pre></td></tr></table></figure></p><p>将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source/_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">_posts/post_name/image.jpg</div><div class="line"></div><div class="line">![](image.jpg)</div></pre></td></tr></table></figure></p><p>上述是markdown的引用方式，图片只能在文章中显示，但无法在首页中正常显示。</p><p>如果希望图片在文章和首页中同时显示，可以使用标签插件语法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">_posts/post_name/image.jpg</div><div class="line"></div><div class="line">&#123;% asset_img image.jpg This is an image %&#125;</div></pre></td></tr></table></figure></p><p>CDN引用<br>除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。比如Cloudinary提供的图片CDN服务，在Cloudinary中上传图片后，会生成对应的url地址，将地址直接拿来引用即可。</p><p>文章来源:<a href="https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/" target="_blank" rel="external">https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在写文章时，常常有配图说明的需求。Hexo有多种图片插入方式，可以将图片存放在本地引用或者将图片放在CDN上引用。&lt;/p&gt;
&lt;p&gt;本地引用&lt;br&gt;绝对路径&lt;br&gt;当Hexo项目中只用到少量图片时，可以将图片统一放在source/images文件夹中，通过markdown语法
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大疆发布了Mavic Mini</title>
    <link href="https://blog.qzcool.com/2019/10/31/%E5%A4%A7%E7%96%86%E5%8F%91%E5%B8%83%E4%BA%86Mavic-Mini/"/>
    <id>https://blog.qzcool.com/2019/10/31/大疆发布了Mavic-Mini/</id>
    <published>2019-10-31T01:28:26.000Z</published>
    <updated>2019-10-31T01:37:44.642Z</updated>
    
    <content type="html"><![CDATA[<p>大疆昨天发布了最新的Mavic,把他定义为可以每天飞行的相机.质量249克,30分钟最长飞行时间,售价仅2699人民币,价格相当亲民.</p><img src="/2019/10/31/大疆发布了Mavic-Mini/mavicmini.jpg" alt="This is an image" title="This is an image"><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大疆昨天发布了最新的Mavic,把他定义为可以每天飞行的相机.质量249克,30分钟最长飞行时间,售价仅2699人民币,价格相当亲民.&lt;/p&gt;
&lt;img src=&quot;/2019/10/31/大疆发布了Mavic-Mini/mavicmini.jpg&quot; alt=&quot;This is an image&quot; title=&quot;This is an image&quot;&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>苹果发布新耳机AirPods Pro</title>
    <link href="https://blog.qzcool.com/2019/10/30/%E8%8B%B9%E6%9E%9C%E5%8F%91%E5%B8%83%E6%96%B0%E8%80%B3%E6%9C%BAAirPods-Pro/"/>
    <id>https://blog.qzcool.com/2019/10/30/苹果发布新耳机AirPods-Pro/</id>
    <published>2019-10-30T08:23:42.000Z</published>
    <updated>2019-10-31T01:39:00.254Z</updated>
    
    <content type="html"><![CDATA[<p>苹果昨晚直接在官网发布了 AirPods Pro,<br>一款带有主动降噪功能的真无线入耳耳机。中国区售价 1999 元.</p><img src="/2019/10/30/苹果发布新耳机AirPods-Pro/airpodsPro.jpg" alt="This is an image" title="This is an image"><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;苹果昨晚直接在官网发布了 AirPods Pro,&lt;br&gt;一款带有主动降噪功能的真无线入耳耳机。中国区售价 1999 元.&lt;/p&gt;
&lt;img src=&quot;/2019/10/30/苹果发布新耳机AirPods-Pro/airpodsPro.jpg&quot; alt=&quot;This is an image&quot; title=&quot;This is an image&quot;&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ssh/sftp无需输入密码设置</title>
    <link href="https://blog.qzcool.com/2019/10/30/ssh-sftp%E6%97%A0%E9%9C%80%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E8%AE%BE%E7%BD%AE/"/>
    <id>https://blog.qzcool.com/2019/10/30/ssh-sftp无需输入密码设置/</id>
    <published>2019-10-30T07:47:06.000Z</published>
    <updated>2019-10-30T07:48:03.151Z</updated>
    
    <content type="html"><![CDATA[<p>Linux系统有一个钥匙环(keyring)的管理程序．钥匙环受到用户登录密码的保护．当你登录Linux系统时，会自动解开钥匙环的密码，从而可访问钥匙环．SSH的密钥和公钥也存储在钥匙环．所以初次使用SSH密钥登录远程Linux服务器时需要输入一次SSH密钥的密码．而将来使用SSH密钥登录时不再输入密码。Ubuntu的钥匙环程序是seahorse．<br>SSH密钥就好比是你的身份证明．远程Linux服务器用你生成的SSH公钥来加密一条消息，而只有你的SSH密钥可以解开这条消息．所以其他人如果没有你的SSH密钥，是无法解开加密消息的，从而也就无法登录你的Linux服务器．</p><p>检查一下你有没有 ssh key<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls ~/.ssh</div></pre></td></tr></table></figure></p><p>如果有包含下面这两个文件，则说明你有ssh key<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">id_rsa id_rsa.pub</div></pre></td></tr></table></figure></p><a id="more"></a><p>有 .pub 后缀的是公钥，没有的是私钥。公钥可以让别人知道，私钥就像你的密码一样，不要给别人。</p><p>如果没有 ssh key，可以用 ssh-keygen -t rsa 命令 来生成<br>然后一路回车，就可以生成 ssh key 了</p><p>然后，再一个命令，把公钥上传到服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-copy-id username@remote-server</div></pre></td></tr></table></figure></p><p>这样公钥就会上传到服务器的 ~/.ssh/authorized_keys 位置中<br>大功告成，以后在本机不用输入密码就可以用ssh连接服务器了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux系统有一个钥匙环(keyring)的管理程序．钥匙环受到用户登录密码的保护．当你登录Linux系统时，会自动解开钥匙环的密码，从而可访问钥匙环．SSH的密钥和公钥也存储在钥匙环．所以初次使用SSH密钥登录远程Linux服务器时需要输入一次SSH密钥的密码．而将来使用SSH密钥登录时不再输入密码。Ubuntu的钥匙环程序是seahorse．&lt;br&gt;SSH密钥就好比是你的身份证明．远程Linux服务器用你生成的SSH公钥来加密一条消息，而只有你的SSH密钥可以解开这条消息．所以其他人如果没有你的SSH密钥，是无法解开加密消息的，从而也就无法登录你的Linux服务器．&lt;/p&gt;
&lt;p&gt;检查一下你有没有 ssh key&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ls ~/.ssh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果有包含下面这两个文件，则说明你有ssh key&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;id_rsa id_rsa.pub&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Git配置全局账号密码避免每次拉取、提交输入账号密码</title>
    <link href="https://blog.qzcool.com/2019/10/30/Git%E9%85%8D%E7%BD%AE%E5%85%A8%E5%B1%80%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%E9%81%BF%E5%85%8D%E6%AF%8F%E6%AC%A1%E6%8B%89%E5%8F%96%E3%80%81%E6%8F%90%E4%BA%A4%E8%BE%93%E5%85%A5%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/"/>
    <id>https://blog.qzcool.com/2019/10/30/Git配置全局账号密码避免每次拉取、提交输入账号密码/</id>
    <published>2019-10-30T07:29:47.000Z</published>
    <updated>2019-10-30T07:46:21.222Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言</p></blockquote><pre><code>在大家使用github的过程中，一定会碰到这样一种情况，就是每次要push 和pull时总是要输入github的账号和密码，这样不仅浪费了大量的时间且降低了工作效率。在此背景下，本文在网上找了两种方法来避免这种状况，这些成果也是先人提出来的，在此只是做个总结。</code></pre><h2 id="1-方法一"><a href="#1-方法一" class="headerlink" title="1.方法一"></a>1.方法一</h2><h3 id="1-1-创建文件存储GIT用户名和密码"><a href="#1-1-创建文件存储GIT用户名和密码" class="headerlink" title="1.1 创建文件存储GIT用户名和密码"></a>1.1 创建文件存储GIT用户名和密码</h3><p>在%HOME%目录中，一般为C:\users\Administrator，也可以是你自己创建的系统用户名目录，反正都在C:\users\中。文件名为.git-credentials,由于在Window中不允许直接创建以”.”开头的文件，所以需要借助git bash进行，打开git bash客户端，进行%HOME%目录，然后用touch创建文件 .git-credentials, 用vim编辑此文件，输入内容格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">touch .git-credentials</div><div class="line"></div><div class="line">vim .git-credentials</div><div class="line"></div><div class="line">https://&#123;username&#125;:&#123;password&#125;@git.coding.net       //我这里用的是coding.net域名</div></pre></td></tr></table></figure></p><p>针对 SSH 协议的方式， 配置SSH 公钥，使用 SSH 协议操作，具体见 SSH 公钥配置</p><a id="more"></a><p>对于 Https 协议</p><p>首先在全局配置保存你的密码， ~/.git-credentials （没有就创建）内添加 https://{username}:<a href="mailto:{passwd}@git.coding.net" target="_blank" rel="external">{passwd}@git.coding.net</a><br>然后配置 Git 命令存储认证，</p><h3 id="1-2-添加Git-Config-内容"><a href="#1-2-添加Git-Config-内容" class="headerlink" title="1.2 添加Git Config 内容"></a>1.2 添加Git Config 内容</h3><p>进入git bash终端， 输入如下命令：</p><p>git config –global credential.helper store</p><p>执行完后查看%HOME%目录下的.gitconfig文件，会多了一项：</p><pre><code>[credential]    helper = store</code></pre><p>重新开启git bash会发现git push时不用再输入用户名和密码</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;在大家使用github的过程中，一定会碰到这样一种情况，就是每次要push 和pull时总是要输入github的账号和密码，这样不仅浪费了大量的时间且降低了工作效率。在此背景下，本文在网上找了两种方法来避免这种状况，这些成果也是先人提出来的，在此只是做个总结。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;1-方法一&quot;&gt;&lt;a href=&quot;#1-方法一&quot; class=&quot;headerlink&quot; title=&quot;1.方法一&quot;&gt;&lt;/a&gt;1.方法一&lt;/h2&gt;&lt;h3 id=&quot;1-1-创建文件存储GIT用户名和密码&quot;&gt;&lt;a href=&quot;#1-1-创建文件存储GIT用户名和密码&quot; class=&quot;headerlink&quot; title=&quot;1.1 创建文件存储GIT用户名和密码&quot;&gt;&lt;/a&gt;1.1 创建文件存储GIT用户名和密码&lt;/h3&gt;&lt;p&gt;在%HOME%目录中，一般为C:\users\Administrator，也可以是你自己创建的系统用户名目录，反正都在C:\users\中。文件名为.git-credentials,由于在Window中不允许直接创建以”.”开头的文件，所以需要借助git bash进行，打开git bash客户端，进行%HOME%目录，然后用touch创建文件 .git-credentials, 用vim编辑此文件，输入内容格式：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;touch .git-credentials&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;vim .git-credentials&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;https://&amp;#123;username&amp;#125;:&amp;#123;password&amp;#125;@git.coding.net       //我这里用的是coding.net域名&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;针对 SSH 协议的方式， 配置SSH 公钥，使用 SSH 协议操作，具体见 SSH 公钥配置&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Mac下制作加密的zip压缩包</title>
    <link href="https://blog.qzcool.com/2019/10/30/Mac%E4%B8%8B%E5%88%B6%E4%BD%9C%E5%8A%A0%E5%AF%86%E7%9A%84zip%E5%8E%8B%E7%BC%A9%E5%8C%85/"/>
    <id>https://blog.qzcool.com/2019/10/30/Mac下制作加密的zip压缩包/</id>
    <published>2019-10-30T07:00:00.000Z</published>
    <updated>2019-10-30T07:46:21.222Z</updated>
    
    <content type="html"><![CDATA[<p>Mac下创建加密的zip文件，无需第三方软件，直接在终端中 敲入几行命令就能搞定。<br>方法一： </p><p>选择压缩包保存路径：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd yourPath</div></pre></td></tr></table></figure></p><h3 id="1-只压缩单个文件"><a href="#1-只压缩单个文件" class="headerlink" title="1. 只压缩单个文件"></a>1. 只压缩单个文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zip -e yourZipFileName.zip yourSourceFile</div></pre></td></tr></table></figure><p>回车 ，分别输入密码（回车）和确认密码（回车）就OK了。</p><h3 id="2-压缩文件夹"><a href="#2-压缩文件夹" class="headerlink" title="2. 压缩文件夹"></a>2. 压缩文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zip -e -r yourZipFileName.zip yourSourceFileDir</div></pre></td></tr></table></figure><p>其余同上。(-r 表示将文件夹中所有的文件进行压缩)</p><h3 id="方法二：可以通过一行命令搞定"><a href="#方法二：可以通过一行命令搞定" class="headerlink" title="方法二：可以通过一行命令搞定"></a>方法二：可以通过一行命令搞定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zip -r -P yourPassword yourZipFileName.zip yourSourceFileDir</div></pre></td></tr></table></figure><p>回车就OK了，但是这种方法只输入一次密码，万一压缩时输错密码，再想打开可就悲剧了。</p><blockquote><p>注意: -P 需要大写</p></blockquote><blockquote><p>Encryption:<br>  -e        use standard (weak) PKZip 2.0 encryption, prompt for password<br>  -P pswd   use standard encryption, password is pswd<br> <a id="more"></a><br>————————————————<br>版权声明：本文为CSDN博主「yooozooo」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/yooozooo/article/details/42496735" target="_blank" rel="external">https://blog.csdn.net/yooozooo/article/details/42496735</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Mac下创建加密的zip文件，无需第三方软件，直接在终端中 敲入几行命令就能搞定。&lt;br&gt;方法一： &lt;/p&gt;
&lt;p&gt;选择压缩包保存路径：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cd yourPath&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-只压缩单个文件&quot;&gt;&lt;a href=&quot;#1-只压缩单个文件&quot; class=&quot;headerlink&quot; title=&quot;1. 只压缩单个文件&quot;&gt;&lt;/a&gt;1. 只压缩单个文件&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;zip -e yourZipFileName.zip yourSourceFile&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;回车 ，分别输入密码（回车）和确认密码（回车）就OK了。&lt;/p&gt;
&lt;h3 id=&quot;2-压缩文件夹&quot;&gt;&lt;a href=&quot;#2-压缩文件夹&quot; class=&quot;headerlink&quot; title=&quot;2. 压缩文件夹&quot;&gt;&lt;/a&gt;2. 压缩文件夹&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;zip -e -r yourZipFileName.zip yourSourceFileDir&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其余同上。(-r 表示将文件夹中所有的文件进行压缩)&lt;/p&gt;
&lt;h3 id=&quot;方法二：可以通过一行命令搞定&quot;&gt;&lt;a href=&quot;#方法二：可以通过一行命令搞定&quot; class=&quot;headerlink&quot; title=&quot;方法二：可以通过一行命令搞定&quot;&gt;&lt;/a&gt;方法二：可以通过一行命令搞定&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;zip -r -P yourPassword yourZipFileName.zip yourSourceFileDir&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;回车就OK了，但是这种方法只输入一次密码，万一压缩时输错密码，再想打开可就悲剧了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意: -P 需要大写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Encryption:&lt;br&gt;  -e        use standard (weak) PKZip 2.0 encryption, prompt for password&lt;br&gt;  -P pswd   use standard encryption, password is pswd&lt;br&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>hexo 博客同步管理及迁移</title>
    <link href="https://blog.qzcool.com/2019/10/30/hexo-%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E7%AE%A1%E7%90%86%E5%8F%8A%E8%BF%81%E7%A7%BB/"/>
    <id>https://blog.qzcool.com/2019/10/30/hexo-博客同步管理及迁移/</id>
    <published>2019-10-30T05:20:37.000Z</published>
    <updated>2019-12-24T01:49:09.106Z</updated>
    
    <content type="html"><![CDATA[<p>背景：一台电脑上已有一个在用的博客，又新用了一台电脑，实现原电脑和新电脑都可以提交更新博客，实现同步或者说博客的版本管理。</p><p>步骤：</p><ol><li><p>在原电脑上操作，给 username.github.io 博客仓库创建hexo分支，并设为默认分支。（具体可参考这篇文章的操作，有图示）</p></li><li><p>如果未给你的 github 账号添加过当前电脑生成的 ssh key，需要创建 ssh key 并添加到 github 账号上。（如何创建和添加 github help 就有）</p></li><li><p>随便一个目录下，命令行执行 git clone <a href="mailto:git@github.com" target="_blank" rel="external">git@github.com</a>:username/username.github.io.git 把仓库 clone 到本地。</p></li><li><p>显示所有隐藏文件和文件夹，进入刚才 clone 到本地的仓库，删掉除了 .git 文件夹以外的所有内容。</p></li><li><p>命令行 cd 到 clone 的仓库，git add -A ，git commit -m “–”，git push origin hexo，把刚才删除操作引起的本地仓库变化更新到远程，此时刷新下 github 端博客hexo分支，应该已经被清空了。</p></li><li><p>将上述 .git 文件夹复制到本机本地博客根目录下（即含有 themes、source 等文件夹的那个目录），现在可以把上述 clone 的本地仓库删掉了，因为它已经没有用了，本机博客目录已经变成可以和 hexo 分支相连的仓库了。</p></li></ol><a id="more"></a><ol start="7"><li><p>将博客目录下 themes 文件夹下每个主题文件夹里面的 .git .gitignore 删掉。 </p></li><li><p>cd 到博客目录，git add -A ，git commit -m “–”，git push origin hexo，将博客目录下所有文件更新到 hexo 分支。如果上一步没有删掉 .git .gitignore，主题文件夹下内容将传不上去。至此原电脑上的操作结束。</p></li><li><p>在新电脑上操作，先把新电脑上环境安装好，node.js、git、hexo，ssh key 也创建和添加好。</p></li></ol><p>10.选好博客安装的目录， git clone <a href="mailto:git@github.com" target="_blank" rel="external">git@github.com</a>:username/username.github.io.git 。</p><ol start="11"><li>cd 到博客目录，npm install、hexo g &amp;&amp; hexo s，安装依赖，生成和启动博客服务。正常的话，浏览器打开 localhost:4000 可以看到博客了。至此新电脑操作完毕。</li></ol><p>12以后无论在哪台电脑上，更新以及提交博客，依次执行，git pull，git add -A ，git commit -m “–”，git push origin hexo，hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 即可。</p><ol start="12"><li>你可以执行下列命令来创建一篇新文章或者新的页面。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure></li></ol><p>作者：容与<br>链接：<a href="https://www.zhihu.com/question/21193762/answer/369050999" target="_blank" rel="external">https://www.zhihu.com/question/21193762/answer/369050999</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;背景：一台电脑上已有一个在用的博客，又新用了一台电脑，实现原电脑和新电脑都可以提交更新博客，实现同步或者说博客的版本管理。&lt;/p&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在原电脑上操作，给 username.github.io 博客仓库创建hexo分支，并设为默认分支。（具体可参考这篇文章的操作，有图示）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果未给你的 github 账号添加过当前电脑生成的 ssh key，需要创建 ssh key 并添加到 github 账号上。（如何创建和添加 github help 就有）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;随便一个目录下，命令行执行 git clone &lt;a href=&quot;mailto:git@github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git@github.com&lt;/a&gt;:username/username.github.io.git 把仓库 clone 到本地。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;显示所有隐藏文件和文件夹，进入刚才 clone 到本地的仓库，删掉除了 .git 文件夹以外的所有内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;命令行 cd 到 clone 的仓库，git add -A ，git commit -m “–”，git push origin hexo，把刚才删除操作引起的本地仓库变化更新到远程，此时刷新下 github 端博客hexo分支，应该已经被清空了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将上述 .git 文件夹复制到本机本地博客根目录下（即含有 themes、source 等文件夹的那个目录），现在可以把上述 clone 的本地仓库删掉了，因为它已经没有用了，本机博客目录已经变成可以和 hexo 分支相连的仓库了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>经济学人在线阅读</title>
    <link href="https://blog.qzcool.com/2019/10/30/%E5%BC%80%E5%8F%91%E4%BA%86%E4%B8%80%E4%B8%AA%E8%8B%B1%E8%AF%AD%E9%98%85%E8%AF%BB%E5%B0%8F%E7%AB%99/"/>
    <id>https://blog.qzcool.com/2019/10/30/开发了一个英语阅读小站/</id>
    <published>2019-10-30T02:07:02.000Z</published>
    <updated>2019-10-30T08:53:30.072Z</updated>
    
    <content type="html"><![CDATA[<p>觉得有必要提高一下英语水平,找了很多方法,发现阅读外文是比较有趣方法,找到了经济学人期刊,刚好前段时间学Python,为了方便阅读同时练手一下自己建了个小站,如果你也喜欢经济学人可以点击 (<a href="https://qzcool.xyz" target="_blank" rel="external">https://qzcool.xyz</a>) 注册阅读,站点免费开放.</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;觉得有必要提高一下英语水平,找了很多方法,发现阅读外文是比较有趣方法,找到了经济学人期刊,刚好前段时间学Python,为了方便阅读同时练手一下自己建了个小站,如果你也喜欢经济学人可以点击 (&lt;a href=&quot;https://qzcool.xyz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://qzcool.xyz&lt;/a&gt;) 注册阅读,站点免费开放.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="日记" scheme="https://blog.qzcool.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>换了Prontera风格</title>
    <link href="https://blog.qzcool.com/2019/10/30/%E6%8D%A2%E4%BA%86Prontera%E9%A3%8E%E6%A0%BC/"/>
    <id>https://blog.qzcool.com/2019/10/30/换了Prontera风格/</id>
    <published>2019-10-30T01:54:36.000Z</published>
    <updated>2019-10-30T02:05:11.188Z</updated>
    
    <content type="html"><![CDATA[<p>博客荒废了好久,重新启用一下,换了一个叫Prontera的风格,下载地址<a href="https://github.com/AngryPowman/hexo-theme-prontera" target="_blank" rel="external">https://github.com/AngryPowman/hexo-theme-prontera</a></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客荒废了好久,重新启用一下,换了一个叫Prontera的风格,下载地址&lt;a href=&quot;https://github.com/AngryPowman/hexo-theme-prontera&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/AngryPowman/hexo-theme-prontera&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="日记" scheme="https://blog.qzcool.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>iMac如何使用frp实现内网穿透</title>
    <link href="https://blog.qzcool.com/2017/12/19/frp/"/>
    <id>https://blog.qzcool.com/2017/12/19/frp/</id>
    <published>2017-12-19T07:56:15.000Z</published>
    <updated>2019-10-30T01:59:26.328Z</updated>
    
    <content type="html"><![CDATA[<p>有时需要把内网部署的站点映射到外网，让其别人也能访问到，例如做微信相关开发时需要把内网映射到外网，让微信服务器能访问到你的开发环境，方便开发调试。可以使用花生壳或者ngrok，前面这两种我都使用过，花生壳用起来很不稳定，花了钱还不能解决问题，ngrok现在已经很久没更新了，国内的可以在<a href="https://www.ngrok.cc" target="_blank" rel="external">https://www.ngrok.cc</a> 注册，免费用户仅能使用一个转发，由于是使用香港的服务器经常连接不上，最后狠下心来研究了下内网穿透，发现frp使用起来还可以，本文就介绍在iMac下如何用阿里云用frp做内网穿透，Windows的应该流程也类似。</p><blockquote><p>frp开源地址:<a href="https://github.com/fatedier/frp" target="_blank" rel="external">https://github.com/fatedier/frp</a></p></blockquote><h3 id="一-服务器配置"><a href="#一-服务器配置" class="headerlink" title="一.服务器配置"></a>一.服务器配置</h3><h5 id="1-使用终端ssh远程连接阿里云服务器"><a href="#1-使用终端ssh远程连接阿里云服务器" class="headerlink" title="1.使用终端ssh远程连接阿里云服务器"></a>1.使用终端ssh远程连接阿里云服务器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -t root@xxx.xxx.xxx.xxx -p 22</div></pre></td></tr></table></figure><p>进入到/home目录，创建文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir frp</div></pre></td></tr></table></figure></p><h5 id="2-下载对应的frp发布版本"><a href="#2-下载对应的frp发布版本" class="headerlink" title="2.下载对应的frp发布版本"></a>2.下载对应的frp发布版本</h5><p>先查看服务器型号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /proc/version</div></pre></td></tr></table></figure><p>本人服务器信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Linux version 4.4.0-101-generic (buildd@lcy01-amd64-006)</div></pre></td></tr></table></figure><p>下载frp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo wget  https://github.com/fatedier/frp/releases/download/v0.13.0/frp_0.13.0_linux_amd64.tar.gz</div></pre></td></tr></table></figure><p>我的阿里云服务器下载不了frp文件，就先下载文件到本地，然后用ssh远程上传到阿里云服务器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp -r frp_0.13.0_linux_amd64.tar.gz root@xxx.xxx.xxx.xxx:/home/frp/</div></pre></td></tr></table></figure></p><h5 id="3-配置frp服务端"><a href="#3-配置frp服务端" class="headerlink" title="3.配置frp服务端"></a>3.配置frp服务端</h5><p>解压到当前目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tar xvf frp_0.13.0_linux_amd64.tar.gz</div></pre></td></tr></table></figure></p><p>解压之后进入目录会看到以下文件</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># ls</div><div class="line">LICENSE  frpc  frpc.ini  frpc_full.ini  frps  frps.ini  frps_full.ini</div></pre></td></tr></table></figure><p>打开frps.ini文件，配置成如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">bind_addr = xxx.xxx.xxx.xxx</div><div class="line">bind_port = 7000</div><div class="line">vhost_http_port = 80</div><div class="line">vhost_https_port = 443</div><div class="line">dashboard_port = 7500</div><div class="line">dashboard_user = 你的仪表盘用户名</div><div class="line">dashboard_pwd = 你的仪表盘密码</div><div class="line">privilege_token = frp</div></pre></td></tr></table></figure></p><p>其中bind_port是自己设定的frp服务端端口<br>vhost_http_port是自己设定的http访问端口<br>vhost_https_port是自己设定的https访问端口<br>[ssh]部分是ssh反向代理<br>listen_port是自己设定的ssh访问端口<br>custom_domains是自定义域名，如果有自己的域名就写到这里<br>privilege_token是验证凭据，服务端和客户端的凭据必须一样才能连接，当然为了安全还是设置长一点。dashborad的三个配置是仪表盘功能的端口以及用户名和密码，为了安全也要设置的长一点。</p><p>保存上面的配置后，使用以下指令启动frp服务端。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./frps -c ./frps.ini</div></pre></td></tr></table></figure></p><p>查看frps.log然后应该会显示类似下面的文本，说明服务端启动成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Start frps success</div><div class="line">PrivilegeMode is enabled, you should pay more attention to security issues</div></pre></td></tr></table></figure></p><h3 id="二-客户端配置"><a href="#二-客户端配置" class="headerlink" title="二.客户端配置"></a>二.客户端配置</h3><p>iMac下载对应的frp版本frp_0.13.0_darwin_amd64.tar.gz<br>解压后有对应的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># ls</div><div class="line">LICENSE  frpc  frpc.ini  frpc_full.ini  frps  frps.ini  frps_full.ini</div></pre></td></tr></table></figure></p><p>frpc和frpc.ini、frpc_full.ini 是客户端对应的配置文件<br>我的frpc.ini配置对应如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[common]</div><div class="line">server_addr = xxx.xxx.xxx.xxx</div><div class="line">server_port = 7000  </div><div class="line"># console or real logFile path like ./frpc.log</div><div class="line">log_file = ./frpc.log </div><div class="line"># trace, debug, info, warn, error</div><div class="line">log_level = trace </div><div class="line">log_max_days = 3 </div><div class="line"># for authentication</div><div class="line">privilege_token = #######</div><div class="line"> </div><div class="line"># connections will be established in advance, default value is zero</div><div class="line">pool_count = 5 </div><div class="line"># if tcp stream multiplexing is used, default is true, it must be same with frps</div><div class="line">tcp_mux = true </div><div class="line"># your proxy name will be changed to &#123;user&#125;.&#123;proxy&#125;</div><div class="line">user = qzcool </div><div class="line"># decide if exit program when first login failed, otherwise continuous relogin to frps</div><div class="line"># default is true</div><div class="line">login_fail_exit = true </div><div class="line">[weixin]</div><div class="line">type = http</div><div class="line">local_ip = 127.0.0.1</div><div class="line">local_port = 8080</div><div class="line">use_encryption = false</div><div class="line">use_compression = false </div><div class="line">subdomain = weixin</div></pre></td></tr></table></figure></p><p>server_addr：对应的时阿里云的公网地址<br>server_port：服务端端口<br>privilege_token：token需要和服务端一致<br>最底下是配置站点信息<br>subdomain：子域名，假设服务器配置泛解析，子域名配置weixin，那么可以通过weixin.youdomin.com访问到你内网的8080端口</p><p>启动服务 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">macdeiMac:frp_0.13.0_darwin_amd64 fred$ sudo ./frpc -c ./frpc.ini</div></pre></td></tr></table></figure></p><p>然后使用浏览器访问weixin.youdomin.com就能访问到你的站点了。</p><h3 id="三-frp开机启动和后台运行"><a href="#三-frp开机启动和后台运行" class="headerlink" title="三.frp开机启动和后台运行"></a>三.frp开机启动和后台运行</h3><p>使用systemd配置开机自启，适用于 centos7 Ubuntu 16 或 debian 8。<br>vi /etc/systemd/system/frps.service 新建此文件，并写入以下内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line"></div><div class="line">Description=frps daemon</div><div class="line"></div><div class="line">After=syslog.target network.target</div><div class="line"></div><div class="line">Wants=network.target</div><div class="line"></div><div class="line">[Service]</div><div class="line"></div><div class="line">Type=simple</div><div class="line"></div><div class="line">ExecStart=/root/frp_0.13.0_linux_amd64/frps -c /root/frp_0.13.0_linux_amd64/frps_my.ini</div><div class="line"></div><div class="line">Restart= always</div><div class="line"></div><div class="line">RestartSec=1min</div><div class="line"></div><div class="line">[Install]</div><div class="line"></div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure></p><p>启动并设为开机自启。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">systemctl start frps //启动 </div><div class="line">systemctl status frps //状态查询 </div><div class="line">systemctl enable frps //开机启动</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时需要把内网部署的站点映射到外网，让其别人也能访问到，例如做微信相关开发时需要把内网映射到外网，让微信服务器能访问到你的开发环境，方便开发调试。可以使用花生壳或者ngrok，前面这两种我都使用过，花生壳用起来很不稳定，花了钱还不能解决问题，ngrok现在已经很久没更新了，国内的可以在&lt;a href=&quot;https://www.ngrok.cc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.ngrok.cc&lt;/a&gt; 注册，免费用户仅能使用一个转发，由于是使用香港的服务器经常连接不上，最后狠下心来研究了下内网穿透，发现frp使用起来还可以，本文就介绍在iMac下如何用阿里云用frp做内网穿透，Windows的应该流程也类似。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;frp开源地址:&lt;a href=&quot;https://github.com/fatedier/frp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/fatedier/frp&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一-服务器配置&quot;&gt;&lt;a href=&quot;#一-服务器配置&quot; class=&quot;headerlink&quot; title=&quot;一.服务器配置&quot;&gt;&lt;/a&gt;一.服务器配置&lt;/h3&gt;&lt;h5 id=&quot;1-使用终端ssh远程连接阿里云服务器&quot;&gt;&lt;a href=&quot;#1-使用终端ssh远程连接阿里云服务器&quot; class=&quot;headerlink&quot; title=&quot;1.使用终端ssh远程连接阿里云服务器&quot;&gt;&lt;/a&gt;1.使用终端ssh远程连接阿里云服务器&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ssh -t root@xxx.xxx.xxx.xxx -p 22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;进入到/home目录，创建文件夹&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir frp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;2-下载对应的frp发布版本&quot;&gt;&lt;a href=&quot;#2-下载对应的frp发布版本&quot; class=&quot;headerlink&quot; title=&quot;2.下载对应的frp发布版本&quot;&gt;&lt;/a&gt;2.下载对应的frp发布版本&lt;/h5&gt;&lt;p&gt;先查看服务器型号&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat /proc/version&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;本人服务器信息:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Linux version 4.4.0-101-generic (buildd@lcy01-amd64-006)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下载frp&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo wget  https://github.com/fatedier/frp/releases/download/v0.13.0/frp_0.13.0_linux_amd64.tar.gz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我的阿里云服务器下载不了frp文件，就先下载文件到本地，然后用ssh远程上传到阿里云服务器。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;scp -r frp_0.13.0_linux_amd64.tar.gz root@xxx.xxx.xxx.xxx:/home/frp/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;3-配置frp服务端&quot;&gt;&lt;a href=&quot;#3-配置frp服务端&quot; class=&quot;headerlink&quot; title=&quot;3.配置frp服务端&quot;&gt;&lt;/a&gt;3.配置frp服务端&lt;/h5&gt;&lt;p&gt;解压到当前目录&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo tar xvf frp_0.13.0_linux_amd64.tar.gz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解压之后进入目录会看到以下文件&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="frp" scheme="https://blog.qzcool.com/tags/frp/"/>
    
  </entry>
  
  <entry>
    <title>c# 判断远程服务器端口是否可以连接 超时设置</title>
    <link href="https://blog.qzcool.com/2017/08/17/csharp-connect-timeout/"/>
    <id>https://blog.qzcool.com/2017/08/17/csharp-connect-timeout/</id>
    <published>2017-08-17T03:01:01.000Z</published>
    <updated>2017-08-17T03:43:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="判断远程服务器是否可以连接"><a href="#判断远程服务器是否可以连接" class="headerlink" title="判断远程服务器是否可以连接"></a>判断远程服务器是否可以连接</h2><p>How to configure socket connect timeout</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">private static void IsServerUp(string server, int port, int timeout)</div><div class="line">        &#123;</div><div class="line">            try</div><div class="line">            &#123;</div><div class="line">                Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</div><div class="line">                IAsyncResult result = socket.BeginConnect(server, port, null, null);</div><div class="line"></div><div class="line">                try</div><div class="line">                &#123;</div><div class="line">                    bool success = result.AsyncWaitHandle.WaitOne(timeout, true);</div><div class="line"></div><div class="line">                    if (!success)</div><div class="line">                    &#123;</div><div class="line">                        // NOTE, MUST CLOSE THE SOCKET                         </div><div class="line">                        throw new SocketException();</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                &#125;</div><div class="line">                finally</div><div class="line">                &#123;</div><div class="line">                    socket.Close();</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            catch (SocketException e)</div><div class="line">            &#123;</div><div class="line">                Trace.WriteLine(string.Format(&quot;TCP connection to server &#123;0&#125; failed.&quot;, server));</div><div class="line">                MessageBox.Show(&quot;连接失败,可能你所在的网络无法连接服务器,请更换网络后重试!&quot;, &quot;错误提示&quot;,</div><div class="line">    MessageBoxButtons.OK, MessageBoxIcon.Error);</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">private  static void ThreadCheckSever()</div><div class="line">   &#123; </div><div class="line">      string ipAddress = &quot;www.qzcool.com&quot;;</div><div class="line">      int portNum = 2000;</div><div class="line">      IPHostEntry ipHost = Dns.GetHostEntry(ipAddress); </div><div class="line">      IsServerUp(ipHost.AddressList[0].ToString(), portNum, 4000);</div><div class="line"></div><div class="line">   &#125;</div><div class="line"></div><div class="line">private void Form1_Load(object sender, EventArgs e)</div><div class="line">   &#123;</div><div class="line">      Thread th = new Thread(ThreadCheckSever);</div><div class="line">      th.Start();</div><div class="line">   &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;判断远程服务器是否可以连接&quot;&gt;&lt;a href=&quot;#判断远程服务器是否可以连接&quot; class=&quot;headerlink&quot; title=&quot;判断远程服务器是否可以连接&quot;&gt;&lt;/a&gt;判断远程服务器是否可以连接&lt;/h2&gt;&lt;p&gt;How to configure socket co
      
    
    </summary>
    
    
      <category term="c#" scheme="https://blog.qzcool.com/categories/c/"/>
    
    
      <category term="Socket" scheme="https://blog.qzcool.com/tags/Socket/"/>
    
  </entry>
  
  <entry>
    <title>iOS指纹解锁Touch ID使用说明文档</title>
    <link href="https://blog.qzcool.com/2016/09/30/How-to-use-iOS-TouchID/"/>
    <id>https://blog.qzcool.com/2016/09/30/How-to-use-iOS-TouchID/</id>
    <published>2016-09-30T08:47:53.000Z</published>
    <updated>2016-09-30T09:52:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iOS指纹解锁Touch-ID使用说明文档"><a href="#iOS指纹解锁Touch-ID使用说明文档" class="headerlink" title="iOS指纹解锁Touch ID使用说明文档"></a>iOS指纹解锁Touch ID使用说明文档</h2><blockquote><p>时间:2016-09-21</p></blockquote><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>使用方法可以参考提供的demo项目”DemoTouchID”,项目使用obj c++语言xcode 版本8.0开发.<br>下载地址:<a href="http://pan.baidu.com/s/1pLIVKtd" target="_blank" rel="external">http://pan.baidu.com/s/1pLIVKtd</a></p><h3 id="一-支持系统和机型"><a href="#一-支持系统和机型" class="headerlink" title="一.支持系统和机型"></a>一.支持系统和机型</h3><p>iOS系统的指纹识别功能最低支持的机型为iPhone 5s，最低支持系统为iOS 8。 </p><a id="more"></a><h3 id="二-依赖框架"><a href="#二-依赖框架" class="headerlink" title="二.依赖框架"></a>二.依赖框架</h3><p>在使用前需要导入 LocalAuthentication.framework 这个库 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#import &lt;LocalAuthentication/LocalAuthentication.h&gt;</div></pre></td></tr></table></figure><h3 id="三-错误类型"><a href="#三-错误类型" class="headerlink" title="三.错误类型"></a>三.错误类型</h3><p>目前Touch ID的错误类型如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">typedef NS_ENUM(NSInteger, LAError)</div><div class="line"></div><div class="line">&#123;</div><div class="line"></div><div class="line">    /// Authentication was not successful, because user failed to provide valid credentials.</div><div class="line">  // 用户未提供有效证书,(3次机会失败 --身份验证失败)。</div><div class="line"> LAErrorAuthenticationFailed = kLAErrorAuthenticationFailed, </div><div class="line"></div><div class="line">    /// Authentication was canceled by user (e.g. tapped Cancel button).</div><div class="line"></div><div class="line">    LAErrorUserCancel           = kLAErrorUserCancel, </div><div class="line"></div><div class="line">    /// Authentication was canceled, because the user tapped the fallback button (Enter Password).</div><div class="line"></div><div class="line">    LAErrorUserFallback         = kLAErrorUserFallback, </div><div class="line"></div><div class="line">    /// Authentication was canceled by system (e.g. another application went to foreground).</div><div class="line"></div><div class="line">    LAErrorSystemCancel         = kLAErrorSystemCancel, </div><div class="line"></div><div class="line">    /// Authentication could not start, because passcode is not set on the device.</div><div class="line"></div><div class="line">    LAErrorPasscodeNotSet       = kLAErrorPasscodeNotSet, </div><div class="line"></div><div class="line">    /// Authentication could not start, because Touch ID is not available on the device.</div><div class="line"></div><div class="line">    LAErrorTouchIDNotAvailable  = kLAErrorTouchIDNotAvailable,     </div><div class="line"></div><div class="line">    /// Authentication could not start, because Touch ID has no enrolled fingers.</div><div class="line"></div><div class="line">    LAErrorTouchIDNotEnrolled = kLAErrorTouchIDNotEnrolled, </div><div class="line"></div><div class="line">    /// Authentication was not successful, because there were too many failed Touch ID attempts and</div><div class="line"></div><div class="line">    /// Touch ID is now locked. Passcode is required to unlock Touch ID, e.g. evaluating</div><div class="line"></div><div class="line">    /// LAPolicyDeviceOwnerAuthenticationWithBiometrics will ask for passcode as a prerequisite.</div><div class="line"></div><div class="line">    LAErrorTouchIDLockout   NS_ENUM_AVAILABLE(10_11, 9_0) __WATCHOS_AVAILABLE(3.0) __TVOS_AVAILABLE(10.0) = kLAErrorTouchIDLockout,  </div><div class="line"></div><div class="line">    /// Authentication was canceled by application (e.g. invalidate was called while</div><div class="line"></div><div class="line">    /// authentication was in progress).</div><div class="line"></div><div class="line">    LAErrorAppCancel        NS_ENUM_AVAILABLE(10_11, 9_0) = kLAErrorAppCancel, </div><div class="line"></div><div class="line">    /// LAContext passed to this call has been previously invalidated.</div><div class="line"></div><div class="line">    LAErrorInvalidContext   NS_ENUM_AVAILABLE(10_11, 9_0) = kLAErrorInvalidContext</div><div class="line"></div><div class="line">&#125; NS_ENUM_AVAILABLE(10_10, 8_0) __WATCHOS_AVAILABLE(3.0) __TVOS_AVAILABLE(10.0);</div></pre></td></tr></table></figure></p><p>iOS 9 新增了3种错误类型: </p><blockquote><ul><li>LAErrorTouchIDLockout:是在8.0中也会出现的情况，但并未归为单独的错误类型，这个错误出现，源自用户多次连续使用Touch ID失败，Touch ID被锁，需要用户输入密码解锁</li></ul></blockquote><blockquote><ul><li>LAErrorAppCancel和LAErrorSystemCancel相似，都是当前软件被挂起取消了授权，但是前者是用户不能控制的挂起，例如突然来了电话，电话应用进入前台，APP被挂起。后者是用户自己切到了别的应用，例如按home键挂起。</li><li>LAErrorInvalidContext很好理解，就是授权过程中,LAContext对象被释放掉了，造成的授权失败。</li></ul></blockquote><h3 id="四-代码"><a href="#四-代码" class="headerlink" title="四.代码"></a>四.代码</h3><p>首先判断系统版本，iOS 8及以上版本执行-(void)authByTouchID方法，方法自动判断设备是否支持和开启Touch ID。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">-(void)AuthByTouchID</div><div class="line"></div><div class="line">&#123;//通过指纹验证</div><div class="line"></div><div class="line">    LAContext *context = [[LAContext alloc] init];</div><div class="line"></div><div class="line">    context.localizedFallbackTitle = @&quot;手势解锁&quot;;//不设置默认显示&quot;输入密码&quot;    </div><div class="line"></div><div class="line">    NSError *error = nil; </div><div class="line"></div><div class="line">    BOOL isTouchIdAvailable = [context canEvaluatePolicy:LAPolicyDeviceOwnerAuthenticationWithBiometrics error:&amp;error];  </div><div class="line"></div><div class="line">    if (isTouchIdAvailable)</div><div class="line"></div><div class="line">    &#123;</div><div class="line"></div><div class="line">        [context evaluatePolicy:LAPolicyDeviceOwnerAuthenticationWithBiometrics</div><div class="line"></div><div class="line">                localizedReason:@&quot;通过Home键验证已有手机指纹&quot; reply:^(BOOL success, NSError *error) &#123; </div><div class="line"></div><div class="line">                    if (success) &#123;</div><div class="line"></div><div class="line">                        //验证成功，主线程处理UI</div><div class="line"></div><div class="line">                        dispatch_async (dispatch_get_main_queue(), ^&#123;</div><div class="line"></div><div class="line">                            //在主线程更新 UI,不然会卡主</div><div class="line"></div><div class="line">                            NSLog(@&quot;Authentication success&quot;);</div><div class="line"></div><div class="line">                        &#125;); </div><div class="line"></div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    else</div><div class="line"></div><div class="line">                    &#123;</div><div class="line"></div><div class="line">                        NSLog(@&quot;%@ %ld&quot;,error.localizedDescription,(long)error.code);</div><div class="line"></div><div class="line">                        switch (error.code) &#123;</div><div class="line"></div><div class="line">                            case kLAErrorAuthenticationFailed:</div><div class="line"></div><div class="line">                            &#123;</div><div class="line"></div><div class="line">                                NSLog(@&quot;Authentication was not successful, because user failed to provide valid credentials&quot;);</div><div class="line"></div><div class="line">                                //超过尝试次数,认证失败</div><div class="line"></div><div class="line">                                break;</div><div class="line"></div><div class="line">                            &#125;</div><div class="line"></div><div class="line">                            case LAErrorSystemCancel:</div><div class="line"></div><div class="line">                            &#123;</div><div class="line"></div><div class="line">                                NSLog(@&quot;Authentication was cancelled by the system&quot;);</div><div class="line"></div><div class="line">                                //切换到其他APP，系统取消验证Touch ID</div><div class="line"></div><div class="line">                                break;</div><div class="line"></div><div class="line">                            &#125;</div><div class="line"></div><div class="line">                            case LAErrorUserCancel:</div><div class="line"></div><div class="line">                            &#123;</div><div class="line"></div><div class="line">                                NSLog(@&quot;Authentication was cancelled by the user&quot;);</div><div class="line"></div><div class="line">                                //用户取消验证Touch ID</div><div class="line"></div><div class="line">                                break;</div><div class="line"></div><div class="line">                            &#125;</div><div class="line"></div><div class="line">                            case LAErrorUserFallback:</div><div class="line"></div><div class="line">                            &#123;</div><div class="line"></div><div class="line">                                NSLog(@&quot;User selected to enter custom password&quot;);</div><div class="line"></div><div class="line">                                [[NSOperationQueue mainQueue] addOperationWithBlock:^&#123;</div><div class="line"></div><div class="line">                                    //用户选择输入密码，切换主线程处理</div><div class="line"></div><div class="line">                                &#125;];</div><div class="line"></div><div class="line">                                break;</div><div class="line"></div><div class="line">                            &#125;</div><div class="line"></div><div class="line">                            default:</div><div class="line"></div><div class="line">                            &#123;</div><div class="line"></div><div class="line">                                [[NSOperationQueue mainQueue] addOperationWithBlock:^&#123;</div><div class="line"></div><div class="line">                                    //其他情况，切换主线程处理</div><div class="line"></div><div class="line">                                    NSLog(@&quot;%@&quot;,error.localizedDescription);</div><div class="line"></div><div class="line">                                &#125;];</div><div class="line"></div><div class="line">                                break;</div><div class="line"></div><div class="line">                            &#125;</div><div class="line"></div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                    &#125;                     </div><div class="line"></div><div class="line">                &#125;];</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    else</div><div class="line"></div><div class="line">    &#123;</div><div class="line"></div><div class="line">        //不支持指纹识别，LOG出错误详情 </div><div class="line"></div><div class="line">        switch (error.code) &#123;</div><div class="line"></div><div class="line">            case LAErrorTouchIDNotEnrolled:</div><div class="line"></div><div class="line">            &#123;</div><div class="line"></div><div class="line">                NSLog(@&quot;TouchID is not  &quot;);</div><div class="line"></div><div class="line">                break;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            case LAErrorPasscodeNotSet:</div><div class="line"></div><div class="line">            &#123;</div><div class="line"></div><div class="line">                NSLog(@&quot;A passcode has not been set&quot;);</div><div class="line"></div><div class="line">                break;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            case LAErrorTouchIDLockout:</div><div class="line"></div><div class="line">            &#123;//touchid已被锁定</div><div class="line"></div><div class="line">                NSLog(@&quot;LAErrorTouchIDLockout&quot;);</div><div class="line"></div><div class="line">                break;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            default:</div><div class="line"></div><div class="line">            &#123;</div><div class="line"></div><div class="line">                NSLog(@&quot;TouchID not available&quot;);</div><div class="line"></div><div class="line">                break;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125; </div><div class="line"></div><div class="line">        NSLog(@&quot;%@&quot;,error.localizedDescription);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;iOS指纹解锁Touch-ID使用说明文档&quot;&gt;&lt;a href=&quot;#iOS指纹解锁Touch-ID使用说明文档&quot; class=&quot;headerlink&quot; title=&quot;iOS指纹解锁Touch ID使用说明文档&quot;&gt;&lt;/a&gt;iOS指纹解锁Touch ID使用说明文档&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;时间:2016-09-21&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;使用方法可以参考提供的demo项目”DemoTouchID”,项目使用obj c++语言xcode 版本8.0开发.&lt;br&gt;下载地址:&lt;a href=&quot;http://pan.baidu.com/s/1pLIVKtd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1pLIVKtd&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;一-支持系统和机型&quot;&gt;&lt;a href=&quot;#一-支持系统和机型&quot; class=&quot;headerlink&quot; title=&quot;一.支持系统和机型&quot;&gt;&lt;/a&gt;一.支持系统和机型&lt;/h3&gt;&lt;p&gt;iOS系统的指纹识别功能最低支持的机型为iPhone 5s，最低支持系统为iOS 8。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="https://blog.qzcool.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://blog.qzcool.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>德化或将2020年通火车</title>
    <link href="https://blog.qzcool.com/2016/06/21/%E5%BE%B7%E5%8C%96%E6%88%96%E5%B0%862020%E5%B9%B4%E9%80%9A%E7%81%AB%E8%BD%A6/"/>
    <id>https://blog.qzcool.com/2016/06/21/德化或将2020年通火车/</id>
    <published>2016-06-21T09:21:01.000Z</published>
    <updated>2016-06-20T15:58:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>前几天看到家乡将开始建设铁路的重大新闻,兴泉铁路即将开工,兴泉铁路福建段（宁化至泉州）预计今年第三季度全线开工,设计工期为4.5年,德化站点设在盖德乡,铁路设计时速160公里,结束了德化没有铁路的历史,届时德化到泉州和厦门的通行时间将进一步缩短,出行更加方便了.希望这次消息比较靠谱,第一次听到要建设铁路已经是几年前的事情了.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前几天看到家乡将开始建设铁路的重大新闻,兴泉铁路即将开工,兴泉铁路福建段（宁化至泉州）预计今年第三季度全线开工,设计工期为4.5年,德化站点设在盖德乡,铁路设计时速160公里,结束了德化没有铁路的历史,届时德化到泉州和厦门的通行时间将进一步缩短,出行更加方便了.希望这次消息
      
    
    </summary>
    
    
      <category term="日记" scheme="https://blog.qzcool.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="https://blog.qzcool.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>MAC下安装Redis</title>
    <link href="https://blog.qzcool.com/2016/06/21/mac-redis/"/>
    <id>https://blog.qzcool.com/2016/06/21/mac-redis/</id>
    <published>2016-06-21T07:01:01.000Z</published>
    <updated>2016-06-28T01:14:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GUI-管理工具"><a href="#GUI-管理工具" class="headerlink" title="GUI 管理工具"></a>GUI 管理工具</h2><p>RedisDesktopManager</p><p>下载地址:<br><a href="https://github.com/uglide/RedisDesktopManager/releases" target="_blank" rel="external">RedisDesktopManager</a></p><h2 id="Redis安装"><a href="#Redis安装" class="headerlink" title="Redis安装"></a>Redis安装</h2><p>参考文章<br><a href="http://www.jianshu.com/p/6b5eca8d908b" target="_blank" rel="external">Mac环境下安装Redis</a></p><h2 id="Redis启动"><a href="#Redis启动" class="headerlink" title="Redis启动"></a>Redis启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-server redis.conf</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;GUI-管理工具&quot;&gt;&lt;a href=&quot;#GUI-管理工具&quot; class=&quot;headerlink&quot; title=&quot;GUI 管理工具&quot;&gt;&lt;/a&gt;GUI 管理工具&lt;/h2&gt;&lt;p&gt;RedisDesktopManager&lt;/p&gt;
&lt;p&gt;下载地址:&lt;br&gt;&lt;a href=&quot;h
      
    
    </summary>
    
    
      <category term="Redis" scheme="https://blog.qzcool.com/categories/Redis/"/>
    
    
      <category term="Redis" scheme="https://blog.qzcool.com/tags/Redis/"/>
    
  </entry>
  
</feed>
