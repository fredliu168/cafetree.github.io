<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>非鱼笔记</title>
  
  <subtitle>随手笔记 一个没技术含量的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.qzcool.com/"/>
  <updated>2020-08-27T08:46:54.277Z</updated>
  <id>https://blog.qzcool.com/</id>
  
  <author>
    <name>fredliu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>certbot-auto错误处理</title>
    <link href="https://blog.qzcool.com/2020/08/27/certbot-auto%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"/>
    <id>https://blog.qzcool.com/2020/08/27/certbot-auto错误处理/</id>
    <published>2020-08-27T07:15:55.000Z</published>
    <updated>2020-08-27T08:46:54.277Z</updated>
    
    <content type="html"><![CDATA[<p>使用 cerbot-auto 时提示如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UnicodeEncodeError: &apos;ascii&apos; codec can&apos;t encode character u&apos;\u4e0e&apos; in position 2870: ordinal not in range(128)</div></pre></td></tr></table></figure><p>查看日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/var/log/letsencrypt/letsencrypt.log</div></pre></td></tr></table></figure><p>错误原因：<br>在 python2.7 下将字符串写入到文件时会出现”UnicodeEncodeError: ‘ascii’ codec can’t encode character u’\xa0’ in position”的错误,原因是由于 python 基于 ASCII 处理字符的，当出现不属于 ASCII 的字符时，会出现错误信息。</p><p>解决办法：<br>指定文件字符集为 utf-8</p><p>在 letsencryp 头文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /opt/eff.org/certbot/venv/bin/letsencrypt</div></pre></td></tr></table></figure><p>加入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import sys</div><div class="line">reload(sys)</div><div class="line">sys.setdefaultencoding(&apos;utf-8&apos;)</div></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 cerbot-auto 时提示如下错误：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;UnicodeEncodeError: &amp;apos;ascii&amp;apos; codec can&amp;apos;t encode character u&amp;apos;\u4e0e&amp;apos; in position 2870: ordinal not in range(128)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看日志&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/var/log/letsencrypt/letsencrypt.log&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;错误原因：&lt;br&gt;在 python2.7 下将字符串写入到文件时会出现”UnicodeEncodeError: ‘ascii’ codec can’t encode character u’\xa0’ in position”的错误,原因是由于 python 基于 ASCII 处理字符的，当出现不属于 ASCII 的字符时，会出现错误信息。&lt;/p&gt;
&lt;p&gt;解决办法：&lt;br&gt;指定文件字符集为 utf-8&lt;/p&gt;
&lt;p&gt;在 letsencryp 头文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;vim /opt/eff.org/certbot/venv/bin/letsencrypt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;加入以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import sys&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;reload(sys)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sys.setdefaultencoding(&amp;apos;utf-8&amp;apos;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派chromium设置sock5代理访问</title>
    <link href="https://blog.qzcool.com/2020/08/21/%E6%A0%91%E8%8E%93%E6%B4%BEchromium%E8%AE%BE%E7%BD%AEsock5%E4%BB%A3%E7%90%86%E8%AE%BF%E9%97%AE/"/>
    <id>https://blog.qzcool.com/2020/08/21/树莓派chromium设置sock5代理访问/</id>
    <published>2020-08-21T09:20:43.000Z</published>
    <updated>2020-08-21T09:23:37.298Z</updated>
    
    <content type="html"><![CDATA[<p>由于在特定网络环境下 chromium 需要通过代理访问,可以用如下方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chromium-browser --proxy-server=&quot;socks5://192.168.31.5:1080&quot;</div></pre></td></tr></table></figure><p>经过测试使用 127.0.0.1 无法代理，必须使用设备 ip。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于在特定网络环境下 chromium 需要通过代理访问,可以用如下方法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;chromium-browser --proxy-server=&amp;quot;socks5://192.168.31.5:1080&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;经过测试使用 127.0.0.1 无法代理，必须使用设备 ip。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派连接隐藏wifi网络</title>
    <link href="https://blog.qzcool.com/2020/08/21/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9E%E6%8E%A5%E9%9A%90%E8%97%8Fwifi%E7%BD%91%E7%BB%9C/"/>
    <id>https://blog.qzcool.com/2020/08/21/树莓派连接隐藏wifi网络/</id>
    <published>2020-08-21T07:20:20.000Z</published>
    <updated>2020-08-21T07:25:52.508Z</updated>
    
    <content type="html"><![CDATA[<p>使用 nano 编辑器打开 wpa-supplicant 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /etc/wpa_supplicant/wpa_supplicant.conf</div></pre></td></tr></table></figure><p>在文件底部添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">network=&#123;</div><div class="line">ssid=”wifi_name”</div><div class="line">scan_ssid=1</div><div class="line">psk=”wifi_password”</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>关键是 ssid_scan=1 这一句，加上后才能扫描到隐藏的 wifi 网络。之后保存退出（ctrl+o 保存，ctrl+x 退出）nano 编辑器，reboot 重启即可。</p><p>相关 network 的配置信息：<br>network：是一个连接一个 WiFi 网络的配置，可以有多个，wpa_supplicant 会按照 priority 指定的优先级（数字越大越先连接）来连接，当然，在这个列表里面隐藏 WiFi 不受 priority 的影响，隐藏 WiFi 总是在可见 WiFi 不能连接时才开始连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ssid:网络的ssid</div><div class="line">psk:密码</div><div class="line">priority:连接优先级，越大越优先</div><div class="line">scan_ssid:连接隐藏WiFi时需要指定该值为1</div></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 nano 编辑器打开 wpa-supplicant 配置文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo nano /etc/wpa_supplicant/wpa_supplicant.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在文件底部添加：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;network=&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssid=”wifi_name”&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scan_ssid=1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;psk=”wifi_password”&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;关键是 ssid_scan=1 这一句，加上后才能扫描到隐藏的 wifi 网络。之后保存退出（ctrl+o 保存，ctrl+x 退出）nano 编辑器，reboot 重启即可。&lt;/p&gt;
&lt;p&gt;相关 network 的配置信息：&lt;br&gt;network：是一个连接一个 WiFi 网络的配置，可以有多个，wpa_supplicant 会按照 priority 指定的优先级（数字越大越先连接）来连接，当然，在这个列表里面隐藏 WiFi 不受 priority 的影响，隐藏 WiFi 总是在可见 WiFi 不能连接时才开始连接。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ssid:网络的ssid&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;psk:密码&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;priority:连接优先级，越大越优先&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scan_ssid:连接隐藏WiFi时需要指定该值为1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="树莓派" scheme="https://blog.qzcool.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>iMac终端走Socks5代理方法</title>
    <link href="https://blog.qzcool.com/2020/08/19/iMac%E7%BB%88%E7%AB%AF%E8%B5%B0Socks5%E4%BB%A3%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.qzcool.com/2020/08/19/iMac终端走Socks5代理方法/</id>
    <published>2020-08-19T09:44:16.000Z</published>
    <updated>2020-08-21T07:26:28.851Z</updated>
    
    <content type="html"><![CDATA[<p>1.找到代理地址和端口<br>本人的 Socks5 的监听地址是 127.0.0.1，端口 1086</p><ol start="2"><li>打开终端添加配置</li></ol><p>（我的终端是 zsh）打开终端，输入以下代码打开 vim</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim ~/.zshrc</div></pre></td></tr></table></figure><p>按下键盘上的字母「i」，进入编辑模式，输入以下代码，第二行末尾改成自己的代理地址和端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># proxy list</div><div class="line">alias proxy=&apos;export all_proxy=socks5://127.0.0.1:1086&apos;</div><div class="line">alias unproxy=&apos;unset all_proxy&apos;</div></pre></td></tr></table></figure><p>按下键盘上的「esc」，退出编辑模式。输入以下代码保存修改并退出 vim</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:wq</div></pre></td></tr></table></figure><p>初始化配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source ~/.zshrc</div></pre></td></tr></table></figure><ol start="3"><li>执行</li></ol><p>开启代理模式，查看 ip，看看 brew update 命令顺畅与否</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">proxy</div><div class="line">brew update</div></pre></td></tr></table></figure><p>如果不想走代理了则使用 unproxy 命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">unproxy</div></pre></td></tr></table></figure><p>开启代理模式前后可以查看 ip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl cip.cc</div></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.找到代理地址和端口&lt;br&gt;本人的 Socks5 的监听地址是 127.0.0.1，端口 1086&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;打开终端添加配置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（我的终端是 zsh）打开终端，输入以下代码打开 vim&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;vim ~/.zshrc&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按下键盘上的字母「i」，进入编辑模式，输入以下代码，第二行末尾改成自己的代理地址和端口&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# proxy list&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alias proxy=&amp;apos;export all_proxy=socks5://127.0.0.1:1086&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alias unproxy=&amp;apos;unset all_proxy&amp;apos;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按下键盘上的「esc」，退出编辑模式。输入以下代码保存修改并退出 vim&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;:wq&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;初始化配置&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;source ~/.zshrc&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;执行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;开启代理模式，查看 ip，看看 brew update 命令顺畅与否&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;proxy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew update&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果不想走代理了则使用 unproxy 命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;unproxy&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;开启代理模式前后可以查看 ip&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl cip.cc&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="iMac" scheme="https://blog.qzcool.com/tags/iMac/"/>
    
  </entry>
  
  <entry>
    <title>树莓派通过Nginx发布共享音频文件</title>
    <link href="https://blog.qzcool.com/2020/08/18/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%80%9A%E8%BF%87Nginx%E5%8F%91%E5%B8%83%E5%85%B1%E4%BA%AB%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6/"/>
    <id>https://blog.qzcool.com/2020/08/18/树莓派通过Nginx发布共享音频文件/</id>
    <published>2020-08-18T07:41:34.000Z</published>
    <updated>2020-08-19T09:43:00.469Z</updated>
    
    <content type="html"><![CDATA[<p>我们想通过局域网共享一下存放在树莓派里面的音频文件，树莓派安装了树莓派自带的系统。</p><p>1、安装 Nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install nginx</div></pre></td></tr></table></figure><p>2.测试是否安装成功（nginx 默认是 80 端口）</p><p>浏览 127.0.0.1 看网页是否正确显示</p><p>3.设置配置文件</p><p>获取 nginx 配置文件路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nginx -t</div></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class="line">nginx: configuration file /etc/nginx/nginx.conf test is successful</div></pre></td></tr></table></figure><a id="more"></a><p>我们知道了默认路径 /etc/nginx</p><p>进入 /etc/nginx/sites-available</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /etc/nginx/sites-available</div></pre></td></tr></table></figure><p>编辑 default 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano default</div></pre></td></tr></table></figure><p>在空白处粘贴以下内容，可以改成自己需要：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen       8080;</div><div class="line">        server_name  localhost;</div><div class="line">        root /home/iflyos/iflyos_sound;</div><div class="line">        location / &#123;</div><div class="line">            autoindex on;</div><div class="line">            autoindex_exact_size off;</div><div class="line">            autoindex_localtime on;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">     &#125;</div></pre></td></tr></table></figure><p>按 CTRL+O 保存退出</p><p>4.重新加载 nginx 配置</p><p>先测试配置文件是否有误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nginx -t</div></pre></td></tr></table></figure><p>没有提示错误的话进行下一步操作，如果有提示错误，根据错误进行修改</p><p>从新加载配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nginx -s reload</div></pre></td></tr></table></figure><p>没有提示错误的话就可以通过浏览器进行访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1:8080/xx/xxx.mp3</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们想通过局域网共享一下存放在树莓派里面的音频文件，树莓派安装了树莓派自带的系统。&lt;/p&gt;
&lt;p&gt;1、安装 Nginx&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install nginx&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.测试是否安装成功（nginx 默认是 80 端口）&lt;/p&gt;
&lt;p&gt;浏览 127.0.0.1 看网页是否正确显示&lt;/p&gt;
&lt;p&gt;3.设置配置文件&lt;/p&gt;
&lt;p&gt;获取 nginx 配置文件路径&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo nginx -t&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;nginx: the configuration file /etc/nginx/nginx.conf syntax is ok&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nginx: configuration file /etc/nginx/nginx.conf test is successful&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="树莓派" scheme="https://blog.qzcool.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>MacbookPro2015升级SSD固态硬盘</title>
    <link href="https://blog.qzcool.com/2020/06/15/MacbookPro2015%E5%8D%87%E7%BA%A7SSD%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/"/>
    <id>https://blog.qzcool.com/2020/06/15/MacbookPro2015升级SSD固态硬盘/</id>
    <published>2020-06-15T08:33:12.000Z</published>
    <updated>2020-06-15T09:47:35.098Z</updated>
    
    <content type="html"><![CDATA[<p>为了给 MacBook pro2015 升级硬盘，网上看了很多文章，基本上是要求买个硬盘盒进行格式化硬盘，用 U 盘做引导，其实是不用的，如果你想要升级硬盘可以参考我的做法，关于拆机部分可以参考网上的其他文章。<br>我升级过程过程中出现了一个小意外，进系统实用工具之后是找不到 SSD,还在考虑是不是要买个硬盘盒的时候搜索了一下文章，发现是开机时按键盘的方式不对，重启后可以识别出来了。</p><p>618 区间一只关注固态硬盘的价格，看到 HP EX900 500G 降到 380 块的时候，用卷和京豆最后 350 块价格买下了，然后淘宝上淘一个转接卡回来，开搞。</p><p>1.找一块硬盘做 TimeMachine</p><p>2.关机</p><p>3.拆机</p><p>4.拔电源</p><p>5.拆硬盘</p><p>6.换硬盘</p><p>7.插电</p><p>然后可以开机了，记得要同时按“电源+cmd+r+option”四个按键，等小地球出来松手，少按一个都不行，我第一次只按了 command+R+电源键，结果进系统实用工具之后是找不到 SSD 的。</p><p>8.格式化 ssd<br>记得要选择 APFS 格式，分区选择 GUID<br>SSD 格式化之后关闭磁盘工具，回到系统首页，直接选择第一个从时间机器备份进行恢复<br>然后就是一路下一步下一步，选择备份磁盘，选择目标磁盘 EX 900<br>恢复完成之后系统会自己重启，这时候登陆 Apple ID，进入系统，至此全部完成，记得关机，把后盖螺丝都拧上</p><p>可以参考这篇文章：<br><a href="https://new.qq.com/omn/20191210/20191210A0DVDF00.html" target="_blank" rel="external">https://new.qq.com/omn/20191210/20191210A0DVDF00.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;为了给 MacBook pro2015 升级硬盘，网上看了很多文章，基本上是要求买个硬盘盒进行格式化硬盘，用 U 盘做引导，其实是不用的，如果你想要升级硬盘可以参考我的做法，关于拆机部分可以参考网上的其他文章。&lt;br&gt;我升级过程过程中出现了一个小意外，进系统实用工具之后是找
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派搭建Nas</title>
    <link href="https://blog.qzcool.com/2020/05/27/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BANas/"/>
    <id>https://blog.qzcool.com/2020/05/27/树莓派搭建Nas/</id>
    <published>2020-05-27T07:39:12.000Z</published>
    <updated>2020-05-27T11:22:29.972Z</updated>
    
    <content type="html"><![CDATA[<p>Step 1: 更新系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get upgrade</div></pre></td></tr></table></figure><p>Step 2: 安装 Samba</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install samba samba-common-bin</div></pre></td></tr></table></figure><p>Step 3: 挂载移动硬盘</p><p>Step 4: 使用 Samba 共享文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /etc/samba/smb.conf</div></pre></td></tr></table></figure><p>在文件的身份验证下面添加上这一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">security = user</div></pre></td></tr></table></figure><p>Step 5: 设置共享文件夹</p><p>还是在刚刚那个配置文件上，在结尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[MyNas]</div><div class="line">path = /home/pi/shared</div><div class="line">writeable=Yes</div><div class="line">create mask=0777</div><div class="line">directory mask=0777</div><div class="line">public=no</div></pre></td></tr></table></figure><p>MyNas: 这定义了与共享文件夹有关的地址和其他配置。例如，共享文件夹将是以下地址：\ raspberrypi \ MyNas。<br>path：共享文件夹目录；<br>valid users：有效用户；<br>read only：是否只读；<br>create mask：创建文件的权限；<br>directory mask：创建文件夹的权限；<br>guest ok：是否允许访客访问；<br>browseable：是否可见。</p><p>添加完成后保存就行了，CTRL + X 然后按 Y and 最后敲个回车</p><p>Step 6: 添加用户到 Samba</p><p>sudo smbpasswd -a pi<br>这一步会让你输入密码，这个密码是等会用来登陆 nas 用的，不是系统的那个密码。</p><p>pi 是树莓派默认的用户，如果你想改个名也可以，新建用户就完事了。<br>sudo adduser username<br>sudo smbpasswd -a username</p><p>这一步可能要重启 Samba 才能生效—————–注：samba 默认开机自启，无需为重启担心。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo samba restart</div></pre></td></tr></table></figure><p>挂载 ntfs 格式硬盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install ntfs-3g</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo umount /dev/sda2</div></pre></td></tr></table></figure><p>格式化 NTFS</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkfs.ntfs -f /dev/sda2</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mount -t ntfs-3g -o permissions /dev/sda2 /home/ubuntu/share</div></pre></td></tr></table></figure><p>自动挂载设备</p><p>查看要指定加载储存设备的 UUID</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo blkid</div></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/dev/mmcblk0p1: LABEL=”boot” UUID=”CDD4-B453” TYPE=”vfat” PARTUUID=”daf17199-01”</div><div class="line">/dev/mmcblk0p2: LABEL=”rootfs” UUID=”72bfc10d-73ec-4d9e-a54a-1cc507ee7ed2” TYPE=”ext4” PARTUUID=”daf17199-02”</div><div class="line">/dev/mmcblk0: PTUUID=”daf17199” PTTYPE=”dos”</div><div class="line">/dev/sda1: LABEL=”piusb” UUID=”3EFBF3DF518ACC17” TYPE=”ntfs” PARTLABEL=”Basic data partition” PARTUUID=”5cb848ac-2940-462f-8600-e881ce428606”</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 编辑设备管理</div><div class="line">sudo vim /etc/fstab</div><div class="line">// 在最后一行添加你要挂载的设备</div><div class="line">// 针对非 ntfs 格式的移动硬盘</div><div class="line">UUID=3EFBF3DF518ACC17 /media/piusb auto defaults,noexec,umask=0000 0 0</div><div class="line"></div><div class="line">// 针对 ntfs 格式的移动硬盘</div><div class="line">UUID=7AE83E6917B75C04 /home/ubuntu/share ntfs-3g defaults,noexec,umask=0000 0 0</div></pre></td></tr></table></figure><p>作者：HarryZhang6<br>链接：<a href="https://juejin.im/post/5e5c02dc6fb9a07ccb7e9b58" target="_blank" rel="external">https://juejin.im/post/5e5c02dc6fb9a07ccb7e9b58</a><br>来源：掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Step 1: 更新系统&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get update&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get upgrade&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Step 2: 安装 Samba&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install samba samba-common-bin&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Step 3: 挂载移动硬盘&lt;/p&gt;
&lt;p&gt;Step 4: 使用 Samba 共享文件夹&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo nano /etc/samba/smb.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在文件的身份验证下面添加上这一行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;security = user&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Step 5: 设置共享文件夹&lt;/p&gt;
&lt;p&gt;还是在刚刚那个配置文件上，在结尾添加：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[MyNas]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;path = /home/pi/shared&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;writeable=Yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;create mask=0777&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;directory mask=0777&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public=no&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;MyNas: 这定义了与共享文件夹有关的地址和其他配置。例如，共享文件夹将是以下地址：\ raspberrypi \ MyNas。&lt;br&gt;path：共享文件夹目录；&lt;br&gt;valid users：有效用户；&lt;br&gt;read only：是否只读；&lt;br&gt;create mask：创建文件的权限；&lt;br&gt;directory mask：创建文件夹的权限；&lt;br&gt;guest ok：是否允许访客访问；&lt;br&gt;browseable：是否可见。&lt;/p&gt;
&lt;p&gt;添加完成后保存就行了，CTRL + X 然后按 Y and 最后敲个回车&lt;/p&gt;
&lt;p&gt;Step 6: 添加用户到 Samba&lt;/p&gt;
&lt;p&gt;sudo smbpasswd -a pi&lt;br&gt;这一步会让你输入密码，这个密码是等会用来登陆 nas 用的，不是系统的那个密码。&lt;/p&gt;
&lt;p&gt;pi 是树莓派默认的用户，如果你想改个名也可以，新建用户就完事了。&lt;br&gt;sudo adduser username&lt;br&gt;sudo smbpasswd -a username&lt;/p&gt;
&lt;p&gt;这一步可能要重启 Samba 才能生效—————–注：samba 默认开机自启，无需为重启担心。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo samba restart&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;挂载 ntfs 格式硬盘&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install ntfs-3g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo umount /dev/sda2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;格式化 NTFS&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo mkfs.ntfs -f /dev/sda2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo mount -t ntfs-3g -o permissions /dev/sda2 /home/ubuntu/share&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自动挂载设备&lt;/p&gt;
&lt;p&gt;查看要指定加载储存设备的 UUID&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo blkid&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/dev/mmcblk0p1: LABEL=”boot” UUID=”CDD4-B453” TYPE=”vfat” PARTUUID=”daf17199-01”&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/dev/mmcblk0p2: LABEL=”rootfs” UUID=”72bfc10d-73ec-4d9e-a54a-1cc507ee7ed2” TYPE=”ext4” PARTUUID=”daf17199-02”&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/dev/mmcblk0: PTUUID=”daf17199” PTTYPE=”dos”&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/dev/sda1: LABEL=”piusb” UUID=”3EFBF3DF518ACC17” TYPE=”ntfs” PARTLABEL=”Basic data partition” PARTUUID=”5cb848ac-2940-462f-8600-e881ce428606”&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// 编辑设备管理&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo vim /etc/fstab&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 在最后一行添加你要挂载的设备&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 针对非 ntfs 格式的移动硬盘&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;UUID=3EFBF3DF518ACC17 /media/piusb auto defaults,noexec,umask=0000 0 0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 针对 ntfs 格式的移动硬盘&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;UUID=7AE83E6917B75C04 /home/ubuntu/share ntfs-3g defaults,noexec,umask=0000 0 0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;作者：HarryZhang6&lt;br&gt;链接：&lt;a href=&quot;https://juejin.im/post/5e5c02dc6fb9a07ccb7e9b58&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://juejin.im/post/5e5c02dc6fb9a07ccb7e9b58&lt;/a&gt;&lt;br&gt;来源：掘金&lt;br&gt;著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>显示来自远程JSON文件的SwiftUI列表</title>
    <link href="https://blog.qzcool.com/2020/05/07/%E6%98%BE%E7%A4%BA%E6%9D%A5%E8%87%AA%E8%BF%9C%E7%A8%8BJSON%E6%96%87%E4%BB%B6%E7%9A%84SwiftUI%E5%88%97%E8%A1%A8/"/>
    <id>https://blog.qzcool.com/2020/05/07/显示来自远程JSON文件的SwiftUI列表/</id>
    <published>2020-05-07T02:01:40.000Z</published>
    <updated>2020-05-07T02:08:42.793Z</updated>
    
    <content type="html"><![CDATA[<p>Displaying a List with SwiftUI from a remote JSON file</p><p>显示来自远程 JSON 文件的 SwiftUI 列表</p><p>The purpose of this tutorial is to show a simple way to fetch data from a remote JSON file and display it on a List in SwiftUI. Apple has a tutorial with a local file, also this one teaches you how to do this, however I want to show a simpler way using a newer version of Xcode 11.0 (11A420a).</p><p>本教程的目的是展示一种从远程 JSON 文件中获取数据并将其显示在 SwiftUI 的 List 中的简单方法。 苹果有一个本地文件的教程，也教你如何做到这一点，但我想显示一个更简单的方式使用新版本的 Xcode 11.0(11A420a)。</p><p>Apple beta libraries are getting constantly changed before releasing the final versions, so older tutorials might not work on the latest versions of XCode</p><p>在发布最终版本之前，苹果的测试版本库会不断更新，所以以前的教程可能无法在最新版本的 XCode 上工作</p><p>Supposing we have this JSON file, that show an array of movie titles.</p><p>假设我们有这个 JSON 文件，它显示一组电影标题。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"id"</span>: <span class="number">5</span>,</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"Joker"</span>,</div><div class="line">    <span class="attr">"year"</span>: <span class="string">"2019"</span>,</div><div class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</div><div class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T17:55:21.374Z"</span>,</div><div class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T17:55:21.374Z"</span></div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"Pulp Fiction"</span>,</div><div class="line">    <span class="attr">"year"</span>: <span class="string">"1994"</span>,</div><div class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</div><div class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T15:26:36.675Z"</span>,</div><div class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:05:31.649Z"</span></div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"id"</span>: <span class="number">4</span>,</div><div class="line">    <span class="attr">"title"</span>: <span class="string">" The Godfather "</span>,</div><div class="line">    <span class="attr">"year"</span>: <span class="string">"1972"</span>,</div><div class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</div><div class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T15:27:38.123Z"</span>,</div><div class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:05:50.242Z"</span></div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"id"</span>: <span class="number">6</span>,</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"The Dark Knight "</span>,</div><div class="line">    <span class="attr">"year"</span>: <span class="string">"2008"</span>,</div><div class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</div><div class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T18:06:12.933Z"</span>,</div><div class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:06:12.933Z"</span></div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"id"</span>: <span class="number">7</span>,</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"Fight Club"</span>,</div><div class="line">    <span class="attr">"year"</span>: <span class="string">"1999"</span>,</div><div class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</div><div class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T18:06:33.096Z"</span>,</div><div class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:06:33.096Z"</span></div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"id"</span>: <span class="number">8</span>,</div><div class="line">    <span class="attr">"title"</span>: <span class="string">" Inception"</span>,</div><div class="line">    <span class="attr">"year"</span>: <span class="string">"2010"</span>,</div><div class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</div><div class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T18:06:52.034Z"</span>,</div><div class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:06:52.034Z"</span></div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"id"</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"The Matrix "</span>,</div><div class="line">    <span class="attr">"year"</span>: <span class="string">"1999"</span>,</div><div class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</div><div class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T15:26:48.042Z"</span>,</div><div class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:08:00.902Z"</span></div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"id"</span>: <span class="number">3</span>,</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"The Shawshank Redemption "</span>,</div><div class="line">    <span class="attr">"year"</span>: <span class="string">"1984"</span>,</div><div class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</div><div class="line">    <span class="attr">"created_at"</span>: <span class="string">"2019-10-06T15:26:59.572Z"</span>,</div><div class="line">    <span class="attr">"updated_at"</span>: <span class="string">"2019-10-06T18:08:47.637Z"</span></div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure><p>And we want to display them on a SwiftUI List like this.</p><p>我们希望像这样在 SwiftUI 列表中显示它们。</p><img src="/2020/05/07/显示来自远程JSON文件的SwiftUI列表/swift_list.png" alt="This is an image" title="This is an image"><p>First we need to define the model for Movie in this case a struct with Decodable and Identifiable protocols. Decodable to be able to decode it from the JSON file and Identifiable to be able to be listed with List. List allows you to display a list of data from an Identifiable Collection just like a UITableViewController.</p><p>首先，在这种情况下，我们需要为 Movie 定义一个具有可解码和可识别协议的结构。 可解码能够从 JSON 文件解码，可识别能够与列表一起列出。 List 允许您像 UITableViewController 一样显示可识别集合中的数据列表。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Movie</span>: <span class="title">Decodable</span>, <span class="title">Identifiable</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">var</span> id: <span class="type">Int</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">var</span> name: <span class="type">String</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">var</span> released: <span class="type">String</span></div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">CodingKeys</span>: <span class="title">String</span>, <span class="title">CodingKey</span> </span>&#123;</div><div class="line">           <span class="keyword">case</span> id = <span class="string">"id"</span></div><div class="line">           <span class="keyword">case</span> name = <span class="string">"title"</span></div><div class="line">           <span class="keyword">case</span> released = <span class="string">"year"</span></div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><a id="more"></a><p>CodingKeys basically maps the JSON key names with the variable name of the Model you created. In this case instead of year I named it released just for the purpose of showing that you can use your own names in the model as long as you define it in Coding Keys.<br>Codingkeys</p><p>基本上将 JSON 键名与您创建的 Model 的变量名映射在一起。 在本例中，我将其命名为 released，而不是年份，只是为了显示您可以在模型中使用自己的名称，只要您在 Coding Keys 中定义它。</p><p>Next we create the fetcher class that will load the JSON file and decode it.</p><p>接下来，我们创建 fetcher 类，它将加载 JSON 文件并对其进行解码。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MovieFetcher</span>: <span class="title">ObservableObject</span> </span>&#123;</div><div class="line">    @<span class="type">Published</span> <span class="keyword">var</span> movies = [<span class="type">Movie</span>]()</div><div class="line"></div><div class="line">    <span class="keyword">init</span>()&#123;</div><div class="line">        load()</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">load</span><span class="params">()</span></span> &#123;</div><div class="line">        <span class="keyword">let</span> url = <span class="type">URL</span>(string: <span class="string">"https://gist.githubusercontent.com/rbreve/60eb5f6fe49d5f019d0c39d71cb8388d/raw/f6bc27e3e637257e2f75c278520709dd20b1e089/movies.json"</span>)!</div><div class="line"></div><div class="line">        <span class="type">URLSession</span>.shared.dataTask(with: url) &#123;(data,response,error) <span class="keyword">in</span></div><div class="line">            <span class="keyword">do</span> &#123;</div><div class="line">                <span class="keyword">if</span> <span class="keyword">let</span> d = data &#123;</div><div class="line">                    <span class="keyword">let</span> decodedLists = <span class="keyword">try</span> <span class="type">JSONDecoder</span>().decode([<span class="type">Movie</span>].<span class="keyword">self</span>, from: d)</div><div class="line">                    <span class="type">DispatchQueue</span>.main.async &#123;</div><div class="line">                        <span class="keyword">self</span>.movies = decodedLists</div><div class="line">                    &#125;</div><div class="line">                &#125;<span class="keyword">else</span> &#123;</div><div class="line">                    <span class="built_in">print</span>(<span class="string">"No Data"</span>)</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> &#123;</div><div class="line">                <span class="built_in">print</span> (<span class="string">"Error"</span>)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;.resume()</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>Before understanding what is happening, we need to understand the new Combine framework.</p><p>在理解正在发生的事情之前，我们需要理解新的组合框架。</p><p>The Combine framework provides a declarative Swift API for processing values over time. These values can represent many kinds of asynchronous events. Combine declares publishers to expose values that can change over time, and subscribers to receive those values from the publishers.</p><p>组合框架提供了一个声明性的 Swift API，用于随着时间的推移处理值。 这些值可以表示多种异步事件。 组合声明发布者以公开可能随时间变化的值，订阅者从发布者处接收这些值。</p><p>ObervableObject: A type of object with a publisher that emits before the object has changed. By default an ObservableObject synthesizes an objectWillChange publisher that emits the changed value before any of its @Published properties changes.<br>Obervableobject:</p><p>具有发行者的对象类型，在对象更改之前发出该对象。 默认情况下，ObservableObject 合成一个 objectWillChange 发布者，该发布者在其@published 属性更改之前发出更改的值。</p><p>@Published wraps the movies array and will generate events whenever it is changed.</p><p>@ published 对 movies 数组进行封装，并在更改时生成事件。</p><p>The load() method fetches the JSON data from the network asynchronously, once the data has been loaded we assign it to movies. When movies changes it will send an event a subscriber.</p><p>Load ()方法从网络中异步获取 JSON 数据，一旦数据被加载，我们就将其分配给电影。 当电影发生变化时，它会向订阅者发送一个事件。</p><p>This is the SwiftUI view, a List with the ObservedObject fetcher as parameter. Whenever movies is updated, the list will update autmatically.</p><p>这是 SwiftUI 视图，一个带有 ObservedObject 提取程序作为参数的 List。 每当电影更新时，列表将自动更新。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView</span>: <span class="title">View</span> </span>&#123;</div><div class="line">    @<span class="type">ObservedObject</span> <span class="keyword">var</span> fetcher = <span class="type">MovieFetcher</span>()</div><div class="line"></div><div class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</div><div class="line">        <span class="type">VStack</span> &#123;</div><div class="line">            <span class="type">List</span>(fetcher.movies) &#123; movie <span class="keyword">in</span></div><div class="line">                <span class="type">VStack</span> (alignment: .leading) &#123;</div><div class="line">                    <span class="type">Text</span>(movie.name)</div><div class="line">                    <span class="type">Text</span>(movie.released)</div><div class="line">                        .font(.system(size: <span class="number">11</span>))</div><div class="line">                        .foregroundColor(<span class="type">Color</span>.gray)</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>The whole code is here.</p><p>整个代码都在这里。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">//  FetchView.swift</span></div><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">//  Created by Roberto Breve  on 4.10.2019.</span></div><div class="line"><span class="comment">//  Copyright © 2019 Roberto Breve . All rights reserved.</span></div><div class="line"><span class="comment">//</span></div><div class="line"><span class="keyword">import</span> Foundation</div><div class="line"><span class="keyword">import</span> SwiftUI</div><div class="line"><span class="keyword">import</span> Combine</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">FetchView</span>: <span class="title">View</span> </span>&#123;</div><div class="line">    @<span class="type">ObservedObject</span> <span class="keyword">var</span> fetcher = <span class="type">MovieFetcher</span>()</div><div class="line"></div><div class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</div><div class="line">        <span class="type">VStack</span> &#123;</div><div class="line">            <span class="type">List</span>(fetcher.movies) &#123; movie <span class="keyword">in</span></div><div class="line">                <span class="type">VStack</span> (alignment: .leading) &#123;</div><div class="line">                    <span class="type">Text</span>(movie.name)</div><div class="line">                    <span class="type">Text</span>(movie.released)</div><div class="line">                        .font(.system(size: <span class="number">11</span>))</div><div class="line">                        .foregroundColor(<span class="type">Color</span>.gray)</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MovieFetcher</span>: <span class="title">ObservableObject</span> </span>&#123;</div><div class="line"></div><div class="line">    @<span class="type">Published</span> <span class="keyword">var</span> movies = [<span class="type">Movie</span>]()</div><div class="line"></div><div class="line">    <span class="keyword">init</span>()&#123;</div><div class="line">        load()</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">load</span><span class="params">()</span></span> &#123;</div><div class="line">        <span class="keyword">let</span> url = <span class="type">URL</span>(string: <span class="string">"https://gist.githubusercontent.com/rbreve/60eb5f6fe49d5f019d0c39d71cb8388d/raw/f6bc27e3e637257e2f75c278520709dd20b1e089/movies.json"</span>)!</div><div class="line"></div><div class="line">        <span class="type">URLSession</span>.shared.dataTask(with: url) &#123;(data,response,error) <span class="keyword">in</span></div><div class="line">            <span class="keyword">do</span> &#123;</div><div class="line">                <span class="keyword">if</span> <span class="keyword">let</span> d = data &#123;</div><div class="line">                    <span class="keyword">let</span> decodedLists = <span class="keyword">try</span> <span class="type">JSONDecoder</span>().decode([<span class="type">Movie</span>].<span class="keyword">self</span>, from: d)</div><div class="line">                    <span class="type">DispatchQueue</span>.main.async &#123;</div><div class="line">                        <span class="keyword">self</span>.movies = decodedLists</div><div class="line">                    &#125;</div><div class="line">                &#125;<span class="keyword">else</span> &#123;</div><div class="line">                    <span class="built_in">print</span>(<span class="string">"No Data"</span>)</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> &#123;</div><div class="line">                <span class="built_in">print</span> (<span class="string">"Error"</span>)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;.resume()</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Movie</span>: <span class="title">Codable</span>, <span class="title">Identifiable</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">var</span> id: <span class="type">Int</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">var</span> name: <span class="type">String</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">var</span> released: <span class="type">String</span></div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">CodingKeys</span>: <span class="title">String</span>, <span class="title">CodingKey</span> </span>&#123;</div><div class="line">           <span class="keyword">case</span> id = <span class="string">"id"</span></div><div class="line">           <span class="keyword">case</span> name = <span class="string">"title"</span></div><div class="line">           <span class="keyword">case</span> released = <span class="string">"year"</span></div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>文章来自：<a href="https://medium.com/@rbreve/displaying-a-list-with-swiftui-from-a-remote-json-file-6b4e4280a076" target="_blank" rel="external">https://medium.com/@rbreve/displaying-a-list-with-swiftui-from-a-remote-json-file-6b4e4280a076</a><br>WRITTEN BY 原文作者:<br>Roberto Breve 罗伯托 · 布雷夫</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Displaying a List with SwiftUI from a remote JSON file&lt;/p&gt;
&lt;p&gt;显示来自远程 JSON 文件的 SwiftUI 列表&lt;/p&gt;
&lt;p&gt;The purpose of this tutorial is to show a simple way to fetch data from a remote JSON file and display it on a List in SwiftUI. Apple has a tutorial with a local file, also this one teaches you how to do this, however I want to show a simpler way using a newer version of Xcode 11.0 (11A420a).&lt;/p&gt;
&lt;p&gt;本教程的目的是展示一种从远程 JSON 文件中获取数据并将其显示在 SwiftUI 的 List 中的简单方法。 苹果有一个本地文件的教程，也教你如何做到这一点，但我想显示一个更简单的方式使用新版本的 Xcode 11.0(11A420a)。&lt;/p&gt;
&lt;p&gt;Apple beta libraries are getting constantly changed before releasing the final versions, so older tutorials might not work on the latest versions of XCode&lt;/p&gt;
&lt;p&gt;在发布最终版本之前，苹果的测试版本库会不断更新，所以以前的教程可能无法在最新版本的 XCode 上工作&lt;/p&gt;
&lt;p&gt;Supposing we have this JSON file, that show an array of movie titles.&lt;/p&gt;
&lt;p&gt;假设我们有这个 JSON 文件，它显示一组电影标题。&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Joker&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T17:55:21.374Z&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T17:55:21.374Z&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Pulp Fiction&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1994&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T15:26:36.675Z&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:05:31.649Z&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot; The Godfather &quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1972&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T15:27:38.123Z&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:05:50.242Z&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;The Dark Knight &quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2008&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:12.933Z&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:12.933Z&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Fight Club&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1999&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:33.096Z&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:33.096Z&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot; Inception&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2010&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:52.034Z&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:06:52.034Z&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;The Matrix &quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1999&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T15:26:48.042Z&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:08:00.902Z&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;The Shawshank Redemption &quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;year&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1984&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;image&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;created_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T15:26:59.572Z&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2019-10-06T18:08:47.637Z&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And we want to display them on a SwiftUI List like this.&lt;/p&gt;
&lt;p&gt;我们希望像这样在 SwiftUI 列表中显示它们。&lt;/p&gt;
&lt;img src=&quot;/2020/05/07/显示来自远程JSON文件的SwiftUI列表/swift_list.png&quot; alt=&quot;This is an image&quot; title=&quot;This is an image&quot;&gt;
&lt;p&gt;First we need to define the model for Movie in this case a struct with Decodable and Identifiable protocols. Decodable to be able to decode it from the JSON file and Identifiable to be able to be listed with List. List allows you to display a list of data from an Identifiable Collection just like a UITableViewController.&lt;/p&gt;
&lt;p&gt;首先，在这种情况下，我们需要为 Movie 定义一个具有可解码和可识别协议的结构。 可解码能够从 JSON 文件解码，可识别能够与列表一起列出。 List 允许您像 UITableViewController 一样显示可识别集合中的数据列表。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Movie&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;Decodable&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Identifiable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; id: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; released: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CodingKeys&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;CodingKey&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; id = &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; released = &lt;span class=&quot;string&quot;&gt;&quot;year&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Mac软件推荐</title>
    <link href="https://blog.qzcool.com/2020/04/29/Mac%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    <id>https://blog.qzcool.com/2020/04/29/Mac软件推荐/</id>
    <published>2020-04-29T04:21:30.000Z</published>
    <updated>2020-08-21T07:28:54.628Z</updated>
    
    <content type="html"><![CDATA[<p>1.iRightMouse</p><p>iRightMouse 是一款很赞的 Mac 右键菜单扩展应用。包括：右键新建文件、右键移动文件/文件夹到指定文件夹、右键复制文件/文件夹到指定文件夹、右键当前位置打开终端、右键剪切/粘贴、右键显示隐藏文件、右键拷贝文件路径，选中文本右键通过服务快速进行百度翻译/谷歌翻译、右键自定义文件夹图标等功能。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.iRightMouse&lt;/p&gt;
&lt;p&gt;iRightMouse 是一款很赞的 Mac 右键菜单扩展应用。包括：右键新建文件、右键移动文件/文件夹到指定文件夹、右键复制文件/文件夹到指定文件夹、右键当前位置打开终端、右键剪切/粘贴、右键显示隐藏文件、右键拷贝文件路径，选中文本右键通过服务快速进行百度翻译/谷歌翻译、右键自定义文件夹图标等功能。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>openwrt软路由间歇性断流掉线无法连接的解决办法</title>
    <link href="https://blog.qzcool.com/2020/04/24/openwrt%E8%BD%AF%E8%B7%AF%E7%94%B1%E9%97%B4%E6%AD%87%E6%80%A7%E6%96%AD%E6%B5%81%E6%8E%89%E7%BA%BF%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://blog.qzcool.com/2020/04/24/openwrt软路由间歇性断流掉线无法连接的解决办法/</id>
    <published>2020-04-24T08:30:07.000Z</published>
    <updated>2020-04-24T08:31:34.975Z</updated>
    
    <content type="html"><![CDATA[<p>问题<br>树莓派 openwrt 作为软旁路由（网关）提供设备“出国访问”。但是经常性会发生断流，掉线的情况。</p><p>解决办法<br>openwrt 网络–》接口–》编辑 eth0 网口–》高级设置物理接口–》取消掉桥接<br>openwrt 网络–》防火墙–》自定义规则，添加如下规则，iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE，然后重启即可。</p><p>通过设置好像有改善了。</p><p>参考：<a href="http://blog.sinovale.com/2576.html" target="_blank" rel="external">http://blog.sinovale.com/2576.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;问题&lt;br&gt;树莓派 openwrt 作为软旁路由（网关）提供设备“出国访问”。但是经常性会发生断流，掉线的情况。&lt;/p&gt;
&lt;p&gt;解决办法&lt;br&gt;openwrt 网络–》接口–》编辑 eth0 网口–》高级设置物理接口–》取消掉桥接&lt;br&gt;openwrt 网络–》防火墙–》自
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派Docker中使用openwrt做旁路网关</title>
    <link href="https://blog.qzcool.com/2020/04/24/%E6%A0%91%E8%8E%93%E6%B4%BEDocker%E4%B8%AD%E4%BD%BF%E7%94%A8openwrt%E5%81%9A%E6%97%81%E8%B7%AF%E7%BD%91%E5%85%B3/"/>
    <id>https://blog.qzcool.com/2020/04/24/树莓派Docker中使用openwrt做旁路网关/</id>
    <published>2020-04-24T07:57:19.000Z</published>
    <updated>2020-04-24T08:01:58.940Z</updated>
    
    <content type="html"><![CDATA[<p>首先我们说一下 openwrt,说白了你可以你理解为路由器系统的一种。<br>OpenWrt 是面向嵌入型设备的 Linux 发行版，所以 OpenWrt 系统运行时的资源占用率会很低。而树莓派的硬件性能要比普通路由器要高很多。虽然树莓派在硬件配置上的绝对优势能让 OpenWrt 有更大的施展空间，但相应的，硬件上的优势也带来了资源的浪费（OpenWrt 在树莓派上正常运行时，资源占用率只有不到 1/10）。再加上 OpenWrt 的可扩展性不是很强，所以很多能在 Raspbian/Debian 上能做的事情在 OpenWrt 上往往无法实现。<br>总不可能直接用树莓派只刷个 openwrt 就没了吧，那怕是有点奢侈了。那有什么方式呢？<br>没错就是 Docker,这样就可以让 linux 和 openwrt 共存了。树莓派就不这么吃灰了。<br>旁路网关<br>那么什么又是旁路网关呢？其实他跟 spring cloud 有那么几分相似之处。<br>普通路由器就像一开始的单机模式，什么都是它一台机器负责，比如信号转发、DNS、网关等，其中的“网关”角色负责路由器内部数据的处理。但因为一般家用的路由器硬件性能很有限，在运行一些比较吃资源的应用（如酸酸乳、去广告等）时，几乎会占满所有硬件资源，导致路由器网络/系统不稳定等诸多问题。这个时候我们把网关的这个角色划分出去单独的在树莓派上跑，是不是分担了主路由的压力，是不是有点微服务那个味道。这样子每个角色各司其职，树莓派也结束了它吃灰的命运了，更好的验证了那句 买前生产力，买后旁路由。</p><p>注意：</p><p>本文 docker 镜像只适用于树莓派 2B/3B/3B+/4B，在其他设备上理论上不能正常使用<br>在 Docker 中运行 OpenWrt ，树莓派将工作在旁路网关模式下，在这种工作模式下，树莓派的板载无线网卡不会工作（同时在 OpenWrt 的控制面板中也找不到有关 WIFI 的设置）。所以，需要将树莓派与路由器通过网线连接来使用。</p><p>具体步骤</p><p>Step 1: 打开网卡混杂模式</p><p>sudo ip link set eth0 promisc on<br>复制代码<br>Step 2 :创建 docker 网络**</p><p>注意了，这里需要结合自己的网络修改，不能照搬！！ sudo ifconfig 可以查看树莓派 IP 地址，不过刚刚不是都知道了嘛 [汗]，多一种方式嘛<br>刚刚登陆 ssh 的 ip 地址 192.168.31.7 那么说明树莓派处在 192.168.31.x 网段，那么下面的命令中的<br>–subnet=192.168.x.0/24 和–gateway=192.168.x.1 将要替换成对应网段的地址。(此处的 x 请根据自己的网络进行修改)<br>替换后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker network create -d macvlan --subnet=192.168.31.0/24 --gateway=192.168.31.1 -o parent=eth0 macnet</div></pre></td></tr></table></figure><p>这是我们 docker network ls 就可以查看到刚刚创建的网络</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">pi@raspbian:~$ docker network ls</div><div class="line">NETWORK ID          NAME                DRIVER              SCOPE</div><div class="line">e5988f578007        bridge              bridge              local</div><div class="line">107c16227dd4        docker_gwbridge     bridge              local</div><div class="line">3ceb60d85b9c        host                host                local</div><div class="line">b1929166e45c        macnet              macvlan             local</div><div class="line">93ad7ae8da72        none                null                local</div></pre></td></tr></table></figure><p>这里我还特意去查了一下 macvlan<br>macvlan 是一种虚拟网卡的解决方案：</p><p>macvlan 并不创建网络，只创建虚拟网卡。<br>macvlan 会共享物理网卡所链接的外部网络，实现的效果跟桥接模式是一样的。</p><p>想要了解更多等会文末会附上个参考链接。</p><p>Step 3 :拉取镜像。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker pull harryzhang6/openwrt:latest</div></pre></td></tr></table></figure><p>复制代码我们可以通过 docker images 查看本地的镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pi@raspbian:~$ docker images</div><div class="line">REPOSITORY            TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">harryzhang6/openwrt   latest              5c354d2e6f6f        3 hours ago         235MB</div></pre></td></tr></table></figure><p>这里也就说明镜像拉取成功了。</p><p>Step 4 :创建并启动容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run --restart always --name openwrt -d --network macnet --privileged harryzhang6/openwrt:latest /sbin/init</div></pre></td></tr></table></figure><p>复制代码<br>–restart always 参数表示容器退出时始终重启，使服务尽量保持始终可用；<br>–name openwrt 参数定义了容器的名称；<br>-d 参数定义使容器运行在 Daemon 模式；<br>–network macnet 参数定义将容器加入 maxnet 网络；<br>–privileged 参数定义容器运行在特权模式下；</p><p>我们 docker ps 确认一下容器是否启动成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pi@raspbian:~$ docker ps</div><div class="line">CONTAINER ID        IMAGE                        COMMAND             CREATED             STATUS              PORTS               NAMES</div><div class="line">755d018206fd        harryzhang6/openwrt:latest   &quot;/sbin/init&quot;        2 minutes ago</div></pre></td></tr></table></figure><p>确认启动成功，下一步就是进入容器配置了</p><p>Step 5 :进入容器并修改相关参数</p><p>注意：这一步的某些配置也跟上面一样，不能照搬<br>docker exec -it openwrt bash<br>复制代码执行此命令后我们便进入 OpenWrt 的命令行界面，首先，我们需要编辑 OpenWrt 的网络配置文件：<br>vim /etc/config/network<br>复制代码我们需要更改 Lan 口设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">config interface &apos;lan&apos;</div><div class="line">        option type &apos;bridge&apos;</div><div class="line">        option ifname &apos;eth0&apos;</div><div class="line">        option proto &apos;static&apos;</div><div class="line">        option ipaddr &apos;192.168.31.100&apos; //需要更改处</div><div class="line">        option netmask &apos;255.255.255.0&apos;</div><div class="line">        option ip6assign &apos;60&apos;</div><div class="line">        option gateway &apos;192.168.31.1&apos; //需要更改处</div><div class="line">        option broadcast &apos;192.168.123.255&apos;</div><div class="line">        option dns &apos;192.168.31.1&apos; //需要更改处</div></pre></td></tr></table></figure><p>这里是我配置好的，需要自行更改。option gateway 和 option dns 填写路由器的 IP，若树莓派获得的 IP 为 192.168.31.154，路由器 IP 为 192.168.31.1.<br>option ipaddr 项目定义了 OpenWrt 的 IP 地址，在完成网段设置后，IP 最后一段可根据自己的爱好修改（前提是符合规则且不和现有已分配 IP 冲突）。</p><p>Step 6 :重启网络</p><p>/etc/init.d/network restart<br>复制代码<br>Step 7 : 进入 openwrt 管理页面</p><p>在浏览器输入刚刚 Step 5 中定义的 option ipaddr,我这里是 192.168.31.1,就可以看到后台的管理界面</p><p>用户名：root</p><p>密码：password</p><p>Step 8 :关闭 DHCP 服务</p><p>在 “网络 - 接口 - Lan - 修改” 界面中，勾选下方的 “忽略此接口（不在此接口提供 DHCP 服务）”，并“保存&amp;应用”<br>Step 9: 主路由 DHCP 设置</p><p>这里不非必要的，<br>进入路由器后台中，将主路由的 DHCP 的默认网关和 DNS 服务器设置为第 5 步中 option ipaddr 项目中的 IP。<br>由于不想每台设备都通过这个 opwrt，只有自己设置的设备才走 openwrt 这个网关。<br>如果你修改了主路由 DHCP 请重启路由器。<br>到这里也差不多了教程，下面附上手动指定网关的教程<br>手动指定网关<br>如果路由器固件不支持自定义 DHCP 服务的网关及 DNS 地址（常见于路由器官方固件），或者只希望局域网下的个别设备接入旁路网关时，须在接入设备上做以下配置：</p><p>作者：HarryZhang6<br>链接：<a href="https://juejin.im/post/5e62711fe51d4526e91f5a1b" target="_blank" rel="external">https://juejin.im/post/5e62711fe51d4526e91f5a1b</a><br>来源：掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先我们说一下 openwrt,说白了你可以你理解为路由器系统的一种。&lt;br&gt;OpenWrt 是面向嵌入型设备的 Linux 发行版，所以 OpenWrt 系统运行时的资源占用率会很低。而树莓派的硬件性能要比普通路由器要高很多。虽然树莓派在硬件配置上的绝对优势能让 Open
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>树莓派Docker设置代理</title>
    <link href="https://blog.qzcool.com/2020/04/24/%E6%A0%91%E8%8E%93%E6%B4%BEDocker%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/"/>
    <id>https://blog.qzcool.com/2020/04/24/树莓派Docker设置代理/</id>
    <published>2020-04-24T06:31:44.000Z</published>
    <updated>2020-05-25T07:53:09.568Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 无法访问到仓库，网上找的方法都无效，发现 Docker 是通过 snap 安装的，通过下面的方法实现了代理访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/systemd/system/snap.docker.dockerd.service</div></pre></td></tr></table></figure><p>添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[Service]</div><div class="line">...</div><div class="line">Environment=&quot;HTTPS_PROXY=socks5://127.0.0.1:1080&quot;</div></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo systemctl daemon-reload</div><div class="line">sudo snap restart docker</div></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker login</div></pre></td></tr></table></figure><p>可以正常访问到仓库了。</p><p>其他（上面的设置突然无效了,使用下面有效）</p><p>写入代理设置</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo <span class="built_in">mkdir</span> /lib/systemd/system/docker.service.d</div><div class="line">cat &gt; /lib/systemd/system/docker.service.d/socks5-proxy.conf &lt;&lt;EOF</div><div class="line">[Service]</div><div class="line">Environment="ALL_PROXY=socks5://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">1080</span>"</div><div class="line">EOF</div></pre></td></tr></table></figure><p>重新加载配置</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl daemon-reload</div><div class="line">systemctl restart docker</div></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker 无法访问到仓库，网上找的方法都无效，发现 Docker 是通过 snap 安装的，通过下面的方法实现了代理访问&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo vim /etc/systemd/system/snap.docker.dockerd.service&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[Service]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Environment=&amp;quot;HTTPS_PROXY=socks5://127.0.0.1:1080&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo systemctl daemon-reload&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo snap restart docker&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker login&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以正常访问到仓库了。&lt;/p&gt;
&lt;p&gt;其他（上面的设置突然无效了,使用下面有效）&lt;/p&gt;
&lt;p&gt;写入代理设置&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo &lt;span class=&quot;built_in&quot;&gt;mkdir&lt;/span&gt; /lib/systemd/system/docker.service.d&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cat &amp;gt; /lib/systemd/system/docker.service.d/socks5-proxy.conf &amp;lt;&amp;lt;EOF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[Service]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Environment=&quot;ALL_PROXY=socks5://&lt;span class=&quot;number&quot;&gt;127&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1080&lt;/span&gt;&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOF&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新加载配置&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;systemctl daemon-reload&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;systemctl restart docker&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Mac设置Anaconda环境变量</title>
    <link href="https://blog.qzcool.com/2020/04/23/Mac%E8%AE%BE%E7%BD%AEAnaconda%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>https://blog.qzcool.com/2020/04/23/Mac设置Anaconda环境变量/</id>
    <published>2020-04-23T03:42:04.000Z</published>
    <updated>2020-04-23T03:48:57.861Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p>打开mac终端，输入 conda –version</p><p>返回是 conda command not found….命令不存在哇。</p><p>是需要把anaconda的路径配置到系统环境变量中。</p><p>然后是，在mac终端用命令行的形式，添加并激活anaconda的环境变量：</p><p>添加命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &apos;export PATH=&quot;/Users/software/anaconda3/bin:$PATH&quot;&apos; &gt;&gt; ~/.zshrc</div></pre></td></tr></table></figure><p>解释说明：echo是返回字符串的命令，~/目录是家目录，即/Users/&lt;个人用户名&gt;。两个&gt;(英文半角下的大于号)表示不改变后面文件中的原有内容，添加引号中的内容，有这个文件会自动新建。为什么是.zshrc文件呢，因为我的终端打开用的是-zsh工具。</p><p>总之就是，将单引号中的内容写到~/目录下的.ashrc文件中。</p><p>激活命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source ~/.zshrc</div></pre></td></tr></table></figure></p><p>目录下查看文件，结果如下图所示。（怎么显示隐藏文件：在终端中输命令<br>“<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">defaults write com.apple.finder AppleShowAllFiles -boolean true;killall Finder</div></pre></td></tr></table></figure></p><p>”即可）</p><h2 id="新建虚拟环境"><a href="#新建虚拟环境" class="headerlink" title="新建虚拟环境"></a>新建虚拟环境</h2><p>还想新建一个独立于默认base的编程环境，安装python3.6，和tf1.15.0</p><p>首先，创建命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">conda create -n py36tf1 numpy pandas python=3.6</div></pre></td></tr></table></figure><p>py36tf1是我给新建环境的命名，可改成自己的。numpy pandas是可以同时下载的包。指定python3.6版本。</p><p>然后，激活新环境命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source activate py36tf1</div></pre></td></tr></table></figure><p>再，可以使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">conda env list</div></pre></td></tr></table></figure><p>看看现在有哪些编程环境了。 </p><p>退出当前环境，使用命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">conda deactivate(同时也切换到另一环境)</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;设置环境变量&quot;&gt;&lt;a href=&quot;#设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;设置环境变量&quot;&gt;&lt;/a&gt;设置环境变量&lt;/h2&gt;&lt;p&gt;打开mac终端，输入 conda –version&lt;/p&gt;
&lt;p&gt;返回是 conda command not
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>通过树莓派4共享CMCC上网</title>
    <link href="https://blog.qzcool.com/2020/04/17/%E9%80%9A%E8%BF%87%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%85%B1%E4%BA%ABCMCC%E4%B8%8A%E7%BD%91/"/>
    <id>https://blog.qzcool.com/2020/04/17/通过树莓派4共享CMCC上网/</id>
    <published>2020-04-17T09:06:52.000Z</published>
    <updated>2020-08-18T08:08:39.058Z</updated>
    
    <content type="html"><![CDATA[<p>由于没有其他网络，只能通过 cmcc 上网，想通过共享的方式提供给其他设备上网。手头刚好有个闲置的树莓派 4，树莓派装了 ubuntu 的系统（测试树莓派自带系统同样可用）</p><p>步骤一：</p><p>a) 设置一下有线网口的 eth0 IP 192.168.1.2，做一下下 nat 转发</p><p>b) 把接有线网口的网线连接到小米路由的 wan 口</p><p>c) 然后把小米路由器的地址上网设置成静态 IP，网关设置树莓派的 IP</p><p>d) 通过其他设备测试是否可以成功连接互联网。</p><p>树莓派设置：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ifconfig eth0 192.168.1.2/24</div><div class="line">sysctl net.ipv4.ip_forward=1</div><div class="line">iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -j MASQUERADE</div><div class="line">iptables -t nat -nL</div></pre></td></tr></table></figure><p>小米路由器设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">192.168.1.3</div><div class="line">255.255.255.0</div><div class="line">网关：192.168.1.2</div><div class="line">DNS：8.8.8.8</div></pre></td></tr></table></figure><a id="more"></a><p>步骤二：</p><p>如果通过上述步骤无法成功联网，可以先把树莓派网线接到电脑的网口上，同时修改一下电脑的静态 ip，要和树莓派的同一个网段，测试一下是否能连接到树莓派，如果无法联通，重启一下树莓派，使用树莓派的默认 ip 进行设置。</p><p>查看树莓派的 ip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ifconfig</div></pre></td></tr></table></figure><p>然后把步骤一的 ip 改成当前树莓派的 ip 即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于没有其他网络，只能通过 cmcc 上网，想通过共享的方式提供给其他设备上网。手头刚好有个闲置的树莓派 4，树莓派装了 ubuntu 的系统（测试树莓派自带系统同样可用）&lt;/p&gt;
&lt;p&gt;步骤一：&lt;/p&gt;
&lt;p&gt;a) 设置一下有线网口的 eth0 IP 192.168.1.2，做一下下 nat 转发&lt;/p&gt;
&lt;p&gt;b) 把接有线网口的网线连接到小米路由的 wan 口&lt;/p&gt;
&lt;p&gt;c) 然后把小米路由器的地址上网设置成静态 IP，网关设置树莓派的 IP&lt;/p&gt;
&lt;p&gt;d) 通过其他设备测试是否可以成功连接互联网。&lt;/p&gt;
&lt;p&gt;树莓派设置：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ifconfig eth0 192.168.1.2/24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sysctl net.ipv4.ip_forward=1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -j MASQUERADE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;iptables -t nat -nL&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;小米路由器设置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;192.168.1.3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;255.255.255.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;网关：192.168.1.2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;DNS：8.8.8.8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Docker常用操作命令</title>
    <link href="https://blog.qzcool.com/2020/04/10/Docker%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>https://blog.qzcool.com/2020/04/10/Docker常用操作命令/</id>
    <published>2020-04-10T03:21:18.000Z</published>
    <updated>2020-04-10T07:24:45.095Z</updated>
    
    <content type="html"><![CDATA[<p>1、docker服务自动重启设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl enable docker.service</div></pre></td></tr></table></figure><p>2、docker容器自动启动设置</p><p>在运行docker容器时可以加如下参数来保证每次docker服务重启后容器也自动重启：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run --restart=always</div></pre></td></tr></table></figure><p>如果已经启动了则可以使用如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker update --restart=always &lt;CONTAINER ID&gt;</div></pre></td></tr></table></figure><p>3.进入docker 容器 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker exec -it 2a81dcba834f /bin/bash</div></pre></td></tr></table></figure><p>文件拷贝</p><p>容器-&gt;主机<br>docker cp 2a81dcba834f:/usr/local/etc/php/php.ini /Users/fredliu/Documents/PHP</p><p>主机-&gt;容器<br>docker cp /Users/fredliu/Documents/PHP/php.ini 2a81dcba834f:/usr/local/etc/php</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、docker服务自动重启设置&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;co
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Nginx泛域名添加https免费SSL证书Lets Encrypt(certbot)安装使用步骤
</title>
    <link href="https://blog.qzcool.com/2020/03/16/Nginx%E6%B3%9B%E5%9F%9F%E5%90%8D%E6%B7%BB%E5%8A%A0https%E5%85%8D%E8%B4%B9SSL%E8%AF%81%E4%B9%A6Lets-Encrypt-certbot-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4/"/>
    <id>https://blog.qzcool.com/2020/03/16/Nginx泛域名添加https免费SSL证书Lets-Encrypt-certbot-安装使用步骤/</id>
    <published>2020-03-16T08:39:28.000Z</published>
    <updated>2020-03-17T06:53:44.436Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍如何在 nginx 服务器上使用免费的 Let’s Encrypt 凭证，提供 HTTPS 的安全加密网页。</p><p>本教程的安装环境是:</p><blockquote><p>阿里云Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-105-generic x86_64)</p></blockquote><p>本人服务器上安装路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/home/frp/0.21.0/certbot-auto</div></pre></td></tr></table></figure><a id="more"></a><h2 id="STEP-1"><a href="#STEP-1" class="headerlink" title="STEP 1"></a><code>STEP 1</code></h2><p>从<code>Certbot</code>官方网站下载 <code>certbot-auto</code> 指令，並设定其执行权限：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget https://dl.eff.org/certbot-auto</div><div class="line">chmod a+x certbot-auto</div></pre></td></tr></table></figure></p><p><code>certbot-auto</code> 要放在哪裡都可以，建議一開始就找一個適合的地方放好，例如建立一個 <code>/opt/letsencrypt</code> 目錄，把 <code>certbot-auto</code> 放在這裡：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir /opt/letsencrypt</div><div class="line">mv certbot-auto /opt/letsencrypt/</div></pre></td></tr></table></figure></p><h2 id="STEP-2"><a href="#STEP-2" class="headerlink" title="STEP 2"></a><code>STEP 2</code></h2><p>執行 <code>certbot-auto</code>，讓它自動安裝所有相依套件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/letsencrypt/certbot-auto</div></pre></td></tr></table></figure></p><p>在执行安装<code>certbot-auto</code>过程中，阿里云服务器会提示下列错误:</p><blockquote><p>OSError: Command /opt/eff.org/certbot/venv/bin/python2.7 - setuptools pkg_resources pip wheel failed with error code 2  </p></blockquote><p>错误的原因是<code>certbot-auto</code>使用python2.7，但调用了python3的virtualenv，由于系统安装了多个版本的python的virtualenv，那么怎么删除呢？</p><p>解决方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">apt-get purge python-virtualenv python3-virtualenv virtualenv</div><div class="line"></div><div class="line">pip install virtualenv</div></pre></td></tr></table></figure><p>然后在执行安装 <code>certbot-auto</code>，终于安装成功！！！</p><h2 id="STEP-3"><a href="#STEP-3" class="headerlink" title="STEP 3"></a><code>STEP 3</code></h2><p>执行<code>certbot-auto</code>生成泛域名证书<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo ./certbot-auto certonly \</div><div class="line">--server https://acme-v02.api.letsencrypt.org/directory \</div><div class="line"> --manual --preferred-challenges dns -d *.qzcool.com</div></pre></td></tr></table></figure></p><p>执行后会要求验证DNS TXT，提示信息如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">lease deploy a DNS TXT record under the name</div><div class="line">_acme-challenge.qzcool.com with the following value:</div><div class="line"></div><div class="line">QcvPzuizmydLs1AmJF-J9eWOfOW7T89i******</div><div class="line"></div><div class="line">Before continuing, verify the record is deployed.</div></pre></td></tr></table></figure></p><p>泛域名解析需要验证<code>DNS TXT</code>，需要到域名提供商里面设置，子域名设置为<code>_acme-challenge</code>，记录类型选<code>TXT</code>记录，把<code>QcvPzuizmydLs1AmJF-J9eWOfOW7T89i******</code>填在记录值那一栏，<br>配置后可以执行下面命令，看是否正确返回。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dig _acme-challenge.qzcool.com txt</div></pre></td></tr></table></figure></p><p><code>DNS TXT</code> 配置完后，按回车继续执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- Congratulations! Your certificate and chain have been saved at:</div><div class="line">  /etc/letsencrypt/live/qzcool.com/fullchain.pem</div><div class="line">  Your key file has been saved at:</div><div class="line">  /etc/letsencrypt/live/qzcool.com/privkey.pem</div><div class="line">  Your cert will expire on 2018-12-19. To obtain a new or tweaked</div><div class="line">  version of this certificate in the future, simply run certbot-auto</div><div class="line">  again. To non-interactively renew *all* of your certificates, run</div><div class="line">  &quot;certbot-auto renew&quot;</div></pre></td></tr></table></figure><p>然后获取证书成功，记住证书生成的目录，需要到Nginx里面配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/etc/letsencrypt/live/qzcool.com/fullchain.pem</div><div class="line"> /etc/letsencrypt/live/qzcool.com/privkey.pem</div></pre></td></tr></table></figure></p><p><strong>补充一下<code>花生壳</code>的坑</strong></p><blockquote><p>当时为了能内网映射公网，把域名转到<code>花生壳</code>网站，结果遇到了一系列的坑，原来免费的东西，在这里各种要钱，下面列举下：<br>泛域名解析10元/年<br>可添加无限子域名 20元/年<br>TXT记录 10元/年<br>CNAME记录设置 10元/年<br>URL跳转设置 10元/年<br>奉劝大家不要用花生壳的域名服务器，太坑了，使用内网映射服务可以使用免费的frp，我的另外一篇文章frp使用教程可以参考。</p></blockquote><h2 id="STEP-4"><a href="#STEP-4" class="headerlink" title="STEP 4"></a><code>STEP 4</code></h2><p>如果你是第一次使用<code>nginx</code>，可以用<code>certbot</code>帮你自动生成主域名<code>nginx</code>配置，然后在修改相关证书配置。<br>访问<a href="https://certbot.eff.org/，选择你使用的软件和系统，在这里我们选择nginx和Ubuntu" target="_blank" rel="external">https://certbot.eff.org/，选择你使用的软件和系统，在这里我们选择nginx和Ubuntu</a> 16.04.</p><p>安装相关软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install software-properties-common</div><div class="line">$ sudo add-apt-repository ppa:certbot/certbot</div><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install python-certbot-nginx</div></pre></td></tr></table></figure><p>生成证书<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo certbot --nginx</div></pre></td></tr></table></figure></p><p>根据提示输入要添加https的域名，最后提示生成成功，访问你的域名，发现能使用https访问。</p><p>使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -t</div></pre></td></tr></table></figure></p><p>查看<code>nginx</code>的配置目录，我服务器上的配置目录<code>/etc/nginx/nginx.conf</code>，修改配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/nginx/sites-enabled/default</div></pre></td></tr></table></figure></p><p>记得把<code>try_files $uri $uri/ =404;</code>这个注释掉，否则访问会出错，暂时没查这个是什么问题，修改配置如下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"># /etc/nginx/sites-enabled/default </div><div class="line">server_name *.qzcool.com; # managed by Certbot </div><div class="line">location / &#123;</div><div class="line">                # First attempt to serve request as file, then</div><div class="line">                # as directory, then fall back to displaying a 404. </div><div class="line">                proxy_pass http://172.17.0.1:8080;</div><div class="line">                proxy_set_header    Host            $host:80;</div><div class="line">                proxy_set_header    X-Real-IP       $remote_addr;</div><div class="line">                proxy_set_header    X-Forwarded-For           $proxy_add_x_forwarded_for;</div><div class="line">                proxy_hide_header   X-Powered-By; </div><div class="line">    #  try_files $uri $uri/ =404;</div><div class="line">        &#125; </div><div class="line">    listen [::]:443 ssl ipv6only=on; # managed by Certbot</div><div class="line">    listen 443 ssl; # managed by Certbot</div><div class="line">    ssl_certificate /etc/letsencrypt/live/dhbmw.com/fullchain.pem; # managed by Certbot</div><div class="line">    ssl_certificate_key /etc/letsencrypt/live/dhbmw.com/privkey.pem; # managed by Certbot</div><div class="line">    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot</div><div class="line">    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot </div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">        listen 80 ;</div><div class="line">        server_name www.qzcool.com;</div><div class="line">        rewrite ^(.*)$ https://$host$1 permanent;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>nginx从新加载配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -s reload</div></pre></td></tr></table></figure></p><h2 id="证书定时更新"><a href="#证书定时更新" class="headerlink" title="证书定时更新"></a>证书定时更新</h2><p>Let’s Encrypt 的憑證使用期限只有三個月，在憑證到期前的一個月可以使用 certbot-auto 來更新憑證，在實際更新之前我們可以加入 –dry-run 參數，先進行測試：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/letsencrypt/certbot-auto renew --dry-run</div></pre></td></tr></table></figure></p><p>若測試沒問題，就可以使用正式指令來更新：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/letsencrypt/certbot-auto renew --quiet --no-self-upgrade</div></pre></td></tr></table></figure></p><p>而為了方便起見，可以將這個更新指令寫在 /opt/letsencrypt/renew.sh 指令稿中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line">/opt/letsencrypt/certbot-auto renew --quiet --no-self-upgrade --post-hook &quot;service nginx reload&quot;</div></pre></td></tr></table></figure></p><p>這裡我又加上一個 –post-hook 的設定，讓憑證更新完後，可以自動重新載入 nginx 伺服器的設定，讓憑證生效。</p><p>接著把這個 /opt/letsencrypt/renew.sh 指令稿寫進 crontab 中，<br>键入<code>crontab  -e</code> 编辑crontab服务文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># m h  dom mon dow   command</div><div class="line">30 2 * * 0 /opt/letsencrypt/renew.sh</div></pre></td></tr></table></figure><p>官方的建議是這個指令可以一天執行兩次，讓伺服器的憑證隨時保持在最新的狀態，這裡我是設定讓伺服器每週日凌晨兩點半進行憑證的檢查與更新，Certbot 只有在憑證到期前一個月才會進行更新，如果憑證尚未到期，就不會更新。</p><p><strong>crontab相关命令</strong>: </p><blockquote><p>查看该用户下的crontab服务是否创建成功， 用<code>crontab  -l</code>命令<br>启动crontab服务 <code>sudo service crond start</code><br>查看服务是否已经运行用 <code>ps -ax | grep cron</code></p></blockquote><h3 id="413-Request-Entity-Too-Large报错处理"><a href="#413-Request-Entity-Too-Large报错处理" class="headerlink" title="413 Request Entity Too Large报错处理"></a>413 Request Entity Too Large报错处理</h3><p>打开nginx主配置文件nginx.conf，一般在<br>vim /etc/nginx/nginx.conf<br>这个位置，找到http{}段并修改以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">client_max_body_size 2m;</div></pre></td></tr></table></figure></p><p>当中的2m修改成你需要的允许文件大小。</p><p>参考:<br><a href="https://blog.gtwang.org/linux/secure-nginx-with-lets-encrypt-ssl-certificate-on-ubuntu-and-debian/" title="NGINX 使用 Let’s Encrypt 免費 SSL 憑證設定 HTTPS 安全加密網頁教學" target="_blank" rel="external">1.NGINX 使用 Let’s Encrypt 免費 SSL 憑證設定 HTTPS 安全加密網頁教學</a> </p><p><a href="https://certbot.eff.org/lets-encrypt/ubuntuxenial-nginx" target="_blank" rel="external">2.Certbot nginx下配置SSL</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍如何在 nginx 服务器上使用免费的 Let’s Encrypt 凭证，提供 HTTPS 的安全加密网页。&lt;/p&gt;
&lt;p&gt;本教程的安装环境是:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;阿里云Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-105-generic x86_64)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本人服务器上安装路径：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/home/frp/0.21.0/certbot-auto&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>iMac如何通过快捷键连接AirPods耳机</title>
    <link href="https://blog.qzcool.com/2020/01/14/iMac%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%BF%9E%E6%8E%A5AirPods%E8%80%B3%E6%9C%BA/"/>
    <id>https://blog.qzcool.com/2020/01/14/iMac如何通过快捷键连接AirPods耳机/</id>
    <published>2020-01-14T03:32:49.000Z</published>
    <updated>2020-01-14T06:38:27.048Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>每次从手机切换耳机到电脑都要手动去点击一下,很麻烦,找到了通过快捷键切换的方法,<br>该方法适用于其他蓝牙耳机</p></blockquote><h2 id="1-安装BluetoothConnector"><a href="#1-安装BluetoothConnector" class="headerlink" title="1 .安装BluetoothConnector:"></a>1 .安装BluetoothConnector:</h2><p><a href="https://github.com/lapfelix/BluetoothConnector" target="_blank" rel="external">BluetoothConnector</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install bluetoothconnector</div></pre></td></tr></table></figure><p>安装成功后打开Terminals输入以下命令,查看蓝牙耳机mac地址:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bluetoothconnector</div></pre></td></tr></table></figure><p>返回本机连接的蓝牙设备列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Get the MAC address from the list below (if your device is missing, pair it with your computer first):</div><div class="line">f8-70-c0-7a-eb-bf - alp的AirPods</div><div class="line">......</div></pre></td></tr></table></figure><p>输入下列命令进行测试:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">BluetoothConnector f8-70-c0-7a-eb-bf  --notify</div></pre></td></tr></table></figure><p>执行成功就会弹出通知,如果已经连接则会断开,记得把mac地址改为你自己的蓝牙设备</p><h3 id="2-设置键盘快捷键"><a href="#2-设置键盘快捷键" class="headerlink" title="2.设置键盘快捷键"></a>2.设置键盘快捷键</h3><p>1.打开“启动台”-》“other”-》“自动操作”<br>新建-》快速操作<br>把运行AppleScript拖动到工作路程,输入以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">on run &#123;input, parameters&#125;v</div><div class="line">do shell script &quot;/usr/local/bin/BluetoothConnector f8-70-c0-7a-eb-bf --notify&quot;</div><div class="line">return input</div><div class="line">end run</div></pre></td></tr></table></figure></p><p>测试运行成功,保存,名称可以自己命名</p><p>2.设置键盘快捷键<br>打开“系统偏好”-》“键盘”-》“快捷键”-》“服务”-》找到刚才保存的服务,设置你想要的快捷键.至此大功告成</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;每次从手机切换耳机到电脑都要手动去点击一下,很麻烦,找到了通过快捷键切换的方法,&lt;br&gt;该方法适用于其他蓝牙耳机&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-安装BluetoothConnector&quot;&gt;&lt;a href=&quot;#1-安装Blu
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AirPods2使用体验</title>
    <link href="https://blog.qzcool.com/2019/12/24/AirPods2%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    <id>https://blog.qzcool.com/2019/12/24/AirPods2使用体验/</id>
    <published>2019-12-24T01:55:07.000Z</published>
    <updated>2019-12-24T02:49:16.551Z</updated>
    
    <content type="html"><![CDATA[<p>为情怀买单,双11某东做活动,AirPods2降了300快,就入手了一个,当时AirPods出来的时候就很想买一个,但是价格有点贵而且是刚出来的产品想想等第二代有机会再入手一个,等到今年AirPods终于出二代了,出二代的时候网上流传要出一个Pro版本,等到10月份果然出了一个Pro版的,但是是入耳式的,怕佩戴不舒服就放弃而且价格是AirPods的两倍就决定买AirPods了.<br><img src="/2019/12/24/AirPods2使用体验/Airpods.jpg" alt="This is an image" title="This is an image"></p><a id="more"></a><p>如果你是使用苹果全家桶,使用起来还是很方便的,比起以前使用有线耳机方便太多了.可以方便却换到Mac电脑,AppleTv.因为没有降噪,在嘈杂的环境中还是不要使用耳机了,基本上没法安静的听音乐.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为情怀买单,双11某东做活动,AirPods2降了300快,就入手了一个,当时AirPods出来的时候就很想买一个,但是价格有点贵而且是刚出来的产品想想等第二代有机会再入手一个,等到今年AirPods终于出二代了,出二代的时候网上流传要出一个Pro版本,等到10月份果然出了一个Pro版的,但是是入耳式的,怕佩戴不舒服就放弃而且价格是AirPods的两倍就决定买AirPods了.&lt;br&gt;&lt;img src=&quot;/2019/12/24/AirPods2使用体验/Airpods.jpg&quot; alt=&quot;This is an image&quot; title=&quot;This is an image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PyCharm激活方法</title>
    <link href="https://blog.qzcool.com/2019/12/24/PyCharm%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.qzcool.com/2019/12/24/PyCharm激活方法/</id>
    <published>2019-12-24T01:25:36.000Z</published>
    <updated>2020-03-16T08:32:16.163Z</updated>
    
    <content type="html"><![CDATA[<p>修改host<br>MacOS 修改 /etc/hosts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">10.0.0.0 account.jetbrains.com</div><div class="line">10.0.0.0 www.jetbrains.com</div></pre></td></tr></table></figure><p>注意一定要写一个访问不了的地址,如果写成 0.0.0.0 会提示激活码无法验证</p><p>激活码,到2020年7月<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Y9MXSIF79G-eyJsaWNlbnNlSWQiOiJZOU1YU0lGNzlHIiwibGljZW5zZWVOYW1lIjoiSkJGYW1pbHkgQ2hpbmEiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjYiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjUifSx7ImNvZGUiOiJBQyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjYiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjUifSx7ImNvZGUiOiJEUE4iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTI2IiwicGFpZFVwVG8iOiIyMDIwLTA3LTI1In0seyJjb2RlIjoiUFMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTI2IiwicGFpZFVwVG8iOiIyMDIwLTA3LTI1In0seyJjb2RlIjoiR08iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTI2IiwicGFpZFVwVG8iOiIyMDIwLTA3LTI1In0seyJjb2RlIjoiRE0iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTI2IiwicGFpZFVwVG8iOiIyMDIwLTA3LTI1In0seyJjb2RlIjoiQ0wiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTI2IiwicGFpZFVwVG8iOiIyMDIwLTA3LTI1In0seyJjb2RlIjoiUlMwIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IlJDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IlJEIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IlBDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IlJNIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IldTIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IkRCIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IkRDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yNiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yNSJ9LHsiY29kZSI6IlJTVSIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjYiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjUifV0sImhhc2giOiIxMzgzODYyOS8wIiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-rI4et6OSKLA4gvOzxtyp48SCWtjwsOSQBJittaw6BOVJOwVBz0p31wBWDFSdIogdRPKquk2BAou7N694entEn4/Db3Ol5uotDtUd2MHuo+BBu9QcwIoX3RTrnYLwJfTlEJfRH/3TF3WtkPGQZQQcw/23hsZzdC/WJY6tmvyTijIBScUsvIOxZ+8REbWbkTQx1KliliFyrMua7hit8LThzfffZloHciaHwUP9BjxEjU0qQi+yFacSXjxEZERJT25hZrMN+bqBxcn59/4UJBrITt8YpLIlydt0+6vMSWAMawMzKpeDEDInKy0XomauTIUfxS4sbw/dSyVdSrh+IuOc7g==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;修改host&lt;br&gt;MacOS 修改 /etc/hosts&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu 和 windows10 配置双网卡路由</title>
    <link href="https://blog.qzcool.com/2019/11/15/ubuntu-%E9%85%8D%E7%BD%AE%E5%8F%8C%E7%BD%91%E5%8D%A1%E8%B7%AF%E7%94%B1/"/>
    <id>https://blog.qzcool.com/2019/11/15/ubuntu-配置双网卡路由/</id>
    <published>2019-11-15T07:09:58.000Z</published>
    <updated>2019-12-24T01:33:47.865Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ubuntu配置双网卡路由"><a href="#ubuntu配置双网卡路由" class="headerlink" title="ubuntu配置双网卡路由"></a>ubuntu配置双网卡路由</h2><p>1.显示当前默认路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">route</div><div class="line"></div><div class="line">default         XiaoQiang       0.0.0.0         UG    600    0        0 wlxf48ceb4c4436</div><div class="line">default         _gateway        0.0.0.0         UG    20100  0        0 eno1</div></pre></td></tr></table></figure><p>删除当前默认路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo route delete default</div></pre></td></tr></table></figure><p>2.添加内网ip路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo route add -net 10.49.28.0 netmask 255.255.255.0 gw 10.49.76.129 eno1</div><div class="line">sudo route add -net 192.168.14.0 netmask 255.255.255.0 gw 10.49.76.129 eno1</div><div class="line">sudo route add -net 192.168.8.0 netmask 255.255.255.0 gw 10.49.76.129 eno1</div></pre></td></tr></table></figure><p>3.添加外网路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo route add -net 0.0.0.0 netmask 0.0.0.0 gw 192.168.31.1 wlxf48ceb4c4436</div></pre></td></tr></table></figure><p>删除配置的路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo route del -net 192.168.8.0 netmask 255.255.255.0</div><div class="line">sudo route del -net  0.0.0.0 netmask 255.255.255.0</div></pre></td></tr></table></figure><h2 id="windows-配置双网卡路由"><a href="#windows-配置双网卡路由" class="headerlink" title="windows 配置双网卡路由"></a>windows 配置双网卡路由</h2><p>查看网卡信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ipconfig</div><div class="line"></div><div class="line">13 有线网口</div><div class="line"></div><div class="line">25 无线网口</div></pre></td></tr></table></figure><p>1.删除默认路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">route delete 0.0.0.0</div></pre></td></tr></table></figure><p>2.添加内网路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">route  -p add   192.168.14.0 mask 255.255.255.0   10.49.76.129  if 13</div><div class="line">route  -p add   10.49.28.0 mask 255.255.255.0   10.49.76.129  if 13</div></pre></td></tr></table></figure><p>3.添加外网路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">route -p add 0.0.0.0 mask 0.0.0.0 192.168.31.1 if 25</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ubuntu配置双网卡路由&quot;&gt;&lt;a href=&quot;#ubuntu配置双网卡路由&quot; class=&quot;headerlink&quot; title=&quot;ubuntu配置双网卡路由&quot;&gt;&lt;/a&gt;ubuntu配置双网卡路由&lt;/h2&gt;&lt;p&gt;1.显示当前默认路由&lt;/p&gt;
&lt;figure cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
